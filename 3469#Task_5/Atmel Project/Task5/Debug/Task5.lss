
Task5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002e2  00800200  00005822  000058b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00005822  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000076  008004e2  008004e2  00005b98  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00005b98  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000280  00000000  00000000  00005bc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000940d  00000000  00000000  00005e48  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000047d  00000000  00000000  0000f255  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00004e90  00000000  00000000  0000f6d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000740  00000000  00000000  00014564  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000753  00000000  00000000  00014ca4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000667c  00000000  00000000  000153f7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000338  00000000  00000000  0001ba73  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	90 c0       	rjmp	.+288    	; 0x126 <__bad_interrupt>
       6:	00 00       	nop
       8:	8e c0       	rjmp	.+284    	; 0x126 <__bad_interrupt>
       a:	00 00       	nop
       c:	8c c0       	rjmp	.+280    	; 0x126 <__bad_interrupt>
       e:	00 00       	nop
      10:	8a c0       	rjmp	.+276    	; 0x126 <__bad_interrupt>
      12:	00 00       	nop
      14:	88 c0       	rjmp	.+272    	; 0x126 <__bad_interrupt>
      16:	00 00       	nop
      18:	86 c0       	rjmp	.+268    	; 0x126 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	84 c0       	rjmp	.+264    	; 0x126 <__bad_interrupt>
      1e:	00 00       	nop
      20:	82 c0       	rjmp	.+260    	; 0x126 <__bad_interrupt>
      22:	00 00       	nop
      24:	80 c0       	rjmp	.+256    	; 0x126 <__bad_interrupt>
      26:	00 00       	nop
      28:	7e c0       	rjmp	.+252    	; 0x126 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7c c0       	rjmp	.+248    	; 0x126 <__bad_interrupt>
      2e:	00 00       	nop
      30:	7a c0       	rjmp	.+244    	; 0x126 <__bad_interrupt>
      32:	00 00       	nop
      34:	78 c0       	rjmp	.+240    	; 0x126 <__bad_interrupt>
      36:	00 00       	nop
      38:	76 c0       	rjmp	.+236    	; 0x126 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	74 c0       	rjmp	.+232    	; 0x126 <__bad_interrupt>
      3e:	00 00       	nop
      40:	72 c0       	rjmp	.+228    	; 0x126 <__bad_interrupt>
      42:	00 00       	nop
      44:	70 c0       	rjmp	.+224    	; 0x126 <__bad_interrupt>
      46:	00 00       	nop
      48:	6e c0       	rjmp	.+220    	; 0x126 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6c c0       	rjmp	.+216    	; 0x126 <__bad_interrupt>
      4e:	00 00       	nop
      50:	6a c0       	rjmp	.+212    	; 0x126 <__bad_interrupt>
      52:	00 00       	nop
      54:	68 c0       	rjmp	.+208    	; 0x126 <__bad_interrupt>
      56:	00 00       	nop
      58:	66 c0       	rjmp	.+204    	; 0x126 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	64 c0       	rjmp	.+200    	; 0x126 <__bad_interrupt>
      5e:	00 00       	nop
      60:	62 c0       	rjmp	.+196    	; 0x126 <__bad_interrupt>
      62:	00 00       	nop
      64:	60 c0       	rjmp	.+192    	; 0x126 <__bad_interrupt>
      66:	00 00       	nop
      68:	5e c0       	rjmp	.+188    	; 0x126 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5c c0       	rjmp	.+184    	; 0x126 <__bad_interrupt>
      6e:	00 00       	nop
      70:	5a c0       	rjmp	.+180    	; 0x126 <__bad_interrupt>
      72:	00 00       	nop
      74:	58 c0       	rjmp	.+176    	; 0x126 <__bad_interrupt>
      76:	00 00       	nop
      78:	56 c0       	rjmp	.+172    	; 0x126 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	54 c0       	rjmp	.+168    	; 0x126 <__bad_interrupt>
      7e:	00 00       	nop
      80:	52 c0       	rjmp	.+164    	; 0x126 <__bad_interrupt>
      82:	00 00       	nop
      84:	50 c0       	rjmp	.+160    	; 0x126 <__bad_interrupt>
      86:	00 00       	nop
      88:	4e c0       	rjmp	.+156    	; 0x126 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4c c0       	rjmp	.+152    	; 0x126 <__bad_interrupt>
      8e:	00 00       	nop
      90:	4a c0       	rjmp	.+148    	; 0x126 <__bad_interrupt>
      92:	00 00       	nop
      94:	48 c0       	rjmp	.+144    	; 0x126 <__bad_interrupt>
      96:	00 00       	nop
      98:	46 c0       	rjmp	.+140    	; 0x126 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	44 c0       	rjmp	.+136    	; 0x126 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	42 c0       	rjmp	.+132    	; 0x126 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	40 c0       	rjmp	.+128    	; 0x126 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3e c0       	rjmp	.+124    	; 0x126 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3c c0       	rjmp	.+120    	; 0x126 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	3a c0       	rjmp	.+116    	; 0x126 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	38 c0       	rjmp	.+112    	; 0x126 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	36 c0       	rjmp	.+108    	; 0x126 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	34 c0       	rjmp	.+104    	; 0x126 <__bad_interrupt>
      be:	00 00       	nop
      c0:	32 c0       	rjmp	.+100    	; 0x126 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	30 c0       	rjmp	.+96     	; 0x126 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2e c0       	rjmp	.+92     	; 0x126 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2c c0       	rjmp	.+88     	; 0x126 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	2a c0       	rjmp	.+84     	; 0x126 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	28 c0       	rjmp	.+80     	; 0x126 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	26 c0       	rjmp	.+76     	; 0x126 <__bad_interrupt>
      da:	00 00       	nop
      dc:	24 c0       	rjmp	.+72     	; 0x126 <__bad_interrupt>
      de:	00 00       	nop
      e0:	22 c0       	rjmp	.+68     	; 0x126 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	14 e0       	ldi	r17, 0x04	; 4
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e2 e2       	ldi	r30, 0x22	; 34
      fc:	f8 e5       	ldi	r31, 0x58	; 88
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a2 3e       	cpi	r26, 0xE2	; 226
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	25 e0       	ldi	r18, 0x05	; 5
     110:	a2 ee       	ldi	r26, 0xE2	; 226
     112:	b4 e0       	ldi	r27, 0x04	; 4
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a8 35       	cpi	r26, 0x58	; 88
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 28 17 	call	0x2e50	; 0x2e50 <main>
     122:	0c 94 0f 2c 	jmp	0x581e	; 0x581e <_exit>

00000126 <__bad_interrupt>:
     126:	6c cf       	rjmp	.-296    	; 0x0 <__vectors>

00000128 <lcd_port_config>:
            break;
        }
    }
    stop();
    OCR5AL = base;
    OCR5BL = base;
     128:	87 b1       	in	r24, 0x07	; 7
     12a:	87 6f       	ori	r24, 0xF7	; 247
     12c:	87 b9       	out	0x07, r24	; 7
     12e:	88 b1       	in	r24, 0x08	; 8
     130:	88 70       	andi	r24, 0x08	; 8
     132:	88 b9       	out	0x08, r24	; 8
     134:	08 95       	ret

00000136 <lcd_set_4bit>:
     136:	86 e6       	ldi	r24, 0x66	; 102
     138:	9e e0       	ldi	r25, 0x0E	; 14
     13a:	01 97       	sbiw	r24, 0x01	; 1
     13c:	f1 f7       	brne	.-4      	; 0x13a <lcd_set_4bit+0x4>
     13e:	00 00       	nop
     140:	40 98       	cbi	0x08, 0	; 8
     142:	41 98       	cbi	0x08, 1	; 8
     144:	80 e3       	ldi	r24, 0x30	; 48
     146:	88 b9       	out	0x08, r24	; 8
     148:	42 9a       	sbi	0x08, 2	; 8
     14a:	8f ef       	ldi	r24, 0xFF	; 255
     14c:	97 e4       	ldi	r25, 0x47	; 71
     14e:	01 97       	sbiw	r24, 0x01	; 1
     150:	f1 f7       	brne	.-4      	; 0x14e <lcd_set_4bit+0x18>
     152:	00 c0       	rjmp	.+0      	; 0x154 <lcd_set_4bit+0x1e>
     154:	00 00       	nop
     156:	42 98       	cbi	0x08, 2	; 8
     158:	86 e6       	ldi	r24, 0x66	; 102
     15a:	9e e0       	ldi	r25, 0x0E	; 14
     15c:	01 97       	sbiw	r24, 0x01	; 1
     15e:	f1 f7       	brne	.-4      	; 0x15c <lcd_set_4bit+0x26>
     160:	00 00       	nop
     162:	40 98       	cbi	0x08, 0	; 8
     164:	41 98       	cbi	0x08, 1	; 8
     166:	80 e3       	ldi	r24, 0x30	; 48
     168:	88 b9       	out	0x08, r24	; 8
     16a:	42 9a       	sbi	0x08, 2	; 8
     16c:	8f ef       	ldi	r24, 0xFF	; 255
     16e:	97 e4       	ldi	r25, 0x47	; 71
     170:	01 97       	sbiw	r24, 0x01	; 1
     172:	f1 f7       	brne	.-4      	; 0x170 <lcd_set_4bit+0x3a>
     174:	00 c0       	rjmp	.+0      	; 0x176 <lcd_set_4bit+0x40>
     176:	00 00       	nop
     178:	42 98       	cbi	0x08, 2	; 8
     17a:	86 e6       	ldi	r24, 0x66	; 102
     17c:	9e e0       	ldi	r25, 0x0E	; 14
     17e:	01 97       	sbiw	r24, 0x01	; 1
     180:	f1 f7       	brne	.-4      	; 0x17e <lcd_set_4bit+0x48>
     182:	00 00       	nop
     184:	40 98       	cbi	0x08, 0	; 8
     186:	41 98       	cbi	0x08, 1	; 8
     188:	80 e3       	ldi	r24, 0x30	; 48
     18a:	88 b9       	out	0x08, r24	; 8
     18c:	42 9a       	sbi	0x08, 2	; 8
     18e:	8f ef       	ldi	r24, 0xFF	; 255
     190:	97 e4       	ldi	r25, 0x47	; 71
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <lcd_set_4bit+0x5c>
     196:	00 c0       	rjmp	.+0      	; 0x198 <lcd_set_4bit+0x62>
     198:	00 00       	nop
     19a:	42 98       	cbi	0x08, 2	; 8
     19c:	86 e6       	ldi	r24, 0x66	; 102
     19e:	9e e0       	ldi	r25, 0x0E	; 14
     1a0:	01 97       	sbiw	r24, 0x01	; 1
     1a2:	f1 f7       	brne	.-4      	; 0x1a0 <lcd_set_4bit+0x6a>
     1a4:	00 00       	nop
     1a6:	40 98       	cbi	0x08, 0	; 8
     1a8:	41 98       	cbi	0x08, 1	; 8
     1aa:	80 e2       	ldi	r24, 0x20	; 32
     1ac:	88 b9       	out	0x08, r24	; 8
     1ae:	42 9a       	sbi	0x08, 2	; 8
     1b0:	8f ef       	ldi	r24, 0xFF	; 255
     1b2:	97 e4       	ldi	r25, 0x47	; 71
     1b4:	01 97       	sbiw	r24, 0x01	; 1
     1b6:	f1 f7       	brne	.-4      	; 0x1b4 <lcd_set_4bit+0x7e>
     1b8:	00 c0       	rjmp	.+0      	; 0x1ba <lcd_set_4bit+0x84>
     1ba:	00 00       	nop
     1bc:	42 98       	cbi	0x08, 2	; 8
     1be:	08 95       	ret

000001c0 <lcd_wr_command>:
     1c0:	98 b1       	in	r25, 0x08	; 8
     1c2:	9f 70       	andi	r25, 0x0F	; 15
     1c4:	98 b9       	out	0x08, r25	; 8
     1c6:	98 b1       	in	r25, 0x08	; 8
     1c8:	28 2f       	mov	r18, r24
     1ca:	20 7f       	andi	r18, 0xF0	; 240
     1cc:	92 2b       	or	r25, r18
     1ce:	98 b9       	out	0x08, r25	; 8
     1d0:	40 98       	cbi	0x08, 0	; 8
     1d2:	41 98       	cbi	0x08, 1	; 8
     1d4:	42 9a       	sbi	0x08, 2	; 8
     1d6:	ef ef       	ldi	r30, 0xFF	; 255
     1d8:	f7 e4       	ldi	r31, 0x47	; 71
     1da:	31 97       	sbiw	r30, 0x01	; 1
     1dc:	f1 f7       	brne	.-4      	; 0x1da <lcd_wr_command+0x1a>
     1de:	00 c0       	rjmp	.+0      	; 0x1e0 <lcd_wr_command+0x20>
     1e0:	00 00       	nop
     1e2:	42 98       	cbi	0x08, 2	; 8
     1e4:	98 b1       	in	r25, 0x08	; 8
     1e6:	9f 70       	andi	r25, 0x0F	; 15
     1e8:	98 b9       	out	0x08, r25	; 8
     1ea:	98 b1       	in	r25, 0x08	; 8
     1ec:	82 95       	swap	r24
     1ee:	80 7f       	andi	r24, 0xF0	; 240
     1f0:	89 2b       	or	r24, r25
     1f2:	88 b9       	out	0x08, r24	; 8
     1f4:	40 98       	cbi	0x08, 0	; 8
     1f6:	41 98       	cbi	0x08, 1	; 8
     1f8:	42 9a       	sbi	0x08, 2	; 8
     1fa:	8f ef       	ldi	r24, 0xFF	; 255
     1fc:	97 e4       	ldi	r25, 0x47	; 71
     1fe:	01 97       	sbiw	r24, 0x01	; 1
     200:	f1 f7       	brne	.-4      	; 0x1fe <lcd_wr_command+0x3e>
     202:	00 c0       	rjmp	.+0      	; 0x204 <lcd_wr_command+0x44>
     204:	00 00       	nop
     206:	42 98       	cbi	0x08, 2	; 8
     208:	08 95       	ret

0000020a <lcd_init>:
     20a:	95 df       	rcall	.-214    	; 0x136 <lcd_set_4bit>
     20c:	86 e6       	ldi	r24, 0x66	; 102
     20e:	9e e0       	ldi	r25, 0x0E	; 14
     210:	01 97       	sbiw	r24, 0x01	; 1
     212:	f1 f7       	brne	.-4      	; 0x210 <lcd_init+0x6>
     214:	00 00       	nop
     216:	88 e2       	ldi	r24, 0x28	; 40
     218:	d3 df       	rcall	.-90     	; 0x1c0 <lcd_wr_command>
     21a:	81 e0       	ldi	r24, 0x01	; 1
     21c:	d1 df       	rcall	.-94     	; 0x1c0 <lcd_wr_command>
     21e:	86 e0       	ldi	r24, 0x06	; 6
     220:	cf df       	rcall	.-98     	; 0x1c0 <lcd_wr_command>
     222:	8e e0       	ldi	r24, 0x0E	; 14
     224:	cd df       	rcall	.-102    	; 0x1c0 <lcd_wr_command>
     226:	80 e8       	ldi	r24, 0x80	; 128
     228:	cb cf       	rjmp	.-106    	; 0x1c0 <lcd_wr_command>
     22a:	08 95       	ret

0000022c <lcd_wr_char>:
     22c:	98 b1       	in	r25, 0x08	; 8
     22e:	9f 70       	andi	r25, 0x0F	; 15
     230:	98 b9       	out	0x08, r25	; 8
     232:	98 b1       	in	r25, 0x08	; 8
     234:	28 2f       	mov	r18, r24
     236:	20 7f       	andi	r18, 0xF0	; 240
     238:	92 2b       	or	r25, r18
     23a:	98 b9       	out	0x08, r25	; 8
     23c:	40 9a       	sbi	0x08, 0	; 8
     23e:	41 98       	cbi	0x08, 1	; 8
     240:	42 9a       	sbi	0x08, 2	; 8
     242:	ef ef       	ldi	r30, 0xFF	; 255
     244:	f7 e4       	ldi	r31, 0x47	; 71
     246:	31 97       	sbiw	r30, 0x01	; 1
     248:	f1 f7       	brne	.-4      	; 0x246 <lcd_wr_char+0x1a>
     24a:	00 c0       	rjmp	.+0      	; 0x24c <lcd_wr_char+0x20>
     24c:	00 00       	nop
     24e:	42 98       	cbi	0x08, 2	; 8
     250:	98 b1       	in	r25, 0x08	; 8
     252:	9f 70       	andi	r25, 0x0F	; 15
     254:	98 b9       	out	0x08, r25	; 8
     256:	98 b1       	in	r25, 0x08	; 8
     258:	82 95       	swap	r24
     25a:	80 7f       	andi	r24, 0xF0	; 240
     25c:	89 2b       	or	r24, r25
     25e:	88 b9       	out	0x08, r24	; 8
     260:	40 9a       	sbi	0x08, 0	; 8
     262:	41 98       	cbi	0x08, 1	; 8
     264:	42 9a       	sbi	0x08, 2	; 8
     266:	8f ef       	ldi	r24, 0xFF	; 255
     268:	97 e4       	ldi	r25, 0x47	; 71
     26a:	01 97       	sbiw	r24, 0x01	; 1
     26c:	f1 f7       	brne	.-4      	; 0x26a <lcd_wr_char+0x3e>
     26e:	00 c0       	rjmp	.+0      	; 0x270 <lcd_wr_char+0x44>
     270:	00 00       	nop
     272:	42 98       	cbi	0x08, 2	; 8
     274:	08 95       	ret

00000276 <lcd_home>:
     276:	80 e8       	ldi	r24, 0x80	; 128
     278:	a3 cf       	rjmp	.-186    	; 0x1c0 <lcd_wr_command>
     27a:	08 95       	ret

0000027c <lcd_string>:
     27c:	cf 93       	push	r28
     27e:	df 93       	push	r29
     280:	ec 01       	movw	r28, r24
     282:	88 81       	ld	r24, Y
     284:	88 23       	and	r24, r24
     286:	29 f0       	breq	.+10     	; 0x292 <lcd_string+0x16>
     288:	21 96       	adiw	r28, 0x01	; 1
     28a:	d0 df       	rcall	.-96     	; 0x22c <lcd_wr_char>
     28c:	89 91       	ld	r24, Y+
     28e:	81 11       	cpse	r24, r1
     290:	fc cf       	rjmp	.-8      	; 0x28a <lcd_string+0xe>
     292:	df 91       	pop	r29
     294:	cf 91       	pop	r28
     296:	08 95       	ret

00000298 <lcd_print>:
     298:	0f 93       	push	r16
     29a:	1f 93       	push	r17
     29c:	cf 93       	push	r28
     29e:	df 93       	push	r29
     2a0:	8a 01       	movw	r16, r20
     2a2:	e9 01       	movw	r28, r18
     2a4:	88 23       	and	r24, r24
     2a6:	11 f0       	breq	.+4      	; 0x2ac <lcd_print+0x14>
     2a8:	61 11       	cpse	r22, r1
     2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <lcd_print+0x18>
     2ac:	e4 df       	rcall	.-56     	; 0x276 <lcd_home>
     2ae:	1a c0       	rjmp	.+52     	; 0x2e4 <lcd_print+0x4c>
     2b0:	82 30       	cpi	r24, 0x02	; 2
     2b2:	69 f0       	breq	.+26     	; 0x2ce <lcd_print+0x36>
     2b4:	18 f4       	brcc	.+6      	; 0x2bc <lcd_print+0x24>
     2b6:	81 30       	cpi	r24, 0x01	; 1
     2b8:	31 f0       	breq	.+12     	; 0x2c6 <lcd_print+0x2e>
     2ba:	14 c0       	rjmp	.+40     	; 0x2e4 <lcd_print+0x4c>
     2bc:	83 30       	cpi	r24, 0x03	; 3
     2be:	59 f0       	breq	.+22     	; 0x2d6 <lcd_print+0x3e>
     2c0:	84 30       	cpi	r24, 0x04	; 4
     2c2:	69 f0       	breq	.+26     	; 0x2de <lcd_print+0x46>
     2c4:	0f c0       	rjmp	.+30     	; 0x2e4 <lcd_print+0x4c>
     2c6:	8f e7       	ldi	r24, 0x7F	; 127
     2c8:	86 0f       	add	r24, r22
     2ca:	7a df       	rcall	.-268    	; 0x1c0 <lcd_wr_command>
     2cc:	0b c0       	rjmp	.+22     	; 0x2e4 <lcd_print+0x4c>
     2ce:	8f eb       	ldi	r24, 0xBF	; 191
     2d0:	86 0f       	add	r24, r22
     2d2:	76 df       	rcall	.-276    	; 0x1c0 <lcd_wr_command>
     2d4:	07 c0       	rjmp	.+14     	; 0x2e4 <lcd_print+0x4c>
     2d6:	83 e9       	ldi	r24, 0x93	; 147
     2d8:	86 0f       	add	r24, r22
     2da:	72 df       	rcall	.-284    	; 0x1c0 <lcd_wr_command>
     2dc:	03 c0       	rjmp	.+6      	; 0x2e4 <lcd_print+0x4c>
     2de:	83 ed       	ldi	r24, 0xD3	; 211
     2e0:	86 0f       	add	r24, r22
     2e2:	6e df       	rcall	.-292    	; 0x1c0 <lcd_wr_command>
     2e4:	c5 30       	cpi	r28, 0x05	; 5
     2e6:	d1 05       	cpc	r29, r1
     2e8:	09 f0       	breq	.+2      	; 0x2ec <lcd_print+0x54>
     2ea:	d5 c0       	rjmp	.+426    	; 0x496 <lcd_print+0x1fe>
     2ec:	98 01       	movw	r18, r16
     2ee:	32 95       	swap	r19
     2f0:	22 95       	swap	r18
     2f2:	2f 70       	andi	r18, 0x0F	; 15
     2f4:	23 27       	eor	r18, r19
     2f6:	3f 70       	andi	r19, 0x0F	; 15
     2f8:	23 27       	eor	r18, r19
     2fa:	a7 e4       	ldi	r26, 0x47	; 71
     2fc:	b3 e0       	ldi	r27, 0x03	; 3
     2fe:	0e 94 d9 2a 	call	0x55b2	; 0x55b2 <__umulhisi3>
     302:	96 95       	lsr	r25
     304:	87 95       	ror	r24
     306:	96 95       	lsr	r25
     308:	87 95       	ror	r24
     30a:	96 95       	lsr	r25
     30c:	87 95       	ror	r24
     30e:	c0 96       	adiw	r24, 0x30	; 48
     310:	90 93 21 05 	sts	0x0521, r25
     314:	80 93 20 05 	sts	0x0520, r24
     318:	89 df       	rcall	.-238    	; 0x22c <lcd_wr_char>
     31a:	98 01       	movw	r18, r16
     31c:	36 95       	lsr	r19
     31e:	27 95       	ror	r18
     320:	36 95       	lsr	r19
     322:	27 95       	ror	r18
     324:	36 95       	lsr	r19
     326:	27 95       	ror	r18
     328:	a5 ec       	ldi	r26, 0xC5	; 197
     32a:	b0 e2       	ldi	r27, 0x20	; 32
     32c:	0e 94 d9 2a 	call	0x55b2	; 0x55b2 <__umulhisi3>
     330:	ac 01       	movw	r20, r24
     332:	52 95       	swap	r21
     334:	42 95       	swap	r20
     336:	4f 70       	andi	r20, 0x0F	; 15
     338:	45 27       	eor	r20, r21
     33a:	5f 70       	andi	r21, 0x0F	; 15
     33c:	45 27       	eor	r20, r21
     33e:	50 93 25 05 	sts	0x0525, r21
     342:	40 93 24 05 	sts	0x0524, r20
     346:	9a 01       	movw	r18, r20
     348:	ad ec       	ldi	r26, 0xCD	; 205
     34a:	bc ec       	ldi	r27, 0xCC	; 204
     34c:	0e 94 d9 2a 	call	0x55b2	; 0x55b2 <__umulhisi3>
     350:	96 95       	lsr	r25
     352:	87 95       	ror	r24
     354:	96 95       	lsr	r25
     356:	87 95       	ror	r24
     358:	96 95       	lsr	r25
     35a:	87 95       	ror	r24
     35c:	9c 01       	movw	r18, r24
     35e:	22 0f       	add	r18, r18
     360:	33 1f       	adc	r19, r19
     362:	88 0f       	add	r24, r24
     364:	99 1f       	adc	r25, r25
     366:	88 0f       	add	r24, r24
     368:	99 1f       	adc	r25, r25
     36a:	88 0f       	add	r24, r24
     36c:	99 1f       	adc	r25, r25
     36e:	82 0f       	add	r24, r18
     370:	93 1f       	adc	r25, r19
     372:	48 1b       	sub	r20, r24
     374:	59 0b       	sbc	r21, r25
     376:	ca 01       	movw	r24, r20
     378:	c0 96       	adiw	r24, 0x30	; 48
     37a:	90 93 51 05 	sts	0x0551, r25
     37e:	80 93 50 05 	sts	0x0550, r24
     382:	54 df       	rcall	.-344    	; 0x22c <lcd_wr_char>
     384:	04 c0       	rjmp	.+8      	; 0x38e <lcd_print+0xf6>
     386:	c3 30       	cpi	r28, 0x03	; 3
     388:	d1 05       	cpc	r29, r1
     38a:	09 f0       	breq	.+2      	; 0x38e <lcd_print+0xf6>
     38c:	89 c0       	rjmp	.+274    	; 0x4a0 <lcd_print+0x208>
     38e:	98 01       	movw	r18, r16
     390:	36 95       	lsr	r19
     392:	27 95       	ror	r18
     394:	36 95       	lsr	r19
     396:	27 95       	ror	r18
     398:	ab e7       	ldi	r26, 0x7B	; 123
     39a:	b4 e1       	ldi	r27, 0x14	; 20
     39c:	0e 94 d9 2a 	call	0x55b2	; 0x55b2 <__umulhisi3>
     3a0:	ac 01       	movw	r20, r24
     3a2:	56 95       	lsr	r21
     3a4:	47 95       	ror	r20
     3a6:	50 93 25 05 	sts	0x0525, r21
     3aa:	40 93 24 05 	sts	0x0524, r20
     3ae:	9a 01       	movw	r18, r20
     3b0:	ad ec       	ldi	r26, 0xCD	; 205
     3b2:	bc ec       	ldi	r27, 0xCC	; 204
     3b4:	0e 94 d9 2a 	call	0x55b2	; 0x55b2 <__umulhisi3>
     3b8:	96 95       	lsr	r25
     3ba:	87 95       	ror	r24
     3bc:	96 95       	lsr	r25
     3be:	87 95       	ror	r24
     3c0:	96 95       	lsr	r25
     3c2:	87 95       	ror	r24
     3c4:	9c 01       	movw	r18, r24
     3c6:	22 0f       	add	r18, r18
     3c8:	33 1f       	adc	r19, r19
     3ca:	88 0f       	add	r24, r24
     3cc:	99 1f       	adc	r25, r25
     3ce:	88 0f       	add	r24, r24
     3d0:	99 1f       	adc	r25, r25
     3d2:	88 0f       	add	r24, r24
     3d4:	99 1f       	adc	r25, r25
     3d6:	82 0f       	add	r24, r18
     3d8:	93 1f       	adc	r25, r19
     3da:	48 1b       	sub	r20, r24
     3dc:	59 0b       	sbc	r21, r25
     3de:	ca 01       	movw	r24, r20
     3e0:	c0 96       	adiw	r24, 0x30	; 48
     3e2:	90 93 2c 05 	sts	0x052C, r25
     3e6:	80 93 2b 05 	sts	0x052B, r24
     3ea:	20 df       	rcall	.-448    	; 0x22c <lcd_wr_char>
     3ec:	98 01       	movw	r18, r16
     3ee:	ad ec       	ldi	r26, 0xCD	; 205
     3f0:	bc ec       	ldi	r27, 0xCC	; 204
     3f2:	0e 94 d9 2a 	call	0x55b2	; 0x55b2 <__umulhisi3>
     3f6:	ac 01       	movw	r20, r24
     3f8:	56 95       	lsr	r21
     3fa:	47 95       	ror	r20
     3fc:	56 95       	lsr	r21
     3fe:	47 95       	ror	r20
     400:	56 95       	lsr	r21
     402:	47 95       	ror	r20
     404:	50 93 25 05 	sts	0x0525, r21
     408:	40 93 24 05 	sts	0x0524, r20
     40c:	9a 01       	movw	r18, r20
     40e:	0e 94 d9 2a 	call	0x55b2	; 0x55b2 <__umulhisi3>
     412:	96 95       	lsr	r25
     414:	87 95       	ror	r24
     416:	96 95       	lsr	r25
     418:	87 95       	ror	r24
     41a:	96 95       	lsr	r25
     41c:	87 95       	ror	r24
     41e:	9c 01       	movw	r18, r24
     420:	22 0f       	add	r18, r18
     422:	33 1f       	adc	r19, r19
     424:	88 0f       	add	r24, r24
     426:	99 1f       	adc	r25, r25
     428:	88 0f       	add	r24, r24
     42a:	99 1f       	adc	r25, r25
     42c:	88 0f       	add	r24, r24
     42e:	99 1f       	adc	r25, r25
     430:	82 0f       	add	r24, r18
     432:	93 1f       	adc	r25, r19
     434:	48 1b       	sub	r20, r24
     436:	59 0b       	sbc	r21, r25
     438:	ca 01       	movw	r24, r20
     43a:	c0 96       	adiw	r24, 0x30	; 48
     43c:	90 93 2a 05 	sts	0x052A, r25
     440:	80 93 29 05 	sts	0x0529, r24
     444:	f3 de       	rcall	.-538    	; 0x22c <lcd_wr_char>
     446:	03 c0       	rjmp	.+6      	; 0x44e <lcd_print+0x1b6>
     448:	c1 30       	cpi	r28, 0x01	; 1
     44a:	d1 05       	cpc	r29, r1
     44c:	f9 f4       	brne	.+62     	; 0x48c <lcd_print+0x1f4>
     44e:	98 01       	movw	r18, r16
     450:	ad ec       	ldi	r26, 0xCD	; 205
     452:	bc ec       	ldi	r27, 0xCC	; 204
     454:	0e 94 d9 2a 	call	0x55b2	; 0x55b2 <__umulhisi3>
     458:	96 95       	lsr	r25
     45a:	87 95       	ror	r24
     45c:	96 95       	lsr	r25
     45e:	87 95       	ror	r24
     460:	96 95       	lsr	r25
     462:	87 95       	ror	r24
     464:	9c 01       	movw	r18, r24
     466:	22 0f       	add	r18, r18
     468:	33 1f       	adc	r19, r19
     46a:	88 0f       	add	r24, r24
     46c:	99 1f       	adc	r25, r25
     46e:	88 0f       	add	r24, r24
     470:	99 1f       	adc	r25, r25
     472:	88 0f       	add	r24, r24
     474:	99 1f       	adc	r25, r25
     476:	82 0f       	add	r24, r18
     478:	93 1f       	adc	r25, r19
     47a:	08 1b       	sub	r16, r24
     47c:	19 0b       	sbc	r17, r25
     47e:	c8 01       	movw	r24, r16
     480:	c0 96       	adiw	r24, 0x30	; 48
     482:	90 93 4f 05 	sts	0x054F, r25
     486:	80 93 4e 05 	sts	0x054E, r24
     48a:	d0 de       	rcall	.-608    	; 0x22c <lcd_wr_char>
     48c:	26 97       	sbiw	r28, 0x06	; 6
     48e:	64 f0       	brlt	.+24     	; 0x4a8 <lcd_print+0x210>
     490:	85 e4       	ldi	r24, 0x45	; 69
     492:	cc de       	rcall	.-616    	; 0x22c <lcd_wr_char>
     494:	09 c0       	rjmp	.+18     	; 0x4a8 <lcd_print+0x210>
     496:	c4 30       	cpi	r28, 0x04	; 4
     498:	d1 05       	cpc	r29, r1
     49a:	09 f0       	breq	.+2      	; 0x49e <lcd_print+0x206>
     49c:	74 cf       	rjmp	.-280    	; 0x386 <lcd_print+0xee>
     49e:	3d cf       	rjmp	.-390    	; 0x31a <lcd_print+0x82>
     4a0:	c2 30       	cpi	r28, 0x02	; 2
     4a2:	d1 05       	cpc	r29, r1
     4a4:	89 f6       	brne	.-94     	; 0x448 <lcd_print+0x1b0>
     4a6:	a2 cf       	rjmp	.-188    	; 0x3ec <lcd_print+0x154>
     4a8:	df 91       	pop	r29
     4aa:	cf 91       	pop	r28
     4ac:	1f 91       	pop	r17
     4ae:	0f 91       	pop	r16
     4b0:	08 95       	ret

000004b2 <reverse>:
     4b2:	9b 01       	movw	r18, r22
     4b4:	21 50       	subi	r18, 0x01	; 1
     4b6:	31 09       	sbc	r19, r1
     4b8:	33 23       	and	r19, r19
     4ba:	c4 f0       	brlt	.+48     	; 0x4ec <reverse+0x3a>
     4bc:	db 01       	movw	r26, r22
     4be:	aa 0f       	add	r26, r26
     4c0:	bb 1f       	adc	r27, r27
     4c2:	a8 0f       	add	r26, r24
     4c4:	b9 1f       	adc	r27, r25
     4c6:	fc 01       	movw	r30, r24
     4c8:	40 e0       	ldi	r20, 0x00	; 0
     4ca:	50 e0       	ldi	r21, 0x00	; 0
     4cc:	80 81       	ld	r24, Z
     4ce:	91 81       	ldd	r25, Z+1	; 0x01
     4d0:	7e 91       	ld	r23, -X
     4d2:	6e 91       	ld	r22, -X
     4d4:	61 93       	st	Z+, r22
     4d6:	71 93       	st	Z+, r23
     4d8:	11 96       	adiw	r26, 0x01	; 1
     4da:	9c 93       	st	X, r25
     4dc:	8e 93       	st	-X, r24
     4de:	4f 5f       	subi	r20, 0xFF	; 255
     4e0:	5f 4f       	sbci	r21, 0xFF	; 255
     4e2:	21 50       	subi	r18, 0x01	; 1
     4e4:	31 09       	sbc	r19, r1
     4e6:	24 17       	cp	r18, r20
     4e8:	35 07       	cpc	r19, r21
     4ea:	84 f7       	brge	.-32     	; 0x4cc <reverse+0x1a>
     4ec:	08 95       	ret

000004ee <check_block>:
     4ee:	20 91 67 04 	lds	r18, 0x0467
     4f2:	30 91 68 04 	lds	r19, 0x0468
     4f6:	28 17       	cp	r18, r24
     4f8:	39 07       	cpc	r19, r25
     4fa:	69 f0       	breq	.+26     	; 0x516 <check_block+0x28>
     4fc:	e9 e6       	ldi	r30, 0x69	; 105
     4fe:	f4 e0       	ldi	r31, 0x04	; 4
     500:	4b e7       	ldi	r20, 0x7B	; 123
     502:	54 e0       	ldi	r21, 0x04	; 4
     504:	21 91       	ld	r18, Z+
     506:	31 91       	ld	r19, Z+
     508:	28 17       	cp	r18, r24
     50a:	39 07       	cpc	r19, r25
     50c:	39 f0       	breq	.+14     	; 0x51c <check_block+0x2e>
     50e:	e4 17       	cp	r30, r20
     510:	f5 07       	cpc	r31, r21
     512:	c1 f7       	brne	.-16     	; 0x504 <check_block+0x16>
     514:	06 c0       	rjmp	.+12     	; 0x522 <check_block+0x34>
     516:	81 e0       	ldi	r24, 0x01	; 1
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	08 95       	ret
     51c:	81 e0       	ldi	r24, 0x01	; 1
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	08 95       	ret
     522:	80 e0       	ldi	r24, 0x00	; 0
     524:	90 e0       	ldi	r25, 0x00	; 0
     526:	08 95       	ret

00000528 <dijkstra>:
     528:	2f 92       	push	r2
     52a:	3f 92       	push	r3
     52c:	4f 92       	push	r4
     52e:	5f 92       	push	r5
     530:	6f 92       	push	r6
     532:	7f 92       	push	r7
     534:	8f 92       	push	r8
     536:	9f 92       	push	r9
     538:	af 92       	push	r10
     53a:	bf 92       	push	r11
     53c:	cf 92       	push	r12
     53e:	df 92       	push	r13
     540:	ef 92       	push	r14
     542:	ff 92       	push	r15
     544:	0f 93       	push	r16
     546:	1f 93       	push	r17
     548:	cf 93       	push	r28
     54a:	df 93       	push	r29
     54c:	cd b7       	in	r28, 0x3d	; 61
     54e:	de b7       	in	r29, 0x3e	; 62
     550:	c2 52       	subi	r28, 0x22	; 34
     552:	d2 40       	sbci	r29, 0x02	; 2
     554:	0f b6       	in	r0, 0x3f	; 63
     556:	f8 94       	cli
     558:	de bf       	out	0x3e, r29	; 62
     55a:	0f be       	out	0x3f, r0	; 63
     55c:	cd bf       	out	0x3d, r28	; 61
     55e:	4b 01       	movw	r8, r22
     560:	16 16       	cp	r1, r22
     562:	17 06       	cpc	r1, r23
     564:	0c f0       	brlt	.+2      	; 0x568 <dijkstra+0x40>
     566:	5a c0       	rjmp	.+180    	; 0x61c <dijkstra+0xf4>
     568:	08 2f       	mov	r16, r24
     56a:	19 2f       	mov	r17, r25
     56c:	ce 01       	movw	r24, r28
     56e:	01 96       	adiw	r24, 0x01	; 1
     570:	7c 01       	movw	r14, r24
     572:	8e e1       	ldi	r24, 0x1E	; 30
     574:	86 9f       	mul	r24, r22
     576:	50 01       	movw	r10, r0
     578:	87 9f       	mul	r24, r23
     57a:	b0 0c       	add	r11, r0
     57c:	11 24       	eor	r1, r1
     57e:	ae 0c       	add	r10, r14
     580:	bf 1c       	adc	r11, r15
     582:	6b 01       	movw	r12, r22
     584:	cc 0c       	add	r12, r12
     586:	dd 1c       	adc	r13, r13
     588:	6f e0       	ldi	r22, 0x0F	; 15
     58a:	77 e2       	ldi	r23, 0x27	; 39
     58c:	17 c0       	rjmp	.+46     	; 0x5bc <dijkstra+0x94>
     58e:	81 91       	ld	r24, Z+
     590:	91 91       	ld	r25, Z+
     592:	00 97       	sbiw	r24, 0x00	; 0
     594:	21 f4       	brne	.+8      	; 0x59e <dijkstra+0x76>
     596:	11 96       	adiw	r26, 0x01	; 1
     598:	7c 93       	st	X, r23
     59a:	6e 93       	st	-X, r22
     59c:	03 c0       	rjmp	.+6      	; 0x5a4 <dijkstra+0x7c>
     59e:	11 96       	adiw	r26, 0x01	; 1
     5a0:	9c 93       	st	X, r25
     5a2:	8e 93       	st	-X, r24
     5a4:	12 96       	adiw	r26, 0x02	; 2
     5a6:	e2 17       	cp	r30, r18
     5a8:	f3 07       	cpc	r31, r19
     5aa:	89 f7       	brne	.-30     	; 0x58e <dijkstra+0x66>
     5ac:	02 5e       	subi	r16, 0xE2	; 226
     5ae:	1f 4f       	sbci	r17, 0xFF	; 255
     5b0:	9e e1       	ldi	r25, 0x1E	; 30
     5b2:	e9 0e       	add	r14, r25
     5b4:	f1 1c       	adc	r15, r1
     5b6:	ea 14       	cp	r14, r10
     5b8:	fb 04       	cpc	r15, r11
     5ba:	31 f0       	breq	.+12     	; 0x5c8 <dijkstra+0xa0>
     5bc:	98 01       	movw	r18, r16
     5be:	2c 0d       	add	r18, r12
     5c0:	3d 1d       	adc	r19, r13
     5c2:	d7 01       	movw	r26, r14
     5c4:	f8 01       	movw	r30, r16
     5c6:	e3 cf       	rjmp	.-58     	; 0x58e <dijkstra+0x66>
     5c8:	8e e1       	ldi	r24, 0x1E	; 30
     5ca:	84 9f       	mul	r24, r20
     5cc:	90 01       	movw	r18, r0
     5ce:	85 9f       	mul	r24, r21
     5d0:	30 0d       	add	r19, r0
     5d2:	11 24       	eor	r1, r1
     5d4:	a1 e0       	ldi	r26, 0x01	; 1
     5d6:	b0 e0       	ldi	r27, 0x00	; 0
     5d8:	ac 0f       	add	r26, r28
     5da:	bd 1f       	adc	r27, r29
     5dc:	2a 0f       	add	r18, r26
     5de:	3b 1f       	adc	r19, r27
     5e0:	fe 01       	movw	r30, r28
     5e2:	ed 53       	subi	r30, 0x3D	; 61
     5e4:	fe 4f       	sbci	r31, 0xFE	; 254
     5e6:	ce 01       	movw	r24, r28
     5e8:	8f 51       	subi	r24, 0x1F	; 31
     5ea:	9e 4f       	sbci	r25, 0xFE	; 254
     5ec:	de 01       	movw	r26, r28
     5ee:	a1 50       	subi	r26, 0x01	; 1
     5f0:	be 4f       	sbci	r27, 0xFE	; 254
     5f2:	ce 0e       	add	r12, r30
     5f4:	df 1e       	adc	r13, r31
     5f6:	89 01       	movw	r16, r18
     5f8:	9d 01       	movw	r18, r26
     5fa:	d8 01       	movw	r26, r16
     5fc:	6d 91       	ld	r22, X+
     5fe:	7d 91       	ld	r23, X+
     600:	8d 01       	movw	r16, r26
     602:	61 93       	st	Z+, r22
     604:	71 93       	st	Z+, r23
     606:	dc 01       	movw	r26, r24
     608:	4d 93       	st	X+, r20
     60a:	5d 93       	st	X+, r21
     60c:	cd 01       	movw	r24, r26
     60e:	d9 01       	movw	r26, r18
     610:	1d 92       	st	X+, r1
     612:	1d 92       	st	X+, r1
     614:	9d 01       	movw	r18, r26
     616:	ec 15       	cp	r30, r12
     618:	fd 05       	cpc	r31, r13
     61a:	79 f7       	brne	.-34     	; 0x5fa <dijkstra+0xd2>
     61c:	44 0f       	add	r20, r20
     61e:	55 1f       	adc	r21, r21
     620:	e3 ec       	ldi	r30, 0xC3	; 195
     622:	f1 e0       	ldi	r31, 0x01	; 1
     624:	ec 0f       	add	r30, r28
     626:	fd 1f       	adc	r31, r29
     628:	e4 0f       	add	r30, r20
     62a:	f5 1f       	adc	r31, r21
     62c:	11 82       	std	Z+1, r1	; 0x01
     62e:	10 82       	st	Z, r1
     630:	ef ef       	ldi	r30, 0xFF	; 255
     632:	f1 e0       	ldi	r31, 0x01	; 1
     634:	ec 0f       	add	r30, r28
     636:	fd 1f       	adc	r31, r29
     638:	e4 0f       	add	r30, r20
     63a:	f5 1f       	adc	r31, r21
     63c:	81 e0       	ldi	r24, 0x01	; 1
     63e:	90 e0       	ldi	r25, 0x00	; 0
     640:	91 83       	std	Z+1, r25	; 0x01
     642:	80 83       	st	Z, r24
     644:	c4 01       	movw	r24, r8
     646:	01 97       	sbiw	r24, 0x01	; 1
     648:	c1 5e       	subi	r28, 0xE1	; 225
     64a:	dd 4f       	sbci	r29, 0xFD	; 253
     64c:	99 83       	std	Y+1, r25	; 0x01
     64e:	88 83       	st	Y, r24
     650:	cf 51       	subi	r28, 0x1F	; 31
     652:	d2 40       	sbci	r29, 0x02	; 2
     654:	02 97       	sbiw	r24, 0x02	; 2
     656:	0c f4       	brge	.+2      	; 0x65a <dijkstra+0x132>
     658:	9d c0       	rjmp	.+314    	; 0x794 <dijkstra+0x26c>
     65a:	b4 01       	movw	r22, r8
     65c:	66 0f       	add	r22, r22
     65e:	77 1f       	adc	r23, r23
     660:	aa 24       	eor	r10, r10
     662:	a3 94       	inc	r10
     664:	b1 2c       	mov	r11, r1
     666:	de 01       	movw	r26, r28
     668:	a1 50       	subi	r26, 0x01	; 1
     66a:	be 4f       	sbci	r27, 0xFE	; 254
     66c:	c3 5e       	subi	r28, 0xE3	; 227
     66e:	dd 4f       	sbci	r29, 0xFD	; 253
     670:	b9 83       	std	Y+1, r27	; 0x01
     672:	a8 83       	st	Y, r26
     674:	cd 51       	subi	r28, 0x1D	; 29
     676:	d2 40       	sbci	r29, 0x02	; 2
     678:	c3 5e       	subi	r28, 0xE3	; 227
     67a:	dd 4f       	sbci	r29, 0xFD	; 253
     67c:	58 80       	ld	r5, Y
     67e:	cd 51       	subi	r28, 0x1D	; 29
     680:	d2 40       	sbci	r29, 0x02	; 2
     682:	c2 5e       	subi	r28, 0xE2	; 226
     684:	dd 4f       	sbci	r29, 0xFD	; 253
     686:	48 80       	ld	r4, Y
     688:	ce 51       	subi	r28, 0x1E	; 30
     68a:	d2 40       	sbci	r29, 0x02	; 2
     68c:	31 2c       	mov	r3, r1
     68e:	21 2c       	mov	r2, r1
     690:	73 c0       	rjmp	.+230    	; 0x778 <dijkstra+0x250>
     692:	2d 91       	ld	r18, X+
     694:	3d 91       	ld	r19, X+
     696:	24 17       	cp	r18, r20
     698:	35 07       	cpc	r19, r21
     69a:	34 f4       	brge	.+12     	; 0x6a8 <dijkstra+0x180>
     69c:	60 81       	ld	r22, Z
     69e:	71 81       	ldd	r23, Z+1	; 0x01
     6a0:	67 2b       	or	r22, r23
     6a2:	11 f4       	brne	.+4      	; 0x6a8 <dijkstra+0x180>
     6a4:	3c 01       	movw	r6, r24
     6a6:	a9 01       	movw	r20, r18
     6a8:	01 96       	adiw	r24, 0x01	; 1
     6aa:	32 96       	adiw	r30, 0x02	; 2
     6ac:	88 15       	cp	r24, r8
     6ae:	99 05       	cpc	r25, r9
     6b0:	81 f7       	brne	.-32     	; 0x692 <dijkstra+0x16a>
     6b2:	b8 01       	movw	r22, r16
     6b4:	e6 2c       	mov	r14, r6
     6b6:	f7 2c       	mov	r15, r7
     6b8:	f3 01       	movw	r30, r6
     6ba:	ee 0f       	add	r30, r30
     6bc:	ff 1f       	adc	r31, r31
     6be:	8f ef       	ldi	r24, 0xFF	; 255
     6c0:	91 e0       	ldi	r25, 0x01	; 1
     6c2:	8c 0f       	add	r24, r28
     6c4:	9d 1f       	adc	r25, r29
     6c6:	e8 0f       	add	r30, r24
     6c8:	f9 1f       	adc	r31, r25
     6ca:	a1 e0       	ldi	r26, 0x01	; 1
     6cc:	b0 e0       	ldi	r27, 0x00	; 0
     6ce:	b1 83       	std	Z+1, r27	; 0x01
     6d0:	a0 83       	st	Z, r26
     6d2:	be e1       	ldi	r27, 0x1E	; 30
     6d4:	b6 9d       	mul	r27, r6
     6d6:	60 01       	movw	r12, r0
     6d8:	b7 9d       	mul	r27, r7
     6da:	d0 0c       	add	r13, r0
     6dc:	11 24       	eor	r1, r1
     6de:	81 e0       	ldi	r24, 0x01	; 1
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	8c 0f       	add	r24, r28
     6e4:	9d 1f       	adc	r25, r29
     6e6:	c8 0e       	add	r12, r24
     6e8:	d9 1e       	adc	r13, r25
     6ea:	fe 01       	movw	r30, r28
     6ec:	ed 53       	subi	r30, 0x3D	; 61
     6ee:	fe 4f       	sbci	r31, 0xFE	; 254
     6f0:	a5 2d       	mov	r26, r5
     6f2:	b4 2d       	mov	r27, r4
     6f4:	83 2d       	mov	r24, r3
     6f6:	92 2d       	mov	r25, r2
     6f8:	cf 5d       	subi	r28, 0xDF	; 223
     6fa:	dd 4f       	sbci	r29, 0xFD	; 253
     6fc:	b9 83       	std	Y+1, r27	; 0x01
     6fe:	a8 83       	st	Y, r26
     700:	c1 52       	subi	r28, 0x21	; 33
     702:	d2 40       	sbci	r29, 0x02	; 2
     704:	cf 5d       	subi	r28, 0xDF	; 223
     706:	dd 4f       	sbci	r29, 0xFD	; 253
     708:	a8 81       	ld	r26, Y
     70a:	b9 81       	ldd	r27, Y+1	; 0x01
     70c:	c1 52       	subi	r28, 0x21	; 33
     70e:	d2 40       	sbci	r29, 0x02	; 2
     710:	2d 91       	ld	r18, X+
     712:	3d 91       	ld	r19, X+
     714:	cf 5d       	subi	r28, 0xDF	; 223
     716:	dd 4f       	sbci	r29, 0xFD	; 253
     718:	b9 83       	std	Y+1, r27	; 0x01
     71a:	a8 83       	st	Y, r26
     71c:	c1 52       	subi	r28, 0x21	; 33
     71e:	d2 40       	sbci	r29, 0x02	; 2
     720:	23 2b       	or	r18, r19
     722:	c9 f4       	brne	.+50     	; 0x756 <dijkstra+0x22e>
     724:	96 01       	movw	r18, r12
     726:	28 0f       	add	r18, r24
     728:	39 1f       	adc	r19, r25
     72a:	d9 01       	movw	r26, r18
     72c:	2d 91       	ld	r18, X+
     72e:	3c 91       	ld	r19, X
     730:	24 0f       	add	r18, r20
     732:	35 1f       	adc	r19, r21
     734:	00 81       	ld	r16, Z
     736:	11 81       	ldd	r17, Z+1	; 0x01
     738:	20 17       	cp	r18, r16
     73a:	31 07       	cpc	r19, r17
     73c:	64 f4       	brge	.+24     	; 0x756 <dijkstra+0x22e>
     73e:	31 83       	std	Z+1, r19	; 0x01
     740:	20 83       	st	Z, r18
     742:	21 ee       	ldi	r18, 0xE1	; 225
     744:	31 e0       	ldi	r19, 0x01	; 1
     746:	2c 0f       	add	r18, r28
     748:	3d 1f       	adc	r19, r29
     74a:	28 0f       	add	r18, r24
     74c:	39 1f       	adc	r19, r25
     74e:	d9 01       	movw	r26, r18
     750:	ec 92       	st	X, r14
     752:	11 96       	adiw	r26, 0x01	; 1
     754:	fc 92       	st	X, r15
     756:	02 96       	adiw	r24, 0x02	; 2
     758:	32 96       	adiw	r30, 0x02	; 2
     75a:	86 17       	cp	r24, r22
     75c:	97 07       	cpc	r25, r23
     75e:	91 f6       	brne	.-92     	; 0x704 <dijkstra+0x1dc>
     760:	bf ef       	ldi	r27, 0xFF	; 255
     762:	ab 1a       	sub	r10, r27
     764:	bb 0a       	sbc	r11, r27
     766:	c1 5e       	subi	r28, 0xE1	; 225
     768:	dd 4f       	sbci	r29, 0xFD	; 253
     76a:	88 81       	ld	r24, Y
     76c:	99 81       	ldd	r25, Y+1	; 0x01
     76e:	cf 51       	subi	r28, 0x1F	; 31
     770:	d2 40       	sbci	r29, 0x02	; 2
     772:	a8 16       	cp	r10, r24
     774:	b9 06       	cpc	r11, r25
     776:	74 f4       	brge	.+28     	; 0x794 <dijkstra+0x26c>
     778:	18 14       	cp	r1, r8
     77a:	19 04       	cpc	r1, r9
     77c:	74 f5       	brge	.+92     	; 0x7da <dijkstra+0x2b2>
     77e:	e5 2d       	mov	r30, r5
     780:	f4 2d       	mov	r31, r4
     782:	de 01       	movw	r26, r28
     784:	ad 53       	subi	r26, 0x3D	; 61
     786:	be 4f       	sbci	r27, 0xFE	; 254
     788:	83 2d       	mov	r24, r3
     78a:	92 2d       	mov	r25, r2
     78c:	4f e0       	ldi	r20, 0x0F	; 15
     78e:	57 e2       	ldi	r21, 0x27	; 39
     790:	8b 01       	movw	r16, r22
     792:	7f cf       	rjmp	.-258    	; 0x692 <dijkstra+0x16a>
     794:	18 14       	cp	r1, r8
     796:	19 04       	cpc	r1, r9
     798:	74 f5       	brge	.+92     	; 0x7f6 <dijkstra+0x2ce>
     79a:	fe 01       	movw	r30, r28
     79c:	ed 53       	subi	r30, 0x3D	; 61
     79e:	fe 4f       	sbci	r31, 0xFE	; 254
     7a0:	a0 e3       	ldi	r26, 0x30	; 48
     7a2:	b5 e0       	ldi	r27, 0x05	; 5
     7a4:	88 0c       	add	r8, r8
     7a6:	99 1c       	adc	r9, r9
     7a8:	94 01       	movw	r18, r8
     7aa:	2e 0f       	add	r18, r30
     7ac:	3f 1f       	adc	r19, r31
     7ae:	81 91       	ld	r24, Z+
     7b0:	91 91       	ld	r25, Z+
     7b2:	8d 93       	st	X+, r24
     7b4:	9d 93       	st	X+, r25
     7b6:	e2 17       	cp	r30, r18
     7b8:	f3 07       	cpc	r31, r19
     7ba:	c9 f7       	brne	.-14     	; 0x7ae <dijkstra+0x286>
     7bc:	fe 01       	movw	r30, r28
     7be:	ef 51       	subi	r30, 0x1F	; 31
     7c0:	fe 4f       	sbci	r31, 0xFE	; 254
     7c2:	a0 e0       	ldi	r26, 0x00	; 0
     7c4:	b5 e0       	ldi	r27, 0x05	; 5
     7c6:	8e 0e       	add	r8, r30
     7c8:	9f 1e       	adc	r9, r31
     7ca:	81 91       	ld	r24, Z+
     7cc:	91 91       	ld	r25, Z+
     7ce:	8d 93       	st	X+, r24
     7d0:	9d 93       	st	X+, r25
     7d2:	e8 15       	cp	r30, r8
     7d4:	f9 05       	cpc	r31, r9
     7d6:	c9 f7       	brne	.-14     	; 0x7ca <dijkstra+0x2a2>
     7d8:	0e c0       	rjmp	.+28     	; 0x7f6 <dijkstra+0x2ce>
     7da:	f3 01       	movw	r30, r6
     7dc:	ee 0f       	add	r30, r30
     7de:	ff 1f       	adc	r31, r31
     7e0:	af ef       	ldi	r26, 0xFF	; 255
     7e2:	b1 e0       	ldi	r27, 0x01	; 1
     7e4:	ac 0f       	add	r26, r28
     7e6:	bd 1f       	adc	r27, r29
     7e8:	ea 0f       	add	r30, r26
     7ea:	fb 1f       	adc	r31, r27
     7ec:	81 e0       	ldi	r24, 0x01	; 1
     7ee:	90 e0       	ldi	r25, 0x00	; 0
     7f0:	91 83       	std	Z+1, r25	; 0x01
     7f2:	80 83       	st	Z, r24
     7f4:	b5 cf       	rjmp	.-150    	; 0x760 <dijkstra+0x238>
     7f6:	ce 5d       	subi	r28, 0xDE	; 222
     7f8:	dd 4f       	sbci	r29, 0xFD	; 253
     7fa:	0f b6       	in	r0, 0x3f	; 63
     7fc:	f8 94       	cli
     7fe:	de bf       	out	0x3e, r29	; 62
     800:	0f be       	out	0x3f, r0	; 63
     802:	cd bf       	out	0x3d, r28	; 61
     804:	df 91       	pop	r29
     806:	cf 91       	pop	r28
     808:	1f 91       	pop	r17
     80a:	0f 91       	pop	r16
     80c:	ff 90       	pop	r15
     80e:	ef 90       	pop	r14
     810:	df 90       	pop	r13
     812:	cf 90       	pop	r12
     814:	bf 90       	pop	r11
     816:	af 90       	pop	r10
     818:	9f 90       	pop	r9
     81a:	8f 90       	pop	r8
     81c:	7f 90       	pop	r7
     81e:	6f 90       	pop	r6
     820:	5f 90       	pop	r5
     822:	4f 90       	pop	r4
     824:	3f 90       	pop	r3
     826:	2f 90       	pop	r2
     828:	08 95       	ret

0000082a <dist_comp>:
     82a:	0f 93       	push	r16
     82c:	1f 93       	push	r17
     82e:	cf 93       	push	r28
     830:	df 93       	push	r29
     832:	ec 01       	movw	r28, r24
     834:	8b 01       	movw	r16, r22
     836:	f9 01       	movw	r30, r18
     838:	88 0f       	add	r24, r24
     83a:	99 1f       	adc	r25, r25
     83c:	80 5d       	subi	r24, 0xD0	; 208
     83e:	9a 4f       	sbci	r25, 0xFA	; 250
     840:	db 01       	movw	r26, r22
     842:	aa 0f       	add	r26, r26
     844:	bb 1f       	adc	r27, r27
     846:	bd 01       	movw	r22, r26
     848:	60 5d       	subi	r22, 0xD0	; 208
     84a:	7a 4f       	sbci	r23, 0xFA	; 250
     84c:	dc 01       	movw	r26, r24
     84e:	2d 91       	ld	r18, X+
     850:	3c 91       	ld	r19, X
     852:	db 01       	movw	r26, r22
     854:	8d 91       	ld	r24, X+
     856:	9c 91       	ld	r25, X
     858:	82 17       	cp	r24, r18
     85a:	93 07       	cpc	r25, r19
     85c:	d4 f1       	brlt	.+116    	; 0x8d2 <dist_comp+0xa8>
     85e:	80 91 fe 04 	lds	r24, 0x04FE
     862:	90 91 ff 04 	lds	r25, 0x04FF
     866:	8c 17       	cp	r24, r28
     868:	9d 07       	cpc	r25, r29
     86a:	51 f1       	breq	.+84     	; 0x8c0 <dist_comp+0x96>
     86c:	a0 81       	ld	r26, Z
     86e:	b1 81       	ldd	r27, Z+1	; 0x01
     870:	aa 0f       	add	r26, r26
     872:	bb 1f       	adc	r27, r27
     874:	a4 0f       	add	r26, r20
     876:	b5 1f       	adc	r27, r21
     878:	cd 93       	st	X+, r28
     87a:	dc 93       	st	X, r29
     87c:	80 81       	ld	r24, Z
     87e:	91 81       	ldd	r25, Z+1	; 0x01
     880:	01 96       	adiw	r24, 0x01	; 1
     882:	91 83       	std	Z+1, r25	; 0x01
     884:	80 83       	st	Z, r24
     886:	9e 01       	movw	r18, r28
     888:	d9 01       	movw	r26, r18
     88a:	aa 0f       	add	r26, r26
     88c:	bb 1f       	adc	r27, r27
     88e:	a0 50       	subi	r26, 0x00	; 0
     890:	bb 4f       	sbci	r27, 0xFB	; 251
     892:	2d 91       	ld	r18, X+
     894:	3c 91       	ld	r19, X
     896:	a0 81       	ld	r26, Z
     898:	b1 81       	ldd	r27, Z+1	; 0x01
     89a:	aa 0f       	add	r26, r26
     89c:	bb 1f       	adc	r27, r27
     89e:	a4 0f       	add	r26, r20
     8a0:	b5 1f       	adc	r27, r21
     8a2:	2d 93       	st	X+, r18
     8a4:	3c 93       	st	X, r19
     8a6:	60 81       	ld	r22, Z
     8a8:	71 81       	ldd	r23, Z+1	; 0x01
     8aa:	6f 5f       	subi	r22, 0xFF	; 255
     8ac:	7f 4f       	sbci	r23, 0xFF	; 255
     8ae:	71 83       	std	Z+1, r23	; 0x01
     8b0:	60 83       	st	Z, r22
     8b2:	60 91 fe 04 	lds	r22, 0x04FE
     8b6:	70 91 ff 04 	lds	r23, 0x04FF
     8ba:	26 17       	cp	r18, r22
     8bc:	37 07       	cpc	r19, r23
     8be:	21 f7       	brne	.-56     	; 0x888 <dist_comp+0x5e>
     8c0:	60 81       	ld	r22, Z
     8c2:	71 81       	ldd	r23, Z+1	; 0x01
     8c4:	ca 01       	movw	r24, r20
     8c6:	f5 dd       	rcall	.-1046   	; 0x4b2 <reverse>
     8c8:	d0 93 ff 04 	sts	0x04FF, r29
     8cc:	c0 93 fe 04 	sts	0x04FE, r28
     8d0:	38 c0       	rjmp	.+112    	; 0x942 <dist_comp+0x118>
     8d2:	80 91 fe 04 	lds	r24, 0x04FE
     8d6:	90 91 ff 04 	lds	r25, 0x04FF
     8da:	80 17       	cp	r24, r16
     8dc:	91 07       	cpc	r25, r17
     8de:	49 f1       	breq	.+82     	; 0x932 <dist_comp+0x108>
     8e0:	a0 81       	ld	r26, Z
     8e2:	b1 81       	ldd	r27, Z+1	; 0x01
     8e4:	aa 0f       	add	r26, r26
     8e6:	bb 1f       	adc	r27, r27
     8e8:	a4 0f       	add	r26, r20
     8ea:	b5 1f       	adc	r27, r21
     8ec:	0d 93       	st	X+, r16
     8ee:	1c 93       	st	X, r17
     8f0:	80 81       	ld	r24, Z
     8f2:	91 81       	ldd	r25, Z+1	; 0x01
     8f4:	01 96       	adiw	r24, 0x01	; 1
     8f6:	91 83       	std	Z+1, r25	; 0x01
     8f8:	80 83       	st	Z, r24
     8fa:	98 01       	movw	r18, r16
     8fc:	d9 01       	movw	r26, r18
     8fe:	aa 0f       	add	r26, r26
     900:	bb 1f       	adc	r27, r27
     902:	a0 50       	subi	r26, 0x00	; 0
     904:	bb 4f       	sbci	r27, 0xFB	; 251
     906:	2d 91       	ld	r18, X+
     908:	3c 91       	ld	r19, X
     90a:	a0 81       	ld	r26, Z
     90c:	b1 81       	ldd	r27, Z+1	; 0x01
     90e:	aa 0f       	add	r26, r26
     910:	bb 1f       	adc	r27, r27
     912:	a4 0f       	add	r26, r20
     914:	b5 1f       	adc	r27, r21
     916:	2d 93       	st	X+, r18
     918:	3c 93       	st	X, r19
     91a:	80 81       	ld	r24, Z
     91c:	91 81       	ldd	r25, Z+1	; 0x01
     91e:	01 96       	adiw	r24, 0x01	; 1
     920:	91 83       	std	Z+1, r25	; 0x01
     922:	80 83       	st	Z, r24
     924:	80 91 fe 04 	lds	r24, 0x04FE
     928:	90 91 ff 04 	lds	r25, 0x04FF
     92c:	28 17       	cp	r18, r24
     92e:	39 07       	cpc	r19, r25
     930:	29 f7       	brne	.-54     	; 0x8fc <dist_comp+0xd2>
     932:	60 81       	ld	r22, Z
     934:	71 81       	ldd	r23, Z+1	; 0x01
     936:	ca 01       	movw	r24, r20
     938:	bc dd       	rcall	.-1160   	; 0x4b2 <reverse>
     93a:	10 93 ff 04 	sts	0x04FF, r17
     93e:	00 93 fe 04 	sts	0x04FE, r16
     942:	df 91       	pop	r29
     944:	cf 91       	pop	r28
     946:	1f 91       	pop	r17
     948:	0f 91       	pop	r16
     94a:	08 95       	ret

0000094c <which_node>:
     94c:	81 30       	cpi	r24, 0x01	; 1
     94e:	91 05       	cpc	r25, r1
     950:	29 f4       	brne	.+10     	; 0x95c <which_node+0x10>
     952:	80 91 65 04 	lds	r24, 0x0465
     956:	90 91 66 04 	lds	r25, 0x0466
     95a:	08 95       	ret
     95c:	82 30       	cpi	r24, 0x02	; 2
     95e:	91 05       	cpc	r25, r1
     960:	29 f4       	brne	.+10     	; 0x96c <which_node+0x20>
     962:	80 91 63 04 	lds	r24, 0x0463
     966:	90 91 64 04 	lds	r25, 0x0464
     96a:	08 95       	ret
     96c:	83 30       	cpi	r24, 0x03	; 3
     96e:	91 05       	cpc	r25, r1
     970:	29 f4       	brne	.+10     	; 0x97c <which_node+0x30>
     972:	80 91 61 04 	lds	r24, 0x0461
     976:	90 91 62 04 	lds	r25, 0x0462
     97a:	08 95       	ret
     97c:	84 30       	cpi	r24, 0x04	; 4
     97e:	91 05       	cpc	r25, r1
     980:	29 f4       	brne	.+10     	; 0x98c <which_node+0x40>
     982:	80 91 5f 04 	lds	r24, 0x045F
     986:	90 91 60 04 	lds	r25, 0x0460
     98a:	08 95       	ret
     98c:	85 30       	cpi	r24, 0x05	; 5
     98e:	91 05       	cpc	r25, r1
     990:	29 f4       	brne	.+10     	; 0x99c <which_node+0x50>
     992:	80 91 5d 04 	lds	r24, 0x045D
     996:	90 91 5e 04 	lds	r25, 0x045E
     99a:	08 95       	ret
     99c:	86 30       	cpi	r24, 0x06	; 6
     99e:	91 05       	cpc	r25, r1
     9a0:	29 f4       	brne	.+10     	; 0x9ac <which_node+0x60>
     9a2:	80 91 5b 04 	lds	r24, 0x045B
     9a6:	90 91 5c 04 	lds	r25, 0x045C
     9aa:	08 95       	ret
     9ac:	87 30       	cpi	r24, 0x07	; 7
     9ae:	91 05       	cpc	r25, r1
     9b0:	29 f4       	brne	.+10     	; 0x9bc <which_node+0x70>
     9b2:	80 91 59 04 	lds	r24, 0x0459
     9b6:	90 91 5a 04 	lds	r25, 0x045A
     9ba:	08 95       	ret
     9bc:	88 30       	cpi	r24, 0x08	; 8
     9be:	91 05       	cpc	r25, r1
     9c0:	29 f4       	brne	.+10     	; 0x9cc <which_node+0x80>
     9c2:	80 91 57 04 	lds	r24, 0x0457
     9c6:	90 91 58 04 	lds	r25, 0x0458
     9ca:	08 95       	ret
     9cc:	89 30       	cpi	r24, 0x09	; 9
     9ce:	91 05       	cpc	r25, r1
     9d0:	29 f4       	brne	.+10     	; 0x9dc <which_node+0x90>
     9d2:	80 91 55 04 	lds	r24, 0x0455
     9d6:	90 91 56 04 	lds	r25, 0x0456
     9da:	08 95       	ret
     9dc:	8a 30       	cpi	r24, 0x0A	; 10
     9de:	91 05       	cpc	r25, r1
     9e0:	29 f4       	brne	.+10     	; 0x9ec <which_node+0xa0>
     9e2:	80 91 53 04 	lds	r24, 0x0453
     9e6:	90 91 54 04 	lds	r25, 0x0454
     9ea:	08 95       	ret
     9ec:	8b 30       	cpi	r24, 0x0B	; 11
     9ee:	91 05       	cpc	r25, r1
     9f0:	29 f4       	brne	.+10     	; 0x9fc <which_node+0xb0>
     9f2:	80 91 51 04 	lds	r24, 0x0451
     9f6:	90 91 52 04 	lds	r25, 0x0452
     9fa:	08 95       	ret
     9fc:	0c 97       	sbiw	r24, 0x0c	; 12
     9fe:	29 f4       	brne	.+10     	; 0xa0a <which_node+0xbe>
     a00:	80 91 4f 04 	lds	r24, 0x044F
     a04:	90 91 50 04 	lds	r25, 0x0450
     a08:	08 95       	ret
     a0a:	8f ef       	ldi	r24, 0xFF	; 255
     a0c:	9f ef       	ldi	r25, 0xFF	; 255
     a0e:	08 95       	ret

00000a10 <which_house>:
     a10:	81 30       	cpi	r24, 0x01	; 1
     a12:	91 05       	cpc	r25, r1
     a14:	29 f4       	brne	.+10     	; 0xa20 <which_house+0x10>
     a16:	80 91 4d 04 	lds	r24, 0x044D
     a1a:	90 91 4e 04 	lds	r25, 0x044E
     a1e:	08 95       	ret
     a20:	82 30       	cpi	r24, 0x02	; 2
     a22:	91 05       	cpc	r25, r1
     a24:	29 f4       	brne	.+10     	; 0xa30 <which_house+0x20>
     a26:	80 91 4b 04 	lds	r24, 0x044B
     a2a:	90 91 4c 04 	lds	r25, 0x044C
     a2e:	08 95       	ret
     a30:	83 30       	cpi	r24, 0x03	; 3
     a32:	91 05       	cpc	r25, r1
     a34:	29 f4       	brne	.+10     	; 0xa40 <which_house+0x30>
     a36:	80 91 49 04 	lds	r24, 0x0449
     a3a:	90 91 4a 04 	lds	r25, 0x044A
     a3e:	08 95       	ret
     a40:	04 97       	sbiw	r24, 0x04	; 4
     a42:	29 f4       	brne	.+10     	; 0xa4e <which_house+0x3e>
     a44:	80 91 47 04 	lds	r24, 0x0447
     a48:	90 91 48 04 	lds	r25, 0x0448
     a4c:	08 95       	ret
     a4e:	8f ef       	ldi	r24, 0xFF	; 255
     a50:	9f ef       	ldi	r25, 0xFF	; 255
     a52:	08 95       	ret

00000a54 <timer1_init>:
     a54:	e1 e8       	ldi	r30, 0x81	; 129
     a56:	f0 e0       	ldi	r31, 0x00	; 0
     a58:	10 82       	st	Z, r1
     a5a:	8c ef       	ldi	r24, 0xFC	; 252
     a5c:	80 93 85 00 	sts	0x0085, r24
     a60:	81 e0       	ldi	r24, 0x01	; 1
     a62:	80 93 84 00 	sts	0x0084, r24
     a66:	93 e0       	ldi	r25, 0x03	; 3
     a68:	90 93 89 00 	sts	0x0089, r25
     a6c:	8f ef       	ldi	r24, 0xFF	; 255
     a6e:	80 93 88 00 	sts	0x0088, r24
     a72:	90 93 8b 00 	sts	0x008B, r25
     a76:	80 93 8a 00 	sts	0x008A, r24
     a7a:	90 93 8d 00 	sts	0x008D, r25
     a7e:	80 93 8c 00 	sts	0x008C, r24
     a82:	90 93 87 00 	sts	0x0087, r25
     a86:	80 93 86 00 	sts	0x0086, r24
     a8a:	8b ea       	ldi	r24, 0xAB	; 171
     a8c:	80 93 80 00 	sts	0x0080, r24
     a90:	10 92 82 00 	sts	0x0082, r1
     a94:	8c e0       	ldi	r24, 0x0C	; 12
     a96:	80 83       	st	Z, r24
     a98:	08 95       	ret

00000a9a <timer5_init>:
     a9a:	e1 e2       	ldi	r30, 0x21	; 33
     a9c:	f1 e0       	ldi	r31, 0x01	; 1
     a9e:	10 82       	st	Z, r1
     aa0:	8f ef       	ldi	r24, 0xFF	; 255
     aa2:	80 93 25 01 	sts	0x0125, r24
     aa6:	91 e0       	ldi	r25, 0x01	; 1
     aa8:	90 93 24 01 	sts	0x0124, r25
     aac:	10 92 29 01 	sts	0x0129, r1
     ab0:	80 93 28 01 	sts	0x0128, r24
     ab4:	10 92 2b 01 	sts	0x012B, r1
     ab8:	80 93 2a 01 	sts	0x012A, r24
     abc:	10 92 2d 01 	sts	0x012D, r1
     ac0:	80 93 2c 01 	sts	0x012C, r24
     ac4:	89 ea       	ldi	r24, 0xA9	; 169
     ac6:	80 93 20 01 	sts	0x0120, r24
     aca:	8b e0       	ldi	r24, 0x0B	; 11
     acc:	80 83       	st	Z, r24
     ace:	08 95       	ret

00000ad0 <buzzer_pin_config>:
     ad0:	9b 9a       	sbi	0x13, 3	; 19
     ad2:	a3 98       	cbi	0x14, 3	; 20
     ad4:	08 95       	ret

00000ad6 <motion_pin_config>:
     ad6:	81 b1       	in	r24, 0x01	; 1
     ad8:	8f 60       	ori	r24, 0x0F	; 15
     ada:	81 b9       	out	0x01, r24	; 1
     adc:	82 b1       	in	r24, 0x02	; 2
     ade:	80 7f       	andi	r24, 0xF0	; 240
     ae0:	82 b9       	out	0x02, r24	; 2
     ae2:	ea e0       	ldi	r30, 0x0A	; 10
     ae4:	f1 e0       	ldi	r31, 0x01	; 1
     ae6:	80 81       	ld	r24, Z
     ae8:	88 61       	ori	r24, 0x18	; 24
     aea:	80 83       	st	Z, r24
     aec:	eb e0       	ldi	r30, 0x0B	; 11
     aee:	f1 e0       	ldi	r31, 0x01	; 1
     af0:	80 81       	ld	r24, Z
     af2:	88 61       	ori	r24, 0x18	; 24
     af4:	80 83       	st	Z, r24
     af6:	08 95       	ret

00000af8 <servo1_pin_config>:
     af8:	25 9a       	sbi	0x04, 5	; 4
     afa:	2d 9a       	sbi	0x05, 5	; 5
     afc:	08 95       	ret

00000afe <servo2_pin_config>:
     afe:	26 9a       	sbi	0x04, 6	; 4
     b00:	2e 9a       	sbi	0x05, 6	; 5
     b02:	08 95       	ret

00000b04 <servo3_pin_config>:
     b04:	27 9a       	sbi	0x04, 7	; 4
     b06:	2f 9a       	sbi	0x05, 7	; 5
     b08:	08 95       	ret

00000b0a <demux_pin_config>:
     b0a:	e1 e0       	ldi	r30, 0x01	; 1
     b0c:	f1 e0       	ldi	r31, 0x01	; 1
     b0e:	80 81       	ld	r24, Z
     b10:	8f ef       	ldi	r24, 0xFF	; 255
     b12:	80 83       	st	Z, r24
     b14:	e2 e0       	ldi	r30, 0x02	; 2
     b16:	f1 e0       	ldi	r31, 0x01	; 1
     b18:	80 81       	ld	r24, Z
     b1a:	8e 7f       	andi	r24, 0xFE	; 254
     b1c:	80 83       	st	Z, r24
     b1e:	08 95       	ret

00000b20 <adc_pin_config>:
     b20:	10 ba       	out	0x10, r1	; 16
     b22:	11 ba       	out	0x11, r1	; 17
     b24:	10 92 07 01 	sts	0x0107, r1
     b28:	10 92 08 01 	sts	0x0108, r1
     b2c:	08 95       	ret

00000b2e <port_init>:
     b2e:	d0 df       	rcall	.-96     	; 0xad0 <buzzer_pin_config>
     b30:	d2 df       	rcall	.-92     	; 0xad6 <motion_pin_config>
     b32:	e2 df       	rcall	.-60     	; 0xaf8 <servo1_pin_config>
     b34:	e4 df       	rcall	.-56     	; 0xafe <servo2_pin_config>
     b36:	e6 df       	rcall	.-52     	; 0xb04 <servo3_pin_config>
     b38:	e8 df       	rcall	.-48     	; 0xb0a <demux_pin_config>
     b3a:	f6 da       	rcall	.-2580   	; 0x128 <lcd_port_config>
     b3c:	f1 cf       	rjmp	.-30     	; 0xb20 <adc_pin_config>
     b3e:	08 95       	ret

00000b40 <motion_set>:
     b40:	92 b1       	in	r25, 0x02	; 2
     b42:	90 7f       	andi	r25, 0xF0	; 240
     b44:	8f 70       	andi	r24, 0x0F	; 15
     b46:	98 2b       	or	r25, r24
     b48:	92 b9       	out	0x02, r25	; 2
     b4a:	08 95       	ret

00000b4c <back>:
     b4c:	86 e0       	ldi	r24, 0x06	; 6
     b4e:	f8 cf       	rjmp	.-16     	; 0xb40 <motion_set>
     b50:	08 95       	ret

00000b52 <forward>:
     b52:	89 e0       	ldi	r24, 0x09	; 9
     b54:	f5 cf       	rjmp	.-22     	; 0xb40 <motion_set>
     b56:	08 95       	ret

00000b58 <right>:
     b58:	85 e0       	ldi	r24, 0x05	; 5
     b5a:	f2 cf       	rjmp	.-28     	; 0xb40 <motion_set>
     b5c:	08 95       	ret

00000b5e <left>:
     b5e:	8a e0       	ldi	r24, 0x0A	; 10
     b60:	ef cf       	rjmp	.-34     	; 0xb40 <motion_set>
     b62:	08 95       	ret

00000b64 <soft_right>:
     b64:	84 e0       	ldi	r24, 0x04	; 4
     b66:	ec cf       	rjmp	.-40     	; 0xb40 <motion_set>
     b68:	08 95       	ret

00000b6a <soft_left>:
     b6a:	82 e0       	ldi	r24, 0x02	; 2
     b6c:	e9 cf       	rjmp	.-46     	; 0xb40 <motion_set>
     b6e:	08 95       	ret

00000b70 <stop>:
     b70:	80 e0       	ldi	r24, 0x00	; 0
     b72:	e6 cf       	rjmp	.-52     	; 0xb40 <motion_set>
     b74:	08 95       	ret

00000b76 <servo_2>:
     b76:	10 92 8b 00 	sts	0x008B, r1
     b7a:	68 2f       	mov	r22, r24
     b7c:	70 e0       	ldi	r23, 0x00	; 0
     b7e:	80 e0       	ldi	r24, 0x00	; 0
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	0e 94 4b 2a 	call	0x5496	; 0x5496 <__floatunsisf>
     b86:	2b e7       	ldi	r18, 0x7B	; 123
     b88:	34 e1       	ldi	r19, 0x14	; 20
     b8a:	4e ee       	ldi	r20, 0xEE	; 238
     b8c:	5f e3       	ldi	r21, 0x3F	; 63
     b8e:	0e 94 b7 29 	call	0x536e	; 0x536e <__divsf3>
     b92:	20 e0       	ldi	r18, 0x00	; 0
     b94:	30 e0       	ldi	r19, 0x00	; 0
     b96:	4c e0       	ldi	r20, 0x0C	; 12
     b98:	52 e4       	ldi	r21, 0x42	; 66
     b9a:	0e 94 53 29 	call	0x52a6	; 0x52a6 <__addsf3>
     b9e:	0e 94 1f 2a 	call	0x543e	; 0x543e <__fixunssfsi>
     ba2:	60 93 8a 00 	sts	0x008A, r22
     ba6:	08 95       	ret

00000ba8 <servo_1_free>:
     ba8:	83 e0       	ldi	r24, 0x03	; 3
     baa:	80 93 89 00 	sts	0x0089, r24
     bae:	8f ef       	ldi	r24, 0xFF	; 255
     bb0:	80 93 88 00 	sts	0x0088, r24
     bb4:	08 95       	ret

00000bb6 <servo_2_free>:
     bb6:	83 e0       	ldi	r24, 0x03	; 3
     bb8:	80 93 8b 00 	sts	0x008B, r24
     bbc:	8f ef       	ldi	r24, 0xFF	; 255
     bbe:	80 93 8a 00 	sts	0x008A, r24
     bc2:	08 95       	ret

00000bc4 <servo_3_free>:
     bc4:	83 e0       	ldi	r24, 0x03	; 3
     bc6:	80 93 8d 00 	sts	0x008D, r24
     bca:	8f ef       	ldi	r24, 0xFF	; 255
     bcc:	80 93 8c 00 	sts	0x008C, r24
     bd0:	08 95       	ret

00000bd2 <ADC_Conversion>:
     bd2:	88 30       	cpi	r24, 0x08	; 8
     bd4:	18 f0       	brcs	.+6      	; 0xbdc <ADC_Conversion+0xa>
     bd6:	98 e0       	ldi	r25, 0x08	; 8
     bd8:	90 93 7b 00 	sts	0x007B, r25
     bdc:	87 70       	andi	r24, 0x07	; 7
     bde:	80 62       	ori	r24, 0x20	; 32
     be0:	80 93 7c 00 	sts	0x007C, r24
     be4:	ea e7       	ldi	r30, 0x7A	; 122
     be6:	f0 e0       	ldi	r31, 0x00	; 0
     be8:	80 81       	ld	r24, Z
     bea:	80 64       	ori	r24, 0x40	; 64
     bec:	80 83       	st	Z, r24
     bee:	80 81       	ld	r24, Z
     bf0:	84 ff       	sbrs	r24, 4
     bf2:	fd cf       	rjmp	.-6      	; 0xbee <ADC_Conversion+0x1c>
     bf4:	80 91 79 00 	lds	r24, 0x0079
     bf8:	ea e7       	ldi	r30, 0x7A	; 122
     bfa:	f0 e0       	ldi	r31, 0x00	; 0
     bfc:	90 81       	ld	r25, Z
     bfe:	90 61       	ori	r25, 0x10	; 16
     c00:	90 83       	st	Z, r25
     c02:	10 92 7b 00 	sts	0x007B, r1
     c06:	08 95       	ret

00000c08 <LCD_Function>:
     c08:	cf 93       	push	r28
     c0a:	df 93       	push	r29
     c0c:	ec 01       	movw	r28, r24
     c0e:	fd da       	rcall	.-2566   	; 0x20a <lcd_init>
     c10:	c3 30       	cpi	r28, 0x03	; 3
     c12:	d1 05       	cpc	r29, r1
     c14:	09 f4       	brne	.+2      	; 0xc18 <LCD_Function+0x10>
     c16:	35 c0       	rjmp	.+106    	; 0xc82 <LCD_Function+0x7a>
     c18:	2c f4       	brge	.+10     	; 0xc24 <LCD_Function+0x1c>
     c1a:	20 97       	sbiw	r28, 0x00	; 0
     c1c:	51 f0       	breq	.+20     	; 0xc32 <LCD_Function+0x2a>
     c1e:	21 97       	sbiw	r28, 0x01	; 1
     c20:	71 f0       	breq	.+28     	; 0xc3e <LCD_Function+0x36>
     c22:	34 c0       	rjmp	.+104    	; 0xc8c <LCD_Function+0x84>
     c24:	c5 30       	cpi	r28, 0x05	; 5
     c26:	d1 05       	cpc	r29, r1
     c28:	81 f0       	breq	.+32     	; 0xc4a <LCD_Function+0x42>
     c2a:	04 f1       	brlt	.+64     	; 0xc6c <LCD_Function+0x64>
     c2c:	26 97       	sbiw	r28, 0x06	; 6
     c2e:	99 f0       	breq	.+38     	; 0xc56 <LCD_Function+0x4e>
     c30:	2d c0       	rjmp	.+90     	; 0xc8c <LCD_Function+0x84>
     c32:	82 e8       	ldi	r24, 0x82	; 130
     c34:	c5 da       	rcall	.-2678   	; 0x1c0 <lcd_wr_command>
     c36:	89 e8       	ldi	r24, 0x89	; 137
     c38:	94 e0       	ldi	r25, 0x04	; 4
     c3a:	20 db       	rcall	.-2496   	; 0x27c <lcd_string>
     c3c:	27 c0       	rjmp	.+78     	; 0xc8c <LCD_Function+0x84>
     c3e:	82 e8       	ldi	r24, 0x82	; 130
     c40:	bf da       	rcall	.-2690   	; 0x1c0 <lcd_wr_command>
     c42:	87 e9       	ldi	r24, 0x97	; 151
     c44:	94 e0       	ldi	r25, 0x04	; 4
     c46:	1a db       	rcall	.-2508   	; 0x27c <lcd_string>
     c48:	21 c0       	rjmp	.+66     	; 0xc8c <LCD_Function+0x84>
     c4a:	82 e8       	ldi	r24, 0x82	; 130
     c4c:	b9 da       	rcall	.-2702   	; 0x1c0 <lcd_wr_command>
     c4e:	85 ea       	ldi	r24, 0xA5	; 165
     c50:	94 e0       	ldi	r25, 0x04	; 4
     c52:	14 db       	rcall	.-2520   	; 0x27c <lcd_string>
     c54:	1b c0       	rjmp	.+54     	; 0xc8c <LCD_Function+0x84>
     c56:	85 e8       	ldi	r24, 0x85	; 133
     c58:	b3 da       	rcall	.-2714   	; 0x1c0 <lcd_wr_command>
     c5a:	8d ea       	ldi	r24, 0xAD	; 173
     c5c:	94 e0       	ldi	r25, 0x04	; 4
     c5e:	0e db       	rcall	.-2532   	; 0x27c <lcd_string>
     c60:	80 ec       	ldi	r24, 0xC0	; 192
     c62:	ae da       	rcall	.-2724   	; 0x1c0 <lcd_wr_command>
     c64:	83 eb       	ldi	r24, 0xB3	; 179
     c66:	94 e0       	ldi	r25, 0x04	; 4
     c68:	09 db       	rcall	.-2542   	; 0x27c <lcd_string>
     c6a:	10 c0       	rjmp	.+32     	; 0xc8c <LCD_Function+0x84>
     c6c:	85 e8       	ldi	r24, 0x85	; 133
     c6e:	a8 da       	rcall	.-2736   	; 0x1c0 <lcd_wr_command>
     c70:	82 ec       	ldi	r24, 0xC2	; 194
     c72:	94 e0       	ldi	r25, 0x04	; 4
     c74:	03 db       	rcall	.-2554   	; 0x27c <lcd_string>
     c76:	82 ec       	ldi	r24, 0xC2	; 194
     c78:	a3 da       	rcall	.-2746   	; 0x1c0 <lcd_wr_command>
     c7a:	89 ec       	ldi	r24, 0xC9	; 201
     c7c:	94 e0       	ldi	r25, 0x04	; 4
     c7e:	fe da       	rcall	.-2564   	; 0x27c <lcd_string>
     c80:	05 c0       	rjmp	.+10     	; 0xc8c <LCD_Function+0x84>
     c82:	82 e8       	ldi	r24, 0x82	; 130
     c84:	9d da       	rcall	.-2758   	; 0x1c0 <lcd_wr_command>
     c86:	87 ed       	ldi	r24, 0xD7	; 215
     c88:	94 e0       	ldi	r25, 0x04	; 4
     c8a:	f8 da       	rcall	.-2576   	; 0x27c <lcd_string>
     c8c:	df 91       	pop	r29
     c8e:	cf 91       	pop	r28
     c90:	08 95       	ret

00000c92 <object_detect>:
     c92:	cf 93       	push	r28
     c94:	86 e9       	ldi	r24, 0x96	; 150
     c96:	80 93 28 01 	sts	0x0128, r24
     c9a:	80 93 2a 01 	sts	0x012A, r24
     c9e:	80 91 fe 04 	lds	r24, 0x04FE
     ca2:	90 91 ff 04 	lds	r25, 0x04FF
     ca6:	82 30       	cpi	r24, 0x02	; 2
     ca8:	91 05       	cpc	r25, r1
     caa:	11 f0       	breq	.+4      	; 0xcb0 <object_detect+0x1e>
     cac:	0b 97       	sbiw	r24, 0x0b	; 11
     cae:	d9 f4       	brne	.+54     	; 0xce6 <object_detect+0x54>
     cb0:	53 df       	rcall	.-346    	; 0xb58 <right>
     cb2:	2f ef       	ldi	r18, 0xFF	; 255
     cb4:	8f e7       	ldi	r24, 0x7F	; 127
     cb6:	9d e0       	ldi	r25, 0x0D	; 13
     cb8:	21 50       	subi	r18, 0x01	; 1
     cba:	80 40       	sbci	r24, 0x00	; 0
     cbc:	90 40       	sbci	r25, 0x00	; 0
     cbe:	e1 f7       	brne	.-8      	; 0xcb8 <object_detect+0x26>
     cc0:	00 c0       	rjmp	.+0      	; 0xcc2 <object_detect+0x30>
     cc2:	00 00       	nop
     cc4:	55 df       	rcall	.-342    	; 0xb70 <stop>
     cc6:	2f ef       	ldi	r18, 0xFF	; 255
     cc8:	8f e7       	ldi	r24, 0x7F	; 127
     cca:	94 e0       	ldi	r25, 0x04	; 4
     ccc:	21 50       	subi	r18, 0x01	; 1
     cce:	80 40       	sbci	r24, 0x00	; 0
     cd0:	90 40       	sbci	r25, 0x00	; 0
     cd2:	e1 f7       	brne	.-8      	; 0xccc <object_detect+0x3a>
     cd4:	00 c0       	rjmp	.+0      	; 0xcd6 <object_detect+0x44>
     cd6:	00 00       	nop
     cd8:	84 e6       	ldi	r24, 0x64	; 100
     cda:	80 93 28 01 	sts	0x0128, r24
     cde:	80 93 2a 01 	sts	0x012A, r24
     ce2:	3d df       	rcall	.-390    	; 0xb5e <left>
     ce4:	1a c0       	rjmp	.+52     	; 0xd1a <object_detect+0x88>
     ce6:	3b df       	rcall	.-394    	; 0xb5e <left>
     ce8:	2f ef       	ldi	r18, 0xFF	; 255
     cea:	8f e7       	ldi	r24, 0x7F	; 127
     cec:	9d e0       	ldi	r25, 0x0D	; 13
     cee:	21 50       	subi	r18, 0x01	; 1
     cf0:	80 40       	sbci	r24, 0x00	; 0
     cf2:	90 40       	sbci	r25, 0x00	; 0
     cf4:	e1 f7       	brne	.-8      	; 0xcee <object_detect+0x5c>
     cf6:	00 c0       	rjmp	.+0      	; 0xcf8 <object_detect+0x66>
     cf8:	00 00       	nop
     cfa:	3a df       	rcall	.-396    	; 0xb70 <stop>
     cfc:	2f ef       	ldi	r18, 0xFF	; 255
     cfe:	8f e7       	ldi	r24, 0x7F	; 127
     d00:	94 e0       	ldi	r25, 0x04	; 4
     d02:	21 50       	subi	r18, 0x01	; 1
     d04:	80 40       	sbci	r24, 0x00	; 0
     d06:	90 40       	sbci	r25, 0x00	; 0
     d08:	e1 f7       	brne	.-8      	; 0xd02 <object_detect+0x70>
     d0a:	00 c0       	rjmp	.+0      	; 0xd0c <object_detect+0x7a>
     d0c:	00 00       	nop
     d0e:	8e e6       	ldi	r24, 0x6E	; 110
     d10:	80 93 28 01 	sts	0x0128, r24
     d14:	80 93 2a 01 	sts	0x012A, r24
     d18:	1f df       	rcall	.-450    	; 0xb58 <right>
     d1a:	8d e0       	ldi	r24, 0x0D	; 13
     d1c:	5a df       	rcall	.-332    	; 0xbd2 <ADC_Conversion>
     d1e:	c8 2f       	mov	r28, r24
     d20:	01 c0       	rjmp	.+2      	; 0xd24 <object_detect+0x92>
     d22:	c8 2f       	mov	r28, r24
     d24:	8d e0       	ldi	r24, 0x0D	; 13
     d26:	55 df       	rcall	.-342    	; 0xbd2 <ADC_Conversion>
     d28:	8c 17       	cp	r24, r28
     d2a:	d8 f7       	brcc	.-10     	; 0xd22 <object_detect+0x90>
     d2c:	98 ec       	ldi	r25, 0xC8	; 200
     d2e:	98 0f       	add	r25, r24
     d30:	97 32       	cpi	r25, 0x27	; 39
     d32:	b8 f7       	brcc	.-18     	; 0xd22 <object_detect+0x90>
     d34:	12 b8       	out	0x02, r1	; 2
     d36:	1c df       	rcall	.-456    	; 0xb70 <stop>
     d38:	cf 91       	pop	r28
     d3a:	08 95       	ret

00000d3c <m_pick>:
     d3c:	cf 93       	push	r28
     d3e:	e2 e0       	ldi	r30, 0x02	; 2
     d40:	f1 e0       	ldi	r31, 0x01	; 1
     d42:	80 81       	ld	r24, Z
     d44:	81 60       	ori	r24, 0x01	; 1
     d46:	80 83       	st	Z, r24
     d48:	2f ef       	ldi	r18, 0xFF	; 255
     d4a:	8f e7       	ldi	r24, 0x7F	; 127
     d4c:	94 e0       	ldi	r25, 0x04	; 4
     d4e:	21 50       	subi	r18, 0x01	; 1
     d50:	80 40       	sbci	r24, 0x00	; 0
     d52:	90 40       	sbci	r25, 0x00	; 0
     d54:	e1 f7       	brne	.-8      	; 0xd4e <m_pick+0x12>
     d56:	00 c0       	rjmp	.+0      	; 0xd58 <m_pick+0x1c>
     d58:	00 00       	nop
     d5a:	2f ef       	ldi	r18, 0xFF	; 255
     d5c:	8f e7       	ldi	r24, 0x7F	; 127
     d5e:	94 e0       	ldi	r25, 0x04	; 4
     d60:	21 50       	subi	r18, 0x01	; 1
     d62:	80 40       	sbci	r24, 0x00	; 0
     d64:	90 40       	sbci	r25, 0x00	; 0
     d66:	e1 f7       	brne	.-8      	; 0xd60 <m_pick+0x24>
     d68:	00 c0       	rjmp	.+0      	; 0xd6a <m_pick+0x2e>
     d6a:	00 00       	nop
     d6c:	10 92 89 00 	sts	0x0089, r1
     d70:	86 e5       	ldi	r24, 0x56	; 86
     d72:	80 93 88 00 	sts	0x0088, r24
     d76:	2f ef       	ldi	r18, 0xFF	; 255
     d78:	8f ef       	ldi	r24, 0xFF	; 255
     d7a:	91 e1       	ldi	r25, 0x11	; 17
     d7c:	21 50       	subi	r18, 0x01	; 1
     d7e:	80 40       	sbci	r24, 0x00	; 0
     d80:	90 40       	sbci	r25, 0x00	; 0
     d82:	e1 f7       	brne	.-8      	; 0xd7c <m_pick+0x40>
     d84:	00 c0       	rjmp	.+0      	; 0xd86 <m_pick+0x4a>
     d86:	00 00       	nop
     d88:	0f df       	rcall	.-482    	; 0xba8 <servo_1_free>
     d8a:	2f ef       	ldi	r18, 0xFF	; 255
     d8c:	8f e7       	ldi	r24, 0x7F	; 127
     d8e:	94 e0       	ldi	r25, 0x04	; 4
     d90:	21 50       	subi	r18, 0x01	; 1
     d92:	80 40       	sbci	r24, 0x00	; 0
     d94:	90 40       	sbci	r25, 0x00	; 0
     d96:	e1 f7       	brne	.-8      	; 0xd90 <m_pick+0x54>
     d98:	00 c0       	rjmp	.+0      	; 0xd9a <m_pick+0x5e>
     d9a:	00 00       	nop
     d9c:	10 92 8d 00 	sts	0x008D, r1
     da0:	8e e6       	ldi	r24, 0x6E	; 110
     da2:	80 93 8c 00 	sts	0x008C, r24
     da6:	2f ef       	ldi	r18, 0xFF	; 255
     da8:	8f eb       	ldi	r24, 0xBF	; 191
     daa:	91 e2       	ldi	r25, 0x21	; 33
     dac:	21 50       	subi	r18, 0x01	; 1
     dae:	80 40       	sbci	r24, 0x00	; 0
     db0:	90 40       	sbci	r25, 0x00	; 0
     db2:	e1 f7       	brne	.-8      	; 0xdac <m_pick+0x70>
     db4:	00 c0       	rjmp	.+0      	; 0xdb6 <m_pick+0x7a>
     db6:	00 00       	nop
     db8:	c0 e0       	ldi	r28, 0x00	; 0
     dba:	8c 2f       	mov	r24, r28
     dbc:	dc de       	rcall	.-584    	; 0xb76 <servo_2>
     dbe:	86 e6       	ldi	r24, 0x66	; 102
     dc0:	96 e5       	ldi	r25, 0x56	; 86
     dc2:	01 97       	sbiw	r24, 0x01	; 1
     dc4:	f1 f7       	brne	.-4      	; 0xdc2 <m_pick+0x86>
     dc6:	00 00       	nop
     dc8:	cf 5f       	subi	r28, 0xFF	; 255
     dca:	c9 38       	cpi	r28, 0x89	; 137
     dcc:	b1 f7       	brne	.-20     	; 0xdba <m_pick+0x7e>
     dce:	9f ef       	ldi	r25, 0xFF	; 255
     dd0:	2f e7       	ldi	r18, 0x7F	; 127
     dd2:	84 e0       	ldi	r24, 0x04	; 4
     dd4:	91 50       	subi	r25, 0x01	; 1
     dd6:	20 40       	sbci	r18, 0x00	; 0
     dd8:	80 40       	sbci	r24, 0x00	; 0
     dda:	e1 f7       	brne	.-8      	; 0xdd4 <m_pick+0x98>
     ddc:	00 c0       	rjmp	.+0      	; 0xdde <m_pick+0xa2>
     dde:	00 00       	nop
     de0:	10 92 8d 00 	sts	0x008D, r1
     de4:	83 e2       	ldi	r24, 0x23	; 35
     de6:	80 93 8c 00 	sts	0x008C, r24
     dea:	9f ef       	ldi	r25, 0xFF	; 255
     dec:	2f eb       	ldi	r18, 0xBF	; 191
     dee:	81 e2       	ldi	r24, 0x21	; 33
     df0:	91 50       	subi	r25, 0x01	; 1
     df2:	20 40       	sbci	r18, 0x00	; 0
     df4:	80 40       	sbci	r24, 0x00	; 0
     df6:	e1 f7       	brne	.-8      	; 0xdf0 <m_pick+0xb4>
     df8:	00 c0       	rjmp	.+0      	; 0xdfa <m_pick+0xbe>
     dfa:	00 00       	nop
     dfc:	8f e0       	ldi	r24, 0x0F	; 15
     dfe:	bb de       	rcall	.-650    	; 0xb76 <servo_2>
     e00:	9f ef       	ldi	r25, 0xFF	; 255
     e02:	2f ef       	ldi	r18, 0xFF	; 255
     e04:	8c e2       	ldi	r24, 0x2C	; 44
     e06:	91 50       	subi	r25, 0x01	; 1
     e08:	20 40       	sbci	r18, 0x00	; 0
     e0a:	80 40       	sbci	r24, 0x00	; 0
     e0c:	e1 f7       	brne	.-8      	; 0xe06 <m_pick+0xca>
     e0e:	00 c0       	rjmp	.+0      	; 0xe10 <m_pick+0xd4>
     e10:	00 00       	nop
     e12:	d1 de       	rcall	.-606    	; 0xbb6 <servo_2_free>
     e14:	cf 91       	pop	r28
     e16:	08 95       	ret

00000e18 <s_pick>:
     e18:	cf 93       	push	r28
     e1a:	e2 e0       	ldi	r30, 0x02	; 2
     e1c:	f1 e0       	ldi	r31, 0x01	; 1
     e1e:	80 81       	ld	r24, Z
     e20:	88 60       	ori	r24, 0x08	; 8
     e22:	80 83       	st	Z, r24
     e24:	2f ef       	ldi	r18, 0xFF	; 255
     e26:	8f e7       	ldi	r24, 0x7F	; 127
     e28:	94 e0       	ldi	r25, 0x04	; 4
     e2a:	21 50       	subi	r18, 0x01	; 1
     e2c:	80 40       	sbci	r24, 0x00	; 0
     e2e:	90 40       	sbci	r25, 0x00	; 0
     e30:	e1 f7       	brne	.-8      	; 0xe2a <s_pick+0x12>
     e32:	00 c0       	rjmp	.+0      	; 0xe34 <s_pick+0x1c>
     e34:	00 00       	nop
     e36:	2f ef       	ldi	r18, 0xFF	; 255
     e38:	8f e7       	ldi	r24, 0x7F	; 127
     e3a:	94 e0       	ldi	r25, 0x04	; 4
     e3c:	21 50       	subi	r18, 0x01	; 1
     e3e:	80 40       	sbci	r24, 0x00	; 0
     e40:	90 40       	sbci	r25, 0x00	; 0
     e42:	e1 f7       	brne	.-8      	; 0xe3c <s_pick+0x24>
     e44:	00 c0       	rjmp	.+0      	; 0xe46 <s_pick+0x2e>
     e46:	00 00       	nop
     e48:	10 92 89 00 	sts	0x0089, r1
     e4c:	85 e4       	ldi	r24, 0x45	; 69
     e4e:	80 93 88 00 	sts	0x0088, r24
     e52:	2f ef       	ldi	r18, 0xFF	; 255
     e54:	8f ef       	ldi	r24, 0xFF	; 255
     e56:	91 e1       	ldi	r25, 0x11	; 17
     e58:	21 50       	subi	r18, 0x01	; 1
     e5a:	80 40       	sbci	r24, 0x00	; 0
     e5c:	90 40       	sbci	r25, 0x00	; 0
     e5e:	e1 f7       	brne	.-8      	; 0xe58 <s_pick+0x40>
     e60:	00 c0       	rjmp	.+0      	; 0xe62 <s_pick+0x4a>
     e62:	00 00       	nop
     e64:	a1 de       	rcall	.-702    	; 0xba8 <servo_1_free>
     e66:	2f ef       	ldi	r18, 0xFF	; 255
     e68:	8f e7       	ldi	r24, 0x7F	; 127
     e6a:	94 e0       	ldi	r25, 0x04	; 4
     e6c:	21 50       	subi	r18, 0x01	; 1
     e6e:	80 40       	sbci	r24, 0x00	; 0
     e70:	90 40       	sbci	r25, 0x00	; 0
     e72:	e1 f7       	brne	.-8      	; 0xe6c <s_pick+0x54>
     e74:	00 c0       	rjmp	.+0      	; 0xe76 <s_pick+0x5e>
     e76:	00 00       	nop
     e78:	10 92 8d 00 	sts	0x008D, r1
     e7c:	83 e3       	ldi	r24, 0x33	; 51
     e7e:	80 93 8c 00 	sts	0x008C, r24
     e82:	2f ef       	ldi	r18, 0xFF	; 255
     e84:	8f eb       	ldi	r24, 0xBF	; 191
     e86:	91 e2       	ldi	r25, 0x21	; 33
     e88:	21 50       	subi	r18, 0x01	; 1
     e8a:	80 40       	sbci	r24, 0x00	; 0
     e8c:	90 40       	sbci	r25, 0x00	; 0
     e8e:	e1 f7       	brne	.-8      	; 0xe88 <s_pick+0x70>
     e90:	00 c0       	rjmp	.+0      	; 0xe92 <s_pick+0x7a>
     e92:	00 00       	nop
     e94:	c0 e0       	ldi	r28, 0x00	; 0
     e96:	8c 2f       	mov	r24, r28
     e98:	6e de       	rcall	.-804    	; 0xb76 <servo_2>
     e9a:	86 e6       	ldi	r24, 0x66	; 102
     e9c:	96 e5       	ldi	r25, 0x56	; 86
     e9e:	01 97       	sbiw	r24, 0x01	; 1
     ea0:	f1 f7       	brne	.-4      	; 0xe9e <s_pick+0x86>
     ea2:	00 00       	nop
     ea4:	cf 5f       	subi	r28, 0xFF	; 255
     ea6:	c9 38       	cpi	r28, 0x89	; 137
     ea8:	b1 f7       	brne	.-20     	; 0xe96 <s_pick+0x7e>
     eaa:	9f ef       	ldi	r25, 0xFF	; 255
     eac:	2f e7       	ldi	r18, 0x7F	; 127
     eae:	84 e0       	ldi	r24, 0x04	; 4
     eb0:	91 50       	subi	r25, 0x01	; 1
     eb2:	20 40       	sbci	r18, 0x00	; 0
     eb4:	80 40       	sbci	r24, 0x00	; 0
     eb6:	e1 f7       	brne	.-8      	; 0xeb0 <s_pick+0x98>
     eb8:	00 c0       	rjmp	.+0      	; 0xeba <s_pick+0xa2>
     eba:	00 00       	nop
     ebc:	10 92 8d 00 	sts	0x008D, r1
     ec0:	83 e8       	ldi	r24, 0x83	; 131
     ec2:	80 93 8c 00 	sts	0x008C, r24
     ec6:	9f ef       	ldi	r25, 0xFF	; 255
     ec8:	2f eb       	ldi	r18, 0xBF	; 191
     eca:	81 e2       	ldi	r24, 0x21	; 33
     ecc:	91 50       	subi	r25, 0x01	; 1
     ece:	20 40       	sbci	r18, 0x00	; 0
     ed0:	80 40       	sbci	r24, 0x00	; 0
     ed2:	e1 f7       	brne	.-8      	; 0xecc <s_pick+0xb4>
     ed4:	00 c0       	rjmp	.+0      	; 0xed6 <s_pick+0xbe>
     ed6:	00 00       	nop
     ed8:	8f e0       	ldi	r24, 0x0F	; 15
     eda:	4d de       	rcall	.-870    	; 0xb76 <servo_2>
     edc:	9f ef       	ldi	r25, 0xFF	; 255
     ede:	2f ef       	ldi	r18, 0xFF	; 255
     ee0:	8c e2       	ldi	r24, 0x2C	; 44
     ee2:	91 50       	subi	r25, 0x01	; 1
     ee4:	20 40       	sbci	r18, 0x00	; 0
     ee6:	80 40       	sbci	r24, 0x00	; 0
     ee8:	e1 f7       	brne	.-8      	; 0xee2 <s_pick+0xca>
     eea:	00 c0       	rjmp	.+0      	; 0xeec <s_pick+0xd4>
     eec:	00 00       	nop
     eee:	63 de       	rcall	.-826    	; 0xbb6 <servo_2_free>
     ef0:	10 92 89 00 	sts	0x0089, r1
     ef4:	83 e5       	ldi	r24, 0x53	; 83
     ef6:	80 93 88 00 	sts	0x0088, r24
     efa:	9f ef       	ldi	r25, 0xFF	; 255
     efc:	2f eb       	ldi	r18, 0xBF	; 191
     efe:	81 e2       	ldi	r24, 0x21	; 33
     f00:	91 50       	subi	r25, 0x01	; 1
     f02:	20 40       	sbci	r18, 0x00	; 0
     f04:	80 40       	sbci	r24, 0x00	; 0
     f06:	e1 f7       	brne	.-8      	; 0xf00 <s_pick+0xe8>
     f08:	00 c0       	rjmp	.+0      	; 0xf0a <s_pick+0xf2>
     f0a:	00 00       	nop
     f0c:	4d de       	rcall	.-870    	; 0xba8 <servo_1_free>
     f0e:	cf 91       	pop	r28
     f10:	08 95       	ret

00000f12 <inv_place_1>:
     f12:	80 91 42 04 	lds	r24, 0x0442
     f16:	80 93 28 01 	sts	0x0128, r24
     f1a:	80 93 2a 01 	sts	0x012A, r24
     f1e:	1c de       	rcall	.-968    	; 0xb58 <right>
     f20:	2f ef       	ldi	r18, 0xFF	; 255
     f22:	8f e3       	ldi	r24, 0x3F	; 63
     f24:	92 e0       	ldi	r25, 0x02	; 2
     f26:	21 50       	subi	r18, 0x01	; 1
     f28:	80 40       	sbci	r24, 0x00	; 0
     f2a:	90 40       	sbci	r25, 0x00	; 0
     f2c:	e1 f7       	brne	.-8      	; 0xf26 <inv_place_1+0x14>
     f2e:	00 c0       	rjmp	.+0      	; 0xf30 <inv_place_1+0x1e>
     f30:	00 00       	nop
     f32:	1e de       	rcall	.-964    	; 0xb70 <stop>
     f34:	10 92 89 00 	sts	0x0089, r1
     f38:	85 e2       	ldi	r24, 0x25	; 37
     f3a:	80 93 88 00 	sts	0x0088, r24
     f3e:	2f ef       	ldi	r18, 0xFF	; 255
     f40:	8f ef       	ldi	r24, 0xFF	; 255
     f42:	9c e2       	ldi	r25, 0x2C	; 44
     f44:	21 50       	subi	r18, 0x01	; 1
     f46:	80 40       	sbci	r24, 0x00	; 0
     f48:	90 40       	sbci	r25, 0x00	; 0
     f4a:	e1 f7       	brne	.-8      	; 0xf44 <inv_place_1+0x32>
     f4c:	00 c0       	rjmp	.+0      	; 0xf4e <inv_place_1+0x3c>
     f4e:	00 00       	nop
     f50:	2b de       	rcall	.-938    	; 0xba8 <servo_1_free>
     f52:	8d e2       	ldi	r24, 0x2D	; 45
     f54:	10 de       	rcall	.-992    	; 0xb76 <servo_2>
     f56:	2f ef       	ldi	r18, 0xFF	; 255
     f58:	8f ef       	ldi	r24, 0xFF	; 255
     f5a:	9c e2       	ldi	r25, 0x2C	; 44
     f5c:	21 50       	subi	r18, 0x01	; 1
     f5e:	80 40       	sbci	r24, 0x00	; 0
     f60:	90 40       	sbci	r25, 0x00	; 0
     f62:	e1 f7       	brne	.-8      	; 0xf5c <inv_place_1+0x4a>
     f64:	00 c0       	rjmp	.+0      	; 0xf66 <inv_place_1+0x54>
     f66:	00 00       	nop
     f68:	e2 e0       	ldi	r30, 0x02	; 2
     f6a:	f1 e0       	ldi	r31, 0x01	; 1
     f6c:	80 81       	ld	r24, Z
     f6e:	81 60       	ori	r24, 0x01	; 1
     f70:	80 83       	st	Z, r24
     f72:	2f ef       	ldi	r18, 0xFF	; 255
     f74:	8f e7       	ldi	r24, 0x7F	; 127
     f76:	94 e0       	ldi	r25, 0x04	; 4
     f78:	21 50       	subi	r18, 0x01	; 1
     f7a:	80 40       	sbci	r24, 0x00	; 0
     f7c:	90 40       	sbci	r25, 0x00	; 0
     f7e:	e1 f7       	brne	.-8      	; 0xf78 <inv_place_1+0x66>
     f80:	00 c0       	rjmp	.+0      	; 0xf82 <inv_place_1+0x70>
     f82:	00 00       	nop
     f84:	10 92 8d 00 	sts	0x008D, r1
     f88:	8b e5       	ldi	r24, 0x5B	; 91
     f8a:	80 93 8c 00 	sts	0x008C, r24
     f8e:	2f ef       	ldi	r18, 0xFF	; 255
     f90:	8f ef       	ldi	r24, 0xFF	; 255
     f92:	9c e2       	ldi	r25, 0x2C	; 44
     f94:	21 50       	subi	r18, 0x01	; 1
     f96:	80 40       	sbci	r24, 0x00	; 0
     f98:	90 40       	sbci	r25, 0x00	; 0
     f9a:	e1 f7       	brne	.-8      	; 0xf94 <inv_place_1+0x82>
     f9c:	00 c0       	rjmp	.+0      	; 0xf9e <inv_place_1+0x8c>
     f9e:	00 00       	nop
     fa0:	11 de       	rcall	.-990    	; 0xbc4 <servo_3_free>
     fa2:	10 92 89 00 	sts	0x0089, r1
     fa6:	83 e2       	ldi	r24, 0x23	; 35
     fa8:	80 93 88 00 	sts	0x0088, r24
     fac:	2f ef       	ldi	r18, 0xFF	; 255
     fae:	8f ef       	ldi	r24, 0xFF	; 255
     fb0:	9c e2       	ldi	r25, 0x2C	; 44
     fb2:	21 50       	subi	r18, 0x01	; 1
     fb4:	80 40       	sbci	r24, 0x00	; 0
     fb6:	90 40       	sbci	r25, 0x00	; 0
     fb8:	e1 f7       	brne	.-8      	; 0xfb2 <inv_place_1+0xa0>
     fba:	00 c0       	rjmp	.+0      	; 0xfbc <inv_place_1+0xaa>
     fbc:	00 00       	nop
     fbe:	f4 dd       	rcall	.-1048   	; 0xba8 <servo_1_free>
     fc0:	e2 e0       	ldi	r30, 0x02	; 2
     fc2:	f1 e0       	ldi	r31, 0x01	; 1
     fc4:	80 81       	ld	r24, Z
     fc6:	8e 7f       	andi	r24, 0xFE	; 254
     fc8:	80 83       	st	Z, r24
     fca:	2f ef       	ldi	r18, 0xFF	; 255
     fcc:	8f e7       	ldi	r24, 0x7F	; 127
     fce:	94 e0       	ldi	r25, 0x04	; 4
     fd0:	21 50       	subi	r18, 0x01	; 1
     fd2:	80 40       	sbci	r24, 0x00	; 0
     fd4:	90 40       	sbci	r25, 0x00	; 0
     fd6:	e1 f7       	brne	.-8      	; 0xfd0 <inv_place_1+0xbe>
     fd8:	00 c0       	rjmp	.+0      	; 0xfda <inv_place_1+0xc8>
     fda:	00 00       	nop
     fdc:	10 92 8d 00 	sts	0x008D, r1
     fe0:	88 e3       	ldi	r24, 0x38	; 56
     fe2:	80 93 8c 00 	sts	0x008C, r24
     fe6:	2f ef       	ldi	r18, 0xFF	; 255
     fe8:	8f ef       	ldi	r24, 0xFF	; 255
     fea:	9c e2       	ldi	r25, 0x2C	; 44
     fec:	21 50       	subi	r18, 0x01	; 1
     fee:	80 40       	sbci	r24, 0x00	; 0
     ff0:	90 40       	sbci	r25, 0x00	; 0
     ff2:	e1 f7       	brne	.-8      	; 0xfec <inv_place_1+0xda>
     ff4:	00 c0       	rjmp	.+0      	; 0xff6 <inv_place_1+0xe4>
     ff6:	00 00       	nop
     ff8:	e5 dd       	rcall	.-1078   	; 0xbc4 <servo_3_free>
     ffa:	80 e0       	ldi	r24, 0x00	; 0
     ffc:	bc dd       	rcall	.-1160   	; 0xb76 <servo_2>
     ffe:	2f ef       	ldi	r18, 0xFF	; 255
    1000:	8f ef       	ldi	r24, 0xFF	; 255
    1002:	9c e2       	ldi	r25, 0x2C	; 44
    1004:	21 50       	subi	r18, 0x01	; 1
    1006:	80 40       	sbci	r24, 0x00	; 0
    1008:	90 40       	sbci	r25, 0x00	; 0
    100a:	e1 f7       	brne	.-8      	; 0x1004 <inv_place_1+0xf2>
    100c:	00 c0       	rjmp	.+0      	; 0x100e <inv_place_1+0xfc>
    100e:	00 00       	nop
    1010:	d2 dd       	rcall	.-1116   	; 0xbb6 <servo_2_free>
    1012:	10 92 89 00 	sts	0x0089, r1
    1016:	86 e5       	ldi	r24, 0x56	; 86
    1018:	80 93 88 00 	sts	0x0088, r24
    101c:	2f ef       	ldi	r18, 0xFF	; 255
    101e:	8f ef       	ldi	r24, 0xFF	; 255
    1020:	9c e2       	ldi	r25, 0x2C	; 44
    1022:	21 50       	subi	r18, 0x01	; 1
    1024:	80 40       	sbci	r24, 0x00	; 0
    1026:	90 40       	sbci	r25, 0x00	; 0
    1028:	e1 f7       	brne	.-8      	; 0x1022 <inv_place_1+0x110>
    102a:	00 c0       	rjmp	.+0      	; 0x102c <inv_place_1+0x11a>
    102c:	00 00       	nop
    102e:	bc dd       	rcall	.-1160   	; 0xba8 <servo_1_free>
    1030:	96 dd       	rcall	.-1236   	; 0xb5e <left>
    1032:	2f ef       	ldi	r18, 0xFF	; 255
    1034:	8f e3       	ldi	r24, 0x3F	; 63
    1036:	92 e0       	ldi	r25, 0x02	; 2
    1038:	21 50       	subi	r18, 0x01	; 1
    103a:	80 40       	sbci	r24, 0x00	; 0
    103c:	90 40       	sbci	r25, 0x00	; 0
    103e:	e1 f7       	brne	.-8      	; 0x1038 <inv_place_1+0x126>
    1040:	00 c0       	rjmp	.+0      	; 0x1042 <inv_place_1+0x130>
    1042:	00 00       	nop
    1044:	95 cd       	rjmp	.-1238   	; 0xb70 <stop>
    1046:	08 95       	ret

00001048 <inv_place_2>:
    1048:	80 91 42 04 	lds	r24, 0x0442
    104c:	80 93 28 01 	sts	0x0128, r24
    1050:	80 93 2a 01 	sts	0x012A, r24
    1054:	84 dd       	rcall	.-1272   	; 0xb5e <left>
    1056:	2f ef       	ldi	r18, 0xFF	; 255
    1058:	8f e3       	ldi	r24, 0x3F	; 63
    105a:	92 e0       	ldi	r25, 0x02	; 2
    105c:	21 50       	subi	r18, 0x01	; 1
    105e:	80 40       	sbci	r24, 0x00	; 0
    1060:	90 40       	sbci	r25, 0x00	; 0
    1062:	e1 f7       	brne	.-8      	; 0x105c <inv_place_2+0x14>
    1064:	00 c0       	rjmp	.+0      	; 0x1066 <inv_place_2+0x1e>
    1066:	00 00       	nop
    1068:	83 dd       	rcall	.-1274   	; 0xb70 <stop>
    106a:	10 92 89 00 	sts	0x0089, r1
    106e:	83 e8       	ldi	r24, 0x83	; 131
    1070:	80 93 88 00 	sts	0x0088, r24
    1074:	2f ef       	ldi	r18, 0xFF	; 255
    1076:	8f ef       	ldi	r24, 0xFF	; 255
    1078:	9c e2       	ldi	r25, 0x2C	; 44
    107a:	21 50       	subi	r18, 0x01	; 1
    107c:	80 40       	sbci	r24, 0x00	; 0
    107e:	90 40       	sbci	r25, 0x00	; 0
    1080:	e1 f7       	brne	.-8      	; 0x107a <inv_place_2+0x32>
    1082:	00 c0       	rjmp	.+0      	; 0x1084 <inv_place_2+0x3c>
    1084:	00 00       	nop
    1086:	90 dd       	rcall	.-1248   	; 0xba8 <servo_1_free>
    1088:	8d e2       	ldi	r24, 0x2D	; 45
    108a:	75 dd       	rcall	.-1302   	; 0xb76 <servo_2>
    108c:	2f ef       	ldi	r18, 0xFF	; 255
    108e:	8f ef       	ldi	r24, 0xFF	; 255
    1090:	9c e2       	ldi	r25, 0x2C	; 44
    1092:	21 50       	subi	r18, 0x01	; 1
    1094:	80 40       	sbci	r24, 0x00	; 0
    1096:	90 40       	sbci	r25, 0x00	; 0
    1098:	e1 f7       	brne	.-8      	; 0x1092 <inv_place_2+0x4a>
    109a:	00 c0       	rjmp	.+0      	; 0x109c <inv_place_2+0x54>
    109c:	00 00       	nop
    109e:	e2 e0       	ldi	r30, 0x02	; 2
    10a0:	f1 e0       	ldi	r31, 0x01	; 1
    10a2:	80 81       	ld	r24, Z
    10a4:	81 60       	ori	r24, 0x01	; 1
    10a6:	80 83       	st	Z, r24
    10a8:	2f ef       	ldi	r18, 0xFF	; 255
    10aa:	8f e7       	ldi	r24, 0x7F	; 127
    10ac:	94 e0       	ldi	r25, 0x04	; 4
    10ae:	21 50       	subi	r18, 0x01	; 1
    10b0:	80 40       	sbci	r24, 0x00	; 0
    10b2:	90 40       	sbci	r25, 0x00	; 0
    10b4:	e1 f7       	brne	.-8      	; 0x10ae <inv_place_2+0x66>
    10b6:	00 c0       	rjmp	.+0      	; 0x10b8 <inv_place_2+0x70>
    10b8:	00 00       	nop
    10ba:	10 92 8d 00 	sts	0x008D, r1
    10be:	8b e5       	ldi	r24, 0x5B	; 91
    10c0:	80 93 8c 00 	sts	0x008C, r24
    10c4:	2f ef       	ldi	r18, 0xFF	; 255
    10c6:	8f ef       	ldi	r24, 0xFF	; 255
    10c8:	9c e2       	ldi	r25, 0x2C	; 44
    10ca:	21 50       	subi	r18, 0x01	; 1
    10cc:	80 40       	sbci	r24, 0x00	; 0
    10ce:	90 40       	sbci	r25, 0x00	; 0
    10d0:	e1 f7       	brne	.-8      	; 0x10ca <inv_place_2+0x82>
    10d2:	00 c0       	rjmp	.+0      	; 0x10d4 <inv_place_2+0x8c>
    10d4:	00 00       	nop
    10d6:	76 dd       	rcall	.-1300   	; 0xbc4 <servo_3_free>
    10d8:	10 92 89 00 	sts	0x0089, r1
    10dc:	81 e8       	ldi	r24, 0x81	; 129
    10de:	80 93 88 00 	sts	0x0088, r24
    10e2:	2f ef       	ldi	r18, 0xFF	; 255
    10e4:	8f ef       	ldi	r24, 0xFF	; 255
    10e6:	9c e2       	ldi	r25, 0x2C	; 44
    10e8:	21 50       	subi	r18, 0x01	; 1
    10ea:	80 40       	sbci	r24, 0x00	; 0
    10ec:	90 40       	sbci	r25, 0x00	; 0
    10ee:	e1 f7       	brne	.-8      	; 0x10e8 <inv_place_2+0xa0>
    10f0:	00 c0       	rjmp	.+0      	; 0x10f2 <inv_place_2+0xaa>
    10f2:	00 00       	nop
    10f4:	59 dd       	rcall	.-1358   	; 0xba8 <servo_1_free>
    10f6:	e2 e0       	ldi	r30, 0x02	; 2
    10f8:	f1 e0       	ldi	r31, 0x01	; 1
    10fa:	80 81       	ld	r24, Z
    10fc:	8e 7f       	andi	r24, 0xFE	; 254
    10fe:	80 83       	st	Z, r24
    1100:	2f ef       	ldi	r18, 0xFF	; 255
    1102:	8f e7       	ldi	r24, 0x7F	; 127
    1104:	94 e0       	ldi	r25, 0x04	; 4
    1106:	21 50       	subi	r18, 0x01	; 1
    1108:	80 40       	sbci	r24, 0x00	; 0
    110a:	90 40       	sbci	r25, 0x00	; 0
    110c:	e1 f7       	brne	.-8      	; 0x1106 <inv_place_2+0xbe>
    110e:	00 c0       	rjmp	.+0      	; 0x1110 <inv_place_2+0xc8>
    1110:	00 00       	nop
    1112:	10 92 8d 00 	sts	0x008D, r1
    1116:	88 e3       	ldi	r24, 0x38	; 56
    1118:	80 93 8c 00 	sts	0x008C, r24
    111c:	2f ef       	ldi	r18, 0xFF	; 255
    111e:	8f ef       	ldi	r24, 0xFF	; 255
    1120:	9c e2       	ldi	r25, 0x2C	; 44
    1122:	21 50       	subi	r18, 0x01	; 1
    1124:	80 40       	sbci	r24, 0x00	; 0
    1126:	90 40       	sbci	r25, 0x00	; 0
    1128:	e1 f7       	brne	.-8      	; 0x1122 <inv_place_2+0xda>
    112a:	00 c0       	rjmp	.+0      	; 0x112c <inv_place_2+0xe4>
    112c:	00 00       	nop
    112e:	4a dd       	rcall	.-1388   	; 0xbc4 <servo_3_free>
    1130:	80 e0       	ldi	r24, 0x00	; 0
    1132:	21 dd       	rcall	.-1470   	; 0xb76 <servo_2>
    1134:	2f ef       	ldi	r18, 0xFF	; 255
    1136:	8f ef       	ldi	r24, 0xFF	; 255
    1138:	9c e2       	ldi	r25, 0x2C	; 44
    113a:	21 50       	subi	r18, 0x01	; 1
    113c:	80 40       	sbci	r24, 0x00	; 0
    113e:	90 40       	sbci	r25, 0x00	; 0
    1140:	e1 f7       	brne	.-8      	; 0x113a <inv_place_2+0xf2>
    1142:	00 c0       	rjmp	.+0      	; 0x1144 <inv_place_2+0xfc>
    1144:	00 00       	nop
    1146:	37 dd       	rcall	.-1426   	; 0xbb6 <servo_2_free>
    1148:	10 92 89 00 	sts	0x0089, r1
    114c:	86 e5       	ldi	r24, 0x56	; 86
    114e:	80 93 88 00 	sts	0x0088, r24
    1152:	2f ef       	ldi	r18, 0xFF	; 255
    1154:	8f ef       	ldi	r24, 0xFF	; 255
    1156:	9c e2       	ldi	r25, 0x2C	; 44
    1158:	21 50       	subi	r18, 0x01	; 1
    115a:	80 40       	sbci	r24, 0x00	; 0
    115c:	90 40       	sbci	r25, 0x00	; 0
    115e:	e1 f7       	brne	.-8      	; 0x1158 <inv_place_2+0x110>
    1160:	00 c0       	rjmp	.+0      	; 0x1162 <inv_place_2+0x11a>
    1162:	00 00       	nop
    1164:	21 dd       	rcall	.-1470   	; 0xba8 <servo_1_free>
    1166:	f8 dc       	rcall	.-1552   	; 0xb58 <right>
    1168:	2f ef       	ldi	r18, 0xFF	; 255
    116a:	8f e3       	ldi	r24, 0x3F	; 63
    116c:	92 e0       	ldi	r25, 0x02	; 2
    116e:	21 50       	subi	r18, 0x01	; 1
    1170:	80 40       	sbci	r24, 0x00	; 0
    1172:	90 40       	sbci	r25, 0x00	; 0
    1174:	e1 f7       	brne	.-8      	; 0x116e <inv_place_2+0x126>
    1176:	00 c0       	rjmp	.+0      	; 0x1178 <inv_place_2+0x130>
    1178:	00 00       	nop
    117a:	fa cc       	rjmp	.-1548   	; 0xb70 <stop>
    117c:	08 95       	ret

0000117e <place_lr>:
    117e:	e2 e0       	ldi	r30, 0x02	; 2
    1180:	f1 e0       	ldi	r31, 0x01	; 1
    1182:	80 81       	ld	r24, Z
    1184:	81 60       	ori	r24, 0x01	; 1
    1186:	80 83       	st	Z, r24
    1188:	2f ef       	ldi	r18, 0xFF	; 255
    118a:	8f e7       	ldi	r24, 0x7F	; 127
    118c:	94 e0       	ldi	r25, 0x04	; 4
    118e:	21 50       	subi	r18, 0x01	; 1
    1190:	80 40       	sbci	r24, 0x00	; 0
    1192:	90 40       	sbci	r25, 0x00	; 0
    1194:	e1 f7       	brne	.-8      	; 0x118e <place_lr+0x10>
    1196:	00 c0       	rjmp	.+0      	; 0x1198 <place_lr+0x1a>
    1198:	00 00       	nop
    119a:	10 92 89 00 	sts	0x0089, r1
    119e:	86 e5       	ldi	r24, 0x56	; 86
    11a0:	80 93 88 00 	sts	0x0088, r24
    11a4:	2f ef       	ldi	r18, 0xFF	; 255
    11a6:	8f eb       	ldi	r24, 0xBF	; 191
    11a8:	91 e2       	ldi	r25, 0x21	; 33
    11aa:	21 50       	subi	r18, 0x01	; 1
    11ac:	80 40       	sbci	r24, 0x00	; 0
    11ae:	90 40       	sbci	r25, 0x00	; 0
    11b0:	e1 f7       	brne	.-8      	; 0x11aa <place_lr+0x2c>
    11b2:	00 c0       	rjmp	.+0      	; 0x11b4 <place_lr+0x36>
    11b4:	00 00       	nop
    11b6:	f8 dc       	rcall	.-1552   	; 0xba8 <servo_1_free>
    11b8:	81 e4       	ldi	r24, 0x41	; 65
    11ba:	dd dc       	rcall	.-1606   	; 0xb76 <servo_2>
    11bc:	2f ef       	ldi	r18, 0xFF	; 255
    11be:	8f eb       	ldi	r24, 0xBF	; 191
    11c0:	91 e2       	ldi	r25, 0x21	; 33
    11c2:	21 50       	subi	r18, 0x01	; 1
    11c4:	80 40       	sbci	r24, 0x00	; 0
    11c6:	90 40       	sbci	r25, 0x00	; 0
    11c8:	e1 f7       	brne	.-8      	; 0x11c2 <place_lr+0x44>
    11ca:	00 c0       	rjmp	.+0      	; 0x11cc <place_lr+0x4e>
    11cc:	00 00       	nop
    11ce:	10 92 8d 00 	sts	0x008D, r1
    11d2:	8b e5       	ldi	r24, 0x5B	; 91
    11d4:	80 93 8c 00 	sts	0x008C, r24
    11d8:	2f ef       	ldi	r18, 0xFF	; 255
    11da:	8f eb       	ldi	r24, 0xBF	; 191
    11dc:	91 e2       	ldi	r25, 0x21	; 33
    11de:	21 50       	subi	r18, 0x01	; 1
    11e0:	80 40       	sbci	r24, 0x00	; 0
    11e2:	90 40       	sbci	r25, 0x00	; 0
    11e4:	e1 f7       	brne	.-8      	; 0x11de <place_lr+0x60>
    11e6:	00 c0       	rjmp	.+0      	; 0x11e8 <place_lr+0x6a>
    11e8:	00 00       	nop
    11ea:	e2 e0       	ldi	r30, 0x02	; 2
    11ec:	f1 e0       	ldi	r31, 0x01	; 1
    11ee:	80 81       	ld	r24, Z
    11f0:	8e 7f       	andi	r24, 0xFE	; 254
    11f2:	80 83       	st	Z, r24
    11f4:	2f ef       	ldi	r18, 0xFF	; 255
    11f6:	8f e7       	ldi	r24, 0x7F	; 127
    11f8:	94 e0       	ldi	r25, 0x04	; 4
    11fa:	21 50       	subi	r18, 0x01	; 1
    11fc:	80 40       	sbci	r24, 0x00	; 0
    11fe:	90 40       	sbci	r25, 0x00	; 0
    1200:	e1 f7       	brne	.-8      	; 0x11fa <place_lr+0x7c>
    1202:	00 c0       	rjmp	.+0      	; 0x1204 <place_lr+0x86>
    1204:	00 00       	nop
    1206:	10 92 89 00 	sts	0x0089, r1
    120a:	89 e4       	ldi	r24, 0x49	; 73
    120c:	80 93 88 00 	sts	0x0088, r24
    1210:	2f ef       	ldi	r18, 0xFF	; 255
    1212:	8f eb       	ldi	r24, 0xBF	; 191
    1214:	91 e2       	ldi	r25, 0x21	; 33
    1216:	21 50       	subi	r18, 0x01	; 1
    1218:	80 40       	sbci	r24, 0x00	; 0
    121a:	90 40       	sbci	r25, 0x00	; 0
    121c:	e1 f7       	brne	.-8      	; 0x1216 <place_lr+0x98>
    121e:	00 c0       	rjmp	.+0      	; 0x1220 <place_lr+0xa2>
    1220:	00 00       	nop
    1222:	10 92 8d 00 	sts	0x008D, r1
    1226:	88 e3       	ldi	r24, 0x38	; 56
    1228:	80 93 8c 00 	sts	0x008C, r24
    122c:	2f ef       	ldi	r18, 0xFF	; 255
    122e:	8f eb       	ldi	r24, 0xBF	; 191
    1230:	91 e2       	ldi	r25, 0x21	; 33
    1232:	21 50       	subi	r18, 0x01	; 1
    1234:	80 40       	sbci	r24, 0x00	; 0
    1236:	90 40       	sbci	r25, 0x00	; 0
    1238:	e1 f7       	brne	.-8      	; 0x1232 <place_lr+0xb4>
    123a:	00 c0       	rjmp	.+0      	; 0x123c <place_lr+0xbe>
    123c:	00 00       	nop
    123e:	80 e0       	ldi	r24, 0x00	; 0
    1240:	9a dc       	rcall	.-1740   	; 0xb76 <servo_2>
    1242:	2f ef       	ldi	r18, 0xFF	; 255
    1244:	8f ef       	ldi	r24, 0xFF	; 255
    1246:	9c e2       	ldi	r25, 0x2C	; 44
    1248:	21 50       	subi	r18, 0x01	; 1
    124a:	80 40       	sbci	r24, 0x00	; 0
    124c:	90 40       	sbci	r25, 0x00	; 0
    124e:	e1 f7       	brne	.-8      	; 0x1248 <place_lr+0xca>
    1250:	00 c0       	rjmp	.+0      	; 0x1252 <place_lr+0xd4>
    1252:	00 00       	nop
    1254:	10 92 89 00 	sts	0x0089, r1
    1258:	86 e5       	ldi	r24, 0x56	; 86
    125a:	80 93 88 00 	sts	0x0088, r24
    125e:	08 95       	ret

00001260 <place_hr>:
    1260:	e2 e0       	ldi	r30, 0x02	; 2
    1262:	f1 e0       	ldi	r31, 0x01	; 1
    1264:	80 81       	ld	r24, Z
    1266:	81 60       	ori	r24, 0x01	; 1
    1268:	80 83       	st	Z, r24
    126a:	2f ef       	ldi	r18, 0xFF	; 255
    126c:	8f e7       	ldi	r24, 0x7F	; 127
    126e:	94 e0       	ldi	r25, 0x04	; 4
    1270:	21 50       	subi	r18, 0x01	; 1
    1272:	80 40       	sbci	r24, 0x00	; 0
    1274:	90 40       	sbci	r25, 0x00	; 0
    1276:	e1 f7       	brne	.-8      	; 0x1270 <place_hr+0x10>
    1278:	00 c0       	rjmp	.+0      	; 0x127a <place_hr+0x1a>
    127a:	00 00       	nop
    127c:	10 92 89 00 	sts	0x0089, r1
    1280:	86 e5       	ldi	r24, 0x56	; 86
    1282:	80 93 88 00 	sts	0x0088, r24
    1286:	2f ef       	ldi	r18, 0xFF	; 255
    1288:	8f eb       	ldi	r24, 0xBF	; 191
    128a:	91 e2       	ldi	r25, 0x21	; 33
    128c:	21 50       	subi	r18, 0x01	; 1
    128e:	80 40       	sbci	r24, 0x00	; 0
    1290:	90 40       	sbci	r25, 0x00	; 0
    1292:	e1 f7       	brne	.-8      	; 0x128c <place_hr+0x2c>
    1294:	00 c0       	rjmp	.+0      	; 0x1296 <place_hr+0x36>
    1296:	00 00       	nop
    1298:	87 dc       	rcall	.-1778   	; 0xba8 <servo_1_free>
    129a:	83 e2       	ldi	r24, 0x23	; 35
    129c:	6c dc       	rcall	.-1832   	; 0xb76 <servo_2>
    129e:	2f ef       	ldi	r18, 0xFF	; 255
    12a0:	8f eb       	ldi	r24, 0xBF	; 191
    12a2:	91 e2       	ldi	r25, 0x21	; 33
    12a4:	21 50       	subi	r18, 0x01	; 1
    12a6:	80 40       	sbci	r24, 0x00	; 0
    12a8:	90 40       	sbci	r25, 0x00	; 0
    12aa:	e1 f7       	brne	.-8      	; 0x12a4 <place_hr+0x44>
    12ac:	00 c0       	rjmp	.+0      	; 0x12ae <place_hr+0x4e>
    12ae:	00 00       	nop
    12b0:	10 92 8d 00 	sts	0x008D, r1
    12b4:	8b e5       	ldi	r24, 0x5B	; 91
    12b6:	80 93 8c 00 	sts	0x008C, r24
    12ba:	2f ef       	ldi	r18, 0xFF	; 255
    12bc:	8f eb       	ldi	r24, 0xBF	; 191
    12be:	91 e2       	ldi	r25, 0x21	; 33
    12c0:	21 50       	subi	r18, 0x01	; 1
    12c2:	80 40       	sbci	r24, 0x00	; 0
    12c4:	90 40       	sbci	r25, 0x00	; 0
    12c6:	e1 f7       	brne	.-8      	; 0x12c0 <place_hr+0x60>
    12c8:	00 c0       	rjmp	.+0      	; 0x12ca <place_hr+0x6a>
    12ca:	00 00       	nop
    12cc:	e2 e0       	ldi	r30, 0x02	; 2
    12ce:	f1 e0       	ldi	r31, 0x01	; 1
    12d0:	80 81       	ld	r24, Z
    12d2:	8e 7f       	andi	r24, 0xFE	; 254
    12d4:	80 83       	st	Z, r24
    12d6:	2f ef       	ldi	r18, 0xFF	; 255
    12d8:	8f e7       	ldi	r24, 0x7F	; 127
    12da:	94 e0       	ldi	r25, 0x04	; 4
    12dc:	21 50       	subi	r18, 0x01	; 1
    12de:	80 40       	sbci	r24, 0x00	; 0
    12e0:	90 40       	sbci	r25, 0x00	; 0
    12e2:	e1 f7       	brne	.-8      	; 0x12dc <place_hr+0x7c>
    12e4:	00 c0       	rjmp	.+0      	; 0x12e6 <place_hr+0x86>
    12e6:	00 00       	nop
    12e8:	10 92 89 00 	sts	0x0089, r1
    12ec:	89 e4       	ldi	r24, 0x49	; 73
    12ee:	80 93 88 00 	sts	0x0088, r24
    12f2:	2f ef       	ldi	r18, 0xFF	; 255
    12f4:	8f eb       	ldi	r24, 0xBF	; 191
    12f6:	91 e2       	ldi	r25, 0x21	; 33
    12f8:	21 50       	subi	r18, 0x01	; 1
    12fa:	80 40       	sbci	r24, 0x00	; 0
    12fc:	90 40       	sbci	r25, 0x00	; 0
    12fe:	e1 f7       	brne	.-8      	; 0x12f8 <place_hr+0x98>
    1300:	00 c0       	rjmp	.+0      	; 0x1302 <place_hr+0xa2>
    1302:	00 00       	nop
    1304:	10 92 8d 00 	sts	0x008D, r1
    1308:	88 e3       	ldi	r24, 0x38	; 56
    130a:	80 93 8c 00 	sts	0x008C, r24
    130e:	2f ef       	ldi	r18, 0xFF	; 255
    1310:	8f eb       	ldi	r24, 0xBF	; 191
    1312:	91 e2       	ldi	r25, 0x21	; 33
    1314:	21 50       	subi	r18, 0x01	; 1
    1316:	80 40       	sbci	r24, 0x00	; 0
    1318:	90 40       	sbci	r25, 0x00	; 0
    131a:	e1 f7       	brne	.-8      	; 0x1314 <place_hr+0xb4>
    131c:	00 c0       	rjmp	.+0      	; 0x131e <place_hr+0xbe>
    131e:	00 00       	nop
    1320:	80 e0       	ldi	r24, 0x00	; 0
    1322:	29 dc       	rcall	.-1966   	; 0xb76 <servo_2>
    1324:	2f ef       	ldi	r18, 0xFF	; 255
    1326:	8f ef       	ldi	r24, 0xFF	; 255
    1328:	9c e2       	ldi	r25, 0x2C	; 44
    132a:	21 50       	subi	r18, 0x01	; 1
    132c:	80 40       	sbci	r24, 0x00	; 0
    132e:	90 40       	sbci	r25, 0x00	; 0
    1330:	e1 f7       	brne	.-8      	; 0x132a <place_hr+0xca>
    1332:	00 c0       	rjmp	.+0      	; 0x1334 <place_hr+0xd4>
    1334:	00 00       	nop
    1336:	10 92 89 00 	sts	0x0089, r1
    133a:	86 e5       	ldi	r24, 0x56	; 86
    133c:	80 93 88 00 	sts	0x0088, r24
    1340:	08 95       	ret

00001342 <static_reorientation>:
    1342:	16 dc       	rcall	.-2004   	; 0xb70 <stop>
    1344:	82 e0       	ldi	r24, 0x02	; 2
    1346:	45 dc       	rcall	.-1910   	; 0xbd2 <ADC_Conversion>
    1348:	80 93 23 05 	sts	0x0523, r24
    134c:	8e 36       	cpi	r24, 0x6E	; 110
    134e:	30 f5       	brcc	.+76     	; 0x139c <static_reorientation+0x5a>
    1350:	86 e9       	ldi	r24, 0x96	; 150
    1352:	80 93 28 01 	sts	0x0128, r24
    1356:	80 93 2a 01 	sts	0x012A, r24
    135a:	fe db       	rcall	.-2052   	; 0xb58 <right>
    135c:	2f ef       	ldi	r18, 0xFF	; 255
    135e:	8f e7       	ldi	r24, 0x7F	; 127
    1360:	9d e0       	ldi	r25, 0x0D	; 13
    1362:	21 50       	subi	r18, 0x01	; 1
    1364:	80 40       	sbci	r24, 0x00	; 0
    1366:	90 40       	sbci	r25, 0x00	; 0
    1368:	e1 f7       	brne	.-8      	; 0x1362 <static_reorientation+0x20>
    136a:	00 c0       	rjmp	.+0      	; 0x136c <static_reorientation+0x2a>
    136c:	00 00       	nop
    136e:	00 dc       	rcall	.-2048   	; 0xb70 <stop>
    1370:	8e e6       	ldi	r24, 0x6E	; 110
    1372:	80 93 28 01 	sts	0x0128, r24
    1376:	80 93 2a 01 	sts	0x012A, r24
    137a:	f1 db       	rcall	.-2078   	; 0xb5e <left>
    137c:	82 e0       	ldi	r24, 0x02	; 2
    137e:	29 dc       	rcall	.-1966   	; 0xbd2 <ADC_Conversion>
    1380:	80 93 23 05 	sts	0x0523, r24
    1384:	80 35       	cpi	r24, 0x50	; 80
    1386:	d0 f3       	brcs	.-12     	; 0x137c <static_reorientation+0x3a>
    1388:	12 b8       	out	0x02, r1	; 2
    138a:	f2 db       	rcall	.-2076   	; 0xb70 <stop>
    138c:	80 91 42 04 	lds	r24, 0x0442
    1390:	80 93 28 01 	sts	0x0128, r24
    1394:	80 91 42 04 	lds	r24, 0x0442
    1398:	80 93 2a 01 	sts	0x012A, r24
    139c:	08 95       	ret

0000139e <forward_wls>:
    139e:	af 92       	push	r10
    13a0:	bf 92       	push	r11
    13a2:	cf 92       	push	r12
    13a4:	df 92       	push	r13
    13a6:	ef 92       	push	r14
    13a8:	ff 92       	push	r15
    13aa:	0f 93       	push	r16
    13ac:	1f 93       	push	r17
    13ae:	cf 93       	push	r28
    13b0:	df 93       	push	r29
    13b2:	ec 01       	movw	r28, r24
    13b4:	80 e0       	ldi	r24, 0x00	; 0
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	27 dc       	rcall	.-1970   	; 0xc08 <LCD_Function>
    13ba:	c1 2c       	mov	r12, r1
    13bc:	d1 2c       	mov	r13, r1
    13be:	0f 2e       	mov	r0, r31
    13c0:	f8 e2       	ldi	r31, 0x28	; 40
    13c2:	ef 2e       	mov	r14, r31
    13c4:	ff 24       	eor	r15, r15
    13c6:	f3 94       	inc	r15
    13c8:	f0 2d       	mov	r31, r0
    13ca:	0a e2       	ldi	r16, 0x2A	; 42
    13cc:	11 e0       	ldi	r17, 0x01	; 1
    13ce:	0f 2e       	mov	r0, r31
    13d0:	f6 e9       	ldi	r31, 0x96	; 150
    13d2:	af 2e       	mov	r10, r31
    13d4:	f0 2d       	mov	r31, r0
    13d6:	0f 2e       	mov	r0, r31
    13d8:	f8 e7       	ldi	r31, 0x78	; 120
    13da:	bf 2e       	mov	r11, r31
    13dc:	f0 2d       	mov	r31, r0
    13de:	81 e0       	ldi	r24, 0x01	; 1
    13e0:	f8 db       	rcall	.-2064   	; 0xbd2 <ADC_Conversion>
    13e2:	80 93 2e 05 	sts	0x052E, r24
    13e6:	82 e0       	ldi	r24, 0x02	; 2
    13e8:	f4 db       	rcall	.-2072   	; 0xbd2 <ADC_Conversion>
    13ea:	80 93 23 05 	sts	0x0523, r24
    13ee:	83 e0       	ldi	r24, 0x03	; 3
    13f0:	f0 db       	rcall	.-2080   	; 0xbd2 <ADC_Conversion>
    13f2:	80 93 26 05 	sts	0x0526, r24
    13f6:	8b e0       	ldi	r24, 0x0B	; 11
    13f8:	ec db       	rcall	.-2088   	; 0xbd2 <ADC_Conversion>
    13fa:	80 93 2d 05 	sts	0x052D, r24
    13fe:	a9 db       	rcall	.-2222   	; 0xb52 <forward>
    1400:	80 91 42 04 	lds	r24, 0x0442
    1404:	f7 01       	movw	r30, r14
    1406:	80 83       	st	Z, r24
    1408:	80 91 42 04 	lds	r24, 0x0442
    140c:	f8 01       	movw	r30, r16
    140e:	80 83       	st	Z, r24
    1410:	c2 30       	cpi	r28, 0x02	; 2
    1412:	d1 05       	cpc	r29, r1
    1414:	49 f5       	brne	.+82     	; 0x1468 <forward_wls+0xca>
    1416:	20 91 2e 05 	lds	r18, 0x052E
    141a:	80 91 23 05 	lds	r24, 0x0523
    141e:	90 e0       	ldi	r25, 0x00	; 0
    1420:	82 0f       	add	r24, r18
    1422:	91 1d       	adc	r25, r1
    1424:	20 91 26 05 	lds	r18, 0x0526
    1428:	82 0f       	add	r24, r18
    142a:	91 1d       	adc	r25, r1
    142c:	8d 32       	cpi	r24, 0x2D	; 45
    142e:	91 40       	sbci	r25, 0x01	; 1
    1430:	0c f4       	brge	.+2      	; 0x1434 <forward_wls+0x96>
    1432:	64 c0       	rjmp	.+200    	; 0x14fc <forward_wls+0x15e>
    1434:	9d db       	rcall	.-2246   	; 0xb70 <stop>
    1436:	2f ef       	ldi	r18, 0xFF	; 255
    1438:	8f e3       	ldi	r24, 0x3F	; 63
    143a:	92 e0       	ldi	r25, 0x02	; 2
    143c:	21 50       	subi	r18, 0x01	; 1
    143e:	80 40       	sbci	r24, 0x00	; 0
    1440:	90 40       	sbci	r25, 0x00	; 0
    1442:	e1 f7       	brne	.-8      	; 0x143c <forward_wls+0x9e>
    1444:	00 c0       	rjmp	.+0      	; 0x1446 <forward_wls+0xa8>
    1446:	00 00       	nop
    1448:	80 91 42 04 	lds	r24, 0x0442
    144c:	80 93 28 01 	sts	0x0128, r24
    1450:	80 93 2a 01 	sts	0x012A, r24
    1454:	7e db       	rcall	.-2308   	; 0xb52 <forward>
    1456:	e6 e6       	ldi	r30, 0x66	; 102
    1458:	f6 ee       	ldi	r31, 0xE6	; 230
    145a:	29 e0       	ldi	r18, 0x09	; 9
    145c:	e1 50       	subi	r30, 0x01	; 1
    145e:	f0 40       	sbci	r31, 0x00	; 0
    1460:	20 40       	sbci	r18, 0x00	; 0
    1462:	e1 f7       	brne	.-8      	; 0x145c <forward_wls+0xbe>
    1464:	85 db       	rcall	.-2294   	; 0xb70 <stop>
    1466:	05 c1       	rjmp	.+522    	; 0x1672 <forward_wls+0x2d4>
    1468:	c3 30       	cpi	r28, 0x03	; 3
    146a:	d1 05       	cpc	r29, r1
    146c:	69 f4       	brne	.+26     	; 0x1488 <forward_wls+0xea>
    146e:	80 91 2e 05 	lds	r24, 0x052E
    1472:	89 37       	cpi	r24, 0x79	; 121
    1474:	08 f4       	brcc	.+2      	; 0x1478 <forward_wls+0xda>
    1476:	42 c0       	rjmp	.+132    	; 0x14fc <forward_wls+0x15e>
    1478:	80 91 26 05 	lds	r24, 0x0526
    147c:	89 37       	cpi	r24, 0x79	; 121
    147e:	08 f4       	brcc	.+2      	; 0x1482 <forward_wls+0xe4>
    1480:	3d c0       	rjmp	.+122    	; 0x14fc <forward_wls+0x15e>
    1482:	76 db       	rcall	.-2324   	; 0xb70 <stop>
    1484:	01 d1       	rcall	.+514    	; 0x1688 <forward_inv>
    1486:	f5 c0       	rjmp	.+490    	; 0x1672 <forward_wls+0x2d4>
    1488:	c1 30       	cpi	r28, 0x01	; 1
    148a:	d1 05       	cpc	r29, r1
    148c:	59 f4       	brne	.+22     	; 0x14a4 <forward_wls+0x106>
    148e:	80 91 23 05 	lds	r24, 0x0523
    1492:	84 36       	cpi	r24, 0x64	; 100
    1494:	98 f5       	brcc	.+102    	; 0x14fc <forward_wls+0x15e>
    1496:	80 91 2d 05 	lds	r24, 0x052D
    149a:	85 35       	cpi	r24, 0x55	; 85
    149c:	78 f1       	brcs	.+94     	; 0x14fc <forward_wls+0x15e>
    149e:	68 db       	rcall	.-2352   	; 0xb70 <stop>
    14a0:	bb d1       	rcall	.+886    	; 0x1818 <forward_walls>
    14a2:	e7 c0       	rjmp	.+462    	; 0x1672 <forward_wls+0x2d4>
    14a4:	20 97       	sbiw	r28, 0x00	; 0
    14a6:	51 f5       	brne	.+84     	; 0x14fc <forward_wls+0x15e>
    14a8:	20 91 2e 05 	lds	r18, 0x052E
    14ac:	80 91 23 05 	lds	r24, 0x0523
    14b0:	90 e0       	ldi	r25, 0x00	; 0
    14b2:	82 0f       	add	r24, r18
    14b4:	91 1d       	adc	r25, r1
    14b6:	20 91 26 05 	lds	r18, 0x0526
    14ba:	82 0f       	add	r24, r18
    14bc:	91 1d       	adc	r25, r1
    14be:	81 39       	cpi	r24, 0x91	; 145
    14c0:	91 40       	sbci	r25, 0x01	; 1
    14c2:	e4 f0       	brlt	.+56     	; 0x14fc <forward_wls+0x15e>
    14c4:	55 db       	rcall	.-2390   	; 0xb70 <stop>
    14c6:	ff ef       	ldi	r31, 0xFF	; 255
    14c8:	2f e3       	ldi	r18, 0x3F	; 63
    14ca:	82 e0       	ldi	r24, 0x02	; 2
    14cc:	f1 50       	subi	r31, 0x01	; 1
    14ce:	20 40       	sbci	r18, 0x00	; 0
    14d0:	80 40       	sbci	r24, 0x00	; 0
    14d2:	e1 f7       	brne	.-8      	; 0x14cc <forward_wls+0x12e>
    14d4:	00 c0       	rjmp	.+0      	; 0x14d6 <forward_wls+0x138>
    14d6:	00 00       	nop
    14d8:	80 91 42 04 	lds	r24, 0x0442
    14dc:	80 93 28 01 	sts	0x0128, r24
    14e0:	80 93 2a 01 	sts	0x012A, r24
    14e4:	36 db       	rcall	.-2452   	; 0xb52 <forward>
    14e6:	9f ef       	ldi	r25, 0xFF	; 255
    14e8:	ef e3       	ldi	r30, 0x3F	; 63
    14ea:	fb e0       	ldi	r31, 0x0B	; 11
    14ec:	91 50       	subi	r25, 0x01	; 1
    14ee:	e0 40       	sbci	r30, 0x00	; 0
    14f0:	f0 40       	sbci	r31, 0x00	; 0
    14f2:	e1 f7       	brne	.-8      	; 0x14ec <forward_wls+0x14e>
    14f4:	00 c0       	rjmp	.+0      	; 0x14f6 <forward_wls+0x158>
    14f6:	00 00       	nop
    14f8:	3b db       	rcall	.-2442   	; 0xb70 <stop>
    14fa:	bb c0       	rjmp	.+374    	; 0x1672 <forward_wls+0x2d4>
    14fc:	20 91 2e 05 	lds	r18, 0x052E
    1500:	2c 33       	cpi	r18, 0x3C	; 60
    1502:	b0 f4       	brcc	.+44     	; 0x1530 <forward_wls+0x192>
    1504:	80 91 23 05 	lds	r24, 0x0523
    1508:	8d 37       	cpi	r24, 0x7D	; 125
    150a:	90 f0       	brcs	.+36     	; 0x1530 <forward_wls+0x192>
    150c:	80 91 26 05 	lds	r24, 0x0526
    1510:	8c 33       	cpi	r24, 0x3C	; 60
    1512:	70 f4       	brcc	.+28     	; 0x1530 <forward_wls+0x192>
    1514:	80 91 42 04 	lds	r24, 0x0442
    1518:	f7 01       	movw	r30, r14
    151a:	80 83       	st	Z, r24
    151c:	80 91 42 04 	lds	r24, 0x0442
    1520:	f8 01       	movw	r30, r16
    1522:	80 83       	st	Z, r24
    1524:	86 e6       	ldi	r24, 0x66	; 102
    1526:	9e e0       	ldi	r25, 0x0E	; 14
    1528:	01 97       	sbiw	r24, 0x01	; 1
    152a:	f1 f7       	brne	.-4      	; 0x1528 <forward_wls+0x18a>
    152c:	00 00       	nop
    152e:	54 c0       	rjmp	.+168    	; 0x15d8 <forward_wls+0x23a>
    1530:	40 91 23 05 	lds	r20, 0x0523
    1534:	30 91 26 05 	lds	r19, 0x0526
    1538:	84 2f       	mov	r24, r20
    153a:	90 e0       	ldi	r25, 0x00	; 0
    153c:	82 0f       	add	r24, r18
    153e:	91 1d       	adc	r25, r1
    1540:	83 0f       	add	r24, r19
    1542:	91 1d       	adc	r25, r1
    1544:	88 3c       	cpi	r24, 0xC8	; 200
    1546:	91 05       	cpc	r25, r1
    1548:	2c f5       	brge	.+74     	; 0x1594 <forward_wls+0x1f6>
    154a:	8d ec       	ldi	r24, 0xCD	; 205
    154c:	84 0f       	add	r24, r20
    154e:	81 33       	cpi	r24, 0x31	; 49
    1550:	08 f5       	brcc	.+66     	; 0x1594 <forward_wls+0x1f6>
    1552:	32 17       	cp	r19, r18
    1554:	08 f0       	brcs	.+2      	; 0x1558 <forward_wls+0x1ba>
    1556:	89 c0       	rjmp	.+274    	; 0x166a <forward_wls+0x2cc>
    1558:	80 91 40 04 	lds	r24, 0x0440
    155c:	f7 01       	movw	r30, r14
    155e:	80 83       	st	Z, r24
    1560:	80 91 42 04 	lds	r24, 0x0442
    1564:	f8 01       	movw	r30, r16
    1566:	80 83       	st	Z, r24
    1568:	8c ec       	ldi	r24, 0xCC	; 204
    156a:	9c e1       	ldi	r25, 0x1C	; 28
    156c:	01 97       	sbiw	r24, 0x01	; 1
    156e:	f1 f7       	brne	.-4      	; 0x156c <forward_wls+0x1ce>
    1570:	00 c0       	rjmp	.+0      	; 0x1572 <forward_wls+0x1d4>
    1572:	00 00       	nop
    1574:	31 c0       	rjmp	.+98     	; 0x15d8 <forward_wls+0x23a>
    1576:	80 91 42 04 	lds	r24, 0x0442
    157a:	f7 01       	movw	r30, r14
    157c:	80 83       	st	Z, r24
    157e:	80 91 40 04 	lds	r24, 0x0440
    1582:	f8 01       	movw	r30, r16
    1584:	80 83       	st	Z, r24
    1586:	8c ec       	ldi	r24, 0xCC	; 204
    1588:	9c e1       	ldi	r25, 0x1C	; 28
    158a:	01 97       	sbiw	r24, 0x01	; 1
    158c:	f1 f7       	brne	.-4      	; 0x158a <forward_wls+0x1ec>
    158e:	00 c0       	rjmp	.+0      	; 0x1590 <forward_wls+0x1f2>
    1590:	00 00       	nop
    1592:	22 c0       	rjmp	.+68     	; 0x15d8 <forward_wls+0x23a>
    1594:	28 32       	cpi	r18, 0x28	; 40
    1596:	80 f4       	brcc	.+32     	; 0x15b8 <forward_wls+0x21a>
    1598:	4c 33       	cpi	r20, 0x3C	; 60
    159a:	08 f0       	brcs	.+2      	; 0x159e <forward_wls+0x200>
    159c:	20 cf       	rjmp	.-448    	; 0x13de <forward_wls+0x40>
    159e:	3d 38       	cpi	r19, 0x8D	; 141
    15a0:	08 f4       	brcc	.+2      	; 0x15a4 <forward_wls+0x206>
    15a2:	5f c0       	rjmp	.+190    	; 0x1662 <forward_wls+0x2c4>
    15a4:	df da       	rcall	.-2626   	; 0xb64 <soft_right>
    15a6:	f7 01       	movw	r30, r14
    15a8:	b0 82       	st	Z, r11
    15aa:	f8 01       	movw	r30, r16
    15ac:	b0 82       	st	Z, r11
    15ae:	83 e3       	ldi	r24, 0x33	; 51
    15b0:	9b e2       	ldi	r25, 0x2B	; 43
    15b2:	01 97       	sbiw	r24, 0x01	; 1
    15b4:	f1 f7       	brne	.-4      	; 0x15b2 <forward_wls+0x214>
    15b6:	10 c0       	rjmp	.+32     	; 0x15d8 <forward_wls+0x23a>
    15b8:	38 32       	cpi	r19, 0x28	; 40
    15ba:	70 f4       	brcc	.+28     	; 0x15d8 <forward_wls+0x23a>
    15bc:	4c 33       	cpi	r20, 0x3C	; 60
    15be:	08 f0       	brcs	.+2      	; 0x15c2 <forward_wls+0x224>
    15c0:	0e cf       	rjmp	.-484    	; 0x13de <forward_wls+0x40>
    15c2:	2d 38       	cpi	r18, 0x8D	; 141
    15c4:	70 f0       	brcs	.+28     	; 0x15e2 <forward_wls+0x244>
    15c6:	d1 da       	rcall	.-2654   	; 0xb6a <soft_left>
    15c8:	f7 01       	movw	r30, r14
    15ca:	b0 82       	st	Z, r11
    15cc:	f8 01       	movw	r30, r16
    15ce:	b0 82       	st	Z, r11
    15d0:	83 e3       	ldi	r24, 0x33	; 51
    15d2:	9b e2       	ldi	r25, 0x2B	; 43
    15d4:	01 97       	sbiw	r24, 0x01	; 1
    15d6:	f1 f7       	brne	.-4      	; 0x15d4 <forward_wls+0x236>
    15d8:	80 91 23 05 	lds	r24, 0x0523
    15dc:	8c 33       	cpi	r24, 0x3C	; 60
    15de:	08 f0       	brcs	.+2      	; 0x15e2 <forward_wls+0x244>
    15e0:	fe ce       	rjmp	.-516    	; 0x13de <forward_wls+0x40>
    15e2:	20 91 2e 05 	lds	r18, 0x052E
    15e6:	80 91 26 05 	lds	r24, 0x0526
    15ea:	90 e0       	ldi	r25, 0x00	; 0
    15ec:	82 0f       	add	r24, r18
    15ee:	91 1d       	adc	r25, r1
    15f0:	88 97       	sbiw	r24, 0x28	; 40
    15f2:	0c f0       	brlt	.+2      	; 0x15f6 <forward_wls+0x258>
    15f4:	f4 ce       	rjmp	.-536    	; 0x13de <forward_wls+0x40>
    15f6:	20 97       	sbiw	r28, 0x00	; 0
    15f8:	09 f0       	breq	.+2      	; 0x15fc <forward_wls+0x25e>
    15fa:	f1 ce       	rjmp	.-542    	; 0x13de <forward_wls+0x40>
    15fc:	80 91 e4 04 	lds	r24, 0x04E4
    1600:	90 91 e5 04 	lds	r25, 0x04E5
    1604:	01 96       	adiw	r24, 0x01	; 1
    1606:	90 93 e5 04 	sts	0x04E5, r25
    160a:	80 93 e4 04 	sts	0x04E4, r24
    160e:	9f ef       	ldi	r25, 0xFF	; 255
    1610:	c9 1a       	sub	r12, r25
    1612:	d9 0a       	sbc	r13, r25
    1614:	e8 e5       	ldi	r30, 0x58	; 88
    1616:	ce 16       	cp	r12, r30
    1618:	e2 e0       	ldi	r30, 0x02	; 2
    161a:	de 06       	cpc	r13, r30
    161c:	08 f4       	brcc	.+2      	; 0x1620 <forward_wls+0x282>
    161e:	df ce       	rjmp	.-578    	; 0x13de <forward_wls+0x40>
    1620:	12 b8       	out	0x02, r1	; 2
    1622:	a6 da       	rcall	.-2740   	; 0xb70 <stop>
    1624:	ff ef       	ldi	r31, 0xFF	; 255
    1626:	2f e7       	ldi	r18, 0x7F	; 127
    1628:	84 e0       	ldi	r24, 0x04	; 4
    162a:	f1 50       	subi	r31, 0x01	; 1
    162c:	20 40       	sbci	r18, 0x00	; 0
    162e:	80 40       	sbci	r24, 0x00	; 0
    1630:	e1 f7       	brne	.-8      	; 0x162a <forward_wls+0x28c>
    1632:	00 c0       	rjmp	.+0      	; 0x1634 <forward_wls+0x296>
    1634:	00 00       	nop
    1636:	f7 01       	movw	r30, r14
    1638:	a0 82       	st	Z, r10
    163a:	f8 01       	movw	r30, r16
    163c:	a0 82       	st	Z, r10
    163e:	86 da       	rcall	.-2804   	; 0xb4c <back>
    1640:	ff ef       	ldi	r31, 0xFF	; 255
    1642:	2f eb       	ldi	r18, 0xBF	; 191
    1644:	86 e0       	ldi	r24, 0x06	; 6
    1646:	f1 50       	subi	r31, 0x01	; 1
    1648:	20 40       	sbci	r18, 0x00	; 0
    164a:	80 40       	sbci	r24, 0x00	; 0
    164c:	e1 f7       	brne	.-8      	; 0x1646 <forward_wls+0x2a8>
    164e:	00 c0       	rjmp	.+0      	; 0x1650 <forward_wls+0x2b2>
    1650:	00 00       	nop
    1652:	77 de       	rcall	.-786    	; 0x1342 <static_reorientation>
    1654:	10 92 e5 04 	sts	0x04E5, r1
    1658:	10 92 e4 04 	sts	0x04E4, r1
    165c:	c1 2c       	mov	r12, r1
    165e:	d1 2c       	mov	r13, r1
    1660:	be ce       	rjmp	.-644    	; 0x13de <forward_wls+0x40>
    1662:	38 32       	cpi	r19, 0x28	; 40
    1664:	08 f4       	brcc	.+2      	; 0x1668 <forward_wls+0x2ca>
    1666:	ad cf       	rjmp	.-166    	; 0x15c2 <forward_wls+0x224>
    1668:	bc cf       	rjmp	.-136    	; 0x15e2 <forward_wls+0x244>
    166a:	23 17       	cp	r18, r19
    166c:	08 f0       	brcs	.+2      	; 0x1670 <forward_wls+0x2d2>
    166e:	92 cf       	rjmp	.-220    	; 0x1594 <forward_wls+0x1f6>
    1670:	82 cf       	rjmp	.-252    	; 0x1576 <forward_wls+0x1d8>
    1672:	df 91       	pop	r29
    1674:	cf 91       	pop	r28
    1676:	1f 91       	pop	r17
    1678:	0f 91       	pop	r16
    167a:	ff 90       	pop	r15
    167c:	ef 90       	pop	r14
    167e:	df 90       	pop	r13
    1680:	cf 90       	pop	r12
    1682:	bf 90       	pop	r11
    1684:	af 90       	pop	r10
    1686:	08 95       	ret

00001688 <forward_inv>:
    1688:	ff 92       	push	r15
    168a:	0f 93       	push	r16
    168c:	1f 93       	push	r17
    168e:	cf 93       	push	r28
    1690:	df 93       	push	r29
    1692:	83 e0       	ldi	r24, 0x03	; 3
    1694:	90 e0       	ldi	r25, 0x00	; 0
    1696:	b8 da       	rcall	.-2704   	; 0xc08 <LCD_Function>
    1698:	22 e0       	ldi	r18, 0x02	; 2
    169a:	30 e0       	ldi	r19, 0x00	; 0
    169c:	40 e0       	ldi	r20, 0x00	; 0
    169e:	50 e0       	ldi	r21, 0x00	; 0
    16a0:	67 e0       	ldi	r22, 0x07	; 7
    16a2:	82 e0       	ldi	r24, 0x02	; 2
    16a4:	0e 94 4c 01 	call	0x298	; 0x298 <lcd_print>
    16a8:	f1 2c       	mov	r15, r1
    16aa:	08 e2       	ldi	r16, 0x28	; 40
    16ac:	11 e0       	ldi	r17, 0x01	; 1
    16ae:	ca e2       	ldi	r28, 0x2A	; 42
    16b0:	d1 e0       	ldi	r29, 0x01	; 1
    16b2:	4f da       	rcall	.-2914   	; 0xb52 <forward>
    16b4:	80 91 42 04 	lds	r24, 0x0442
    16b8:	f8 01       	movw	r30, r16
    16ba:	80 83       	st	Z, r24
    16bc:	88 83       	st	Y, r24
    16be:	81 e0       	ldi	r24, 0x01	; 1
    16c0:	88 da       	rcall	.-2800   	; 0xbd2 <ADC_Conversion>
    16c2:	80 93 2e 05 	sts	0x052E, r24
    16c6:	82 e0       	ldi	r24, 0x02	; 2
    16c8:	84 da       	rcall	.-2808   	; 0xbd2 <ADC_Conversion>
    16ca:	80 93 23 05 	sts	0x0523, r24
    16ce:	83 e0       	ldi	r24, 0x03	; 3
    16d0:	80 da       	rcall	.-2816   	; 0xbd2 <ADC_Conversion>
    16d2:	80 93 26 05 	sts	0x0526, r24
    16d6:	90 91 2e 05 	lds	r25, 0x052E
    16da:	40 91 23 05 	lds	r20, 0x0523
    16de:	24 2f       	mov	r18, r20
    16e0:	30 e0       	ldi	r19, 0x00	; 0
    16e2:	29 0f       	add	r18, r25
    16e4:	31 1d       	adc	r19, r1
    16e6:	28 0f       	add	r18, r24
    16e8:	31 1d       	adc	r19, r1
    16ea:	2a 34       	cpi	r18, 0x4A	; 74
    16ec:	31 40       	sbci	r19, 0x01	; 1
    16ee:	cc f5       	brge	.+114    	; 0x1762 <forward_inv+0xda>
    16f0:	4a 35       	cpi	r20, 0x5A	; 90
    16f2:	b8 f5       	brcc	.+110    	; 0x1762 <forward_inv+0xda>
    16f4:	f1 10       	cpse	r15, r1
    16f6:	35 c0       	rjmp	.+106    	; 0x1762 <forward_inv+0xda>
    16f8:	2f ef       	ldi	r18, 0xFF	; 255
    16fa:	5f e7       	ldi	r21, 0x7F	; 127
    16fc:	84 e0       	ldi	r24, 0x04	; 4
    16fe:	21 50       	subi	r18, 0x01	; 1
    1700:	50 40       	sbci	r21, 0x00	; 0
    1702:	80 40       	sbci	r24, 0x00	; 0
    1704:	e1 f7       	brne	.-8      	; 0x16fe <forward_inv+0x76>
    1706:	00 c0       	rjmp	.+0      	; 0x1708 <forward_inv+0x80>
    1708:	00 00       	nop
    170a:	22 e0       	ldi	r18, 0x02	; 2
    170c:	30 e0       	ldi	r19, 0x00	; 0
    170e:	41 e0       	ldi	r20, 0x01	; 1
    1710:	50 e0       	ldi	r21, 0x00	; 0
    1712:	67 e0       	ldi	r22, 0x07	; 7
    1714:	82 e0       	ldi	r24, 0x02	; 2
    1716:	0e 94 4c 01 	call	0x298	; 0x298 <lcd_print>
    171a:	18 da       	rcall	.-3024   	; 0xb4c <back>
    171c:	9f ef       	ldi	r25, 0xFF	; 255
    171e:	ef ef       	ldi	r30, 0xFF	; 255
    1720:	f1 e1       	ldi	r31, 0x11	; 17
    1722:	91 50       	subi	r25, 0x01	; 1
    1724:	e0 40       	sbci	r30, 0x00	; 0
    1726:	f0 40       	sbci	r31, 0x00	; 0
    1728:	e1 f7       	brne	.-8      	; 0x1722 <forward_inv+0x9a>
    172a:	00 c0       	rjmp	.+0      	; 0x172c <forward_inv+0xa4>
    172c:	00 00       	nop
    172e:	20 da       	rcall	.-3008   	; 0xb70 <stop>
    1730:	80 91 e2 04 	lds	r24, 0x04E2
    1734:	90 91 e3 04 	lds	r25, 0x04E3
    1738:	81 30       	cpi	r24, 0x01	; 1
    173a:	91 05       	cpc	r25, r1
    173c:	11 f4       	brne	.+4      	; 0x1742 <forward_inv+0xba>
    173e:	e9 db       	rcall	.-2094   	; 0xf12 <inv_place_1>
    1740:	03 c0       	rjmp	.+6      	; 0x1748 <forward_inv+0xc0>
    1742:	89 2b       	or	r24, r25
    1744:	09 f4       	brne	.+2      	; 0x1748 <forward_inv+0xc0>
    1746:	80 dc       	rcall	.-1792   	; 0x1048 <inv_place_2>
    1748:	04 da       	rcall	.-3064   	; 0xb52 <forward>
    174a:	2f ef       	ldi	r18, 0xFF	; 255
    174c:	5f ef       	ldi	r21, 0xFF	; 255
    174e:	88 e0       	ldi	r24, 0x08	; 8
    1750:	21 50       	subi	r18, 0x01	; 1
    1752:	50 40       	sbci	r21, 0x00	; 0
    1754:	80 40       	sbci	r24, 0x00	; 0
    1756:	e1 f7       	brne	.-8      	; 0x1750 <forward_inv+0xc8>
    1758:	00 c0       	rjmp	.+0      	; 0x175a <forward_inv+0xd2>
    175a:	00 00       	nop
    175c:	ff 24       	eor	r15, r15
    175e:	f3 94       	inc	r15
    1760:	a8 cf       	rjmp	.-176    	; 0x16b2 <forward_inv+0x2a>
    1762:	84 36       	cpi	r24, 0x64	; 100
    1764:	a0 f4       	brcc	.+40     	; 0x178e <forward_inv+0x106>
    1766:	94 36       	cpi	r25, 0x64	; 100
    1768:	90 f4       	brcc	.+36     	; 0x178e <forward_inv+0x106>
    176a:	12 b8       	out	0x02, r1	; 2
    176c:	01 da       	rcall	.-3070   	; 0xb70 <stop>
    176e:	9f ef       	ldi	r25, 0xFF	; 255
    1770:	ef e7       	ldi	r30, 0x7F	; 127
    1772:	f4 e0       	ldi	r31, 0x04	; 4
    1774:	91 50       	subi	r25, 0x01	; 1
    1776:	e0 40       	sbci	r30, 0x00	; 0
    1778:	f0 40       	sbci	r31, 0x00	; 0
    177a:	e1 f7       	brne	.-8      	; 0x1774 <forward_inv+0xec>
    177c:	00 c0       	rjmp	.+0      	; 0x177e <forward_inv+0xf6>
    177e:	00 00       	nop
    1780:	e0 dd       	rcall	.-1088   	; 0x1342 <static_reorientation>
    1782:	61 e0       	ldi	r22, 0x01	; 1
    1784:	70 e0       	ldi	r23, 0x00	; 0
    1786:	82 e0       	ldi	r24, 0x02	; 2
    1788:	90 e0       	ldi	r25, 0x00	; 0
    178a:	09 de       	rcall	.-1006   	; 0x139e <forward_wls>
    178c:	3f c0       	rjmp	.+126    	; 0x180c <forward_inv+0x184>
    178e:	95 3b       	cpi	r25, 0xB5	; 181
    1790:	60 f0       	brcs	.+24     	; 0x17aa <forward_inv+0x122>
    1792:	42 38       	cpi	r20, 0x82	; 130
    1794:	50 f4       	brcc	.+20     	; 0x17aa <forward_inv+0x122>
    1796:	85 3b       	cpi	r24, 0xB5	; 181
    1798:	40 f0       	brcs	.+16     	; 0x17aa <forward_inv+0x122>
    179a:	80 91 42 04 	lds	r24, 0x0442
    179e:	f8 01       	movw	r30, r16
    17a0:	80 83       	st	Z, r24
    17a2:	80 91 42 04 	lds	r24, 0x0442
    17a6:	88 83       	st	Y, r24
    17a8:	84 cf       	rjmp	.-248    	; 0x16b2 <forward_inv+0x2a>
    17aa:	90 35       	cpi	r25, 0x50	; 80
    17ac:	a0 f4       	brcc	.+40     	; 0x17d6 <forward_inv+0x14e>
    17ae:	43 38       	cpi	r20, 0x83	; 131
    17b0:	08 f4       	brcc	.+2      	; 0x17b4 <forward_inv+0x12c>
    17b2:	7f cf       	rjmp	.-258    	; 0x16b2 <forward_inv+0x2a>
    17b4:	87 39       	cpi	r24, 0x97	; 151
    17b6:	38 f1       	brcs	.+78     	; 0x1806 <forward_inv+0x17e>
    17b8:	d8 d9       	rcall	.-3152   	; 0xb6a <soft_left>
    17ba:	80 91 41 04 	lds	r24, 0x0441
    17be:	82 53       	subi	r24, 0x32	; 50
    17c0:	f8 01       	movw	r30, r16
    17c2:	80 83       	st	Z, r24
    17c4:	80 91 42 04 	lds	r24, 0x0442
    17c8:	88 83       	st	Y, r24
    17ca:	86 e6       	ldi	r24, 0x66	; 102
    17cc:	9e e0       	ldi	r25, 0x0E	; 14
    17ce:	01 97       	sbiw	r24, 0x01	; 1
    17d0:	f1 f7       	brne	.-4      	; 0x17ce <forward_inv+0x146>
    17d2:	00 00       	nop
    17d4:	6e cf       	rjmp	.-292    	; 0x16b2 <forward_inv+0x2a>
    17d6:	86 39       	cpi	r24, 0x96	; 150
    17d8:	08 f0       	brcs	.+2      	; 0x17dc <forward_inv+0x154>
    17da:	6b cf       	rjmp	.-298    	; 0x16b2 <forward_inv+0x2a>
    17dc:	43 38       	cpi	r20, 0x83	; 131
    17de:	08 f4       	brcc	.+2      	; 0x17e2 <forward_inv+0x15a>
    17e0:	68 cf       	rjmp	.-304    	; 0x16b2 <forward_inv+0x2a>
    17e2:	91 35       	cpi	r25, 0x51	; 81
    17e4:	08 f4       	brcc	.+2      	; 0x17e8 <forward_inv+0x160>
    17e6:	65 cf       	rjmp	.-310    	; 0x16b2 <forward_inv+0x2a>
    17e8:	bd d9       	rcall	.-3206   	; 0xb64 <soft_right>
    17ea:	80 91 42 04 	lds	r24, 0x0442
    17ee:	f8 01       	movw	r30, r16
    17f0:	80 83       	st	Z, r24
    17f2:	80 91 41 04 	lds	r24, 0x0441
    17f6:	82 53       	subi	r24, 0x32	; 50
    17f8:	88 83       	st	Y, r24
    17fa:	86 e6       	ldi	r24, 0x66	; 102
    17fc:	9e e0       	ldi	r25, 0x0E	; 14
    17fe:	01 97       	sbiw	r24, 0x01	; 1
    1800:	f1 f7       	brne	.-4      	; 0x17fe <forward_inv+0x176>
    1802:	00 00       	nop
    1804:	56 cf       	rjmp	.-340    	; 0x16b2 <forward_inv+0x2a>
    1806:	86 39       	cpi	r24, 0x96	; 150
    1808:	60 f3       	brcs	.-40     	; 0x17e2 <forward_inv+0x15a>
    180a:	53 cf       	rjmp	.-346    	; 0x16b2 <forward_inv+0x2a>
    180c:	df 91       	pop	r29
    180e:	cf 91       	pop	r28
    1810:	1f 91       	pop	r17
    1812:	0f 91       	pop	r16
    1814:	ff 90       	pop	r15
    1816:	08 95       	ret

00001818 <forward_walls>:
    1818:	8f 92       	push	r8
    181a:	9f 92       	push	r9
    181c:	af 92       	push	r10
    181e:	bf 92       	push	r11
    1820:	cf 92       	push	r12
    1822:	df 92       	push	r13
    1824:	ef 92       	push	r14
    1826:	ff 92       	push	r15
    1828:	0f 93       	push	r16
    182a:	1f 93       	push	r17
    182c:	cf 93       	push	r28
    182e:	df 93       	push	r29
    1830:	81 e0       	ldi	r24, 0x01	; 1
    1832:	90 e0       	ldi	r25, 0x00	; 0
    1834:	e9 d9       	rcall	.-3118   	; 0xc08 <LCD_Function>
    1836:	8d d9       	rcall	.-3302   	; 0xb52 <forward>
    1838:	80 91 42 04 	lds	r24, 0x0442
    183c:	80 93 28 01 	sts	0x0128, r24
    1840:	80 93 2a 01 	sts	0x012A, r24
    1844:	2f ef       	ldi	r18, 0xFF	; 255
    1846:	8f e7       	ldi	r24, 0x7F	; 127
    1848:	96 e1       	ldi	r25, 0x16	; 22
    184a:	21 50       	subi	r18, 0x01	; 1
    184c:	80 40       	sbci	r24, 0x00	; 0
    184e:	90 40       	sbci	r25, 0x00	; 0
    1850:	e1 f7       	brne	.-8      	; 0x184a <forward_walls+0x32>
    1852:	00 c0       	rjmp	.+0      	; 0x1854 <forward_walls+0x3c>
    1854:	00 00       	nop
    1856:	c0 e0       	ldi	r28, 0x00	; 0
    1858:	d0 e0       	ldi	r29, 0x00	; 0
    185a:	0f 2e       	mov	r0, r31
    185c:	f8 e2       	ldi	r31, 0x28	; 40
    185e:	ef 2e       	mov	r14, r31
    1860:	ff 24       	eor	r15, r15
    1862:	f3 94       	inc	r15
    1864:	f0 2d       	mov	r31, r0
    1866:	0f 2e       	mov	r0, r31
    1868:	f8 e7       	ldi	r31, 0x78	; 120
    186a:	af 2e       	mov	r10, r31
    186c:	f0 2d       	mov	r31, r0
    186e:	0a e2       	ldi	r16, 0x2A	; 42
    1870:	11 e0       	ldi	r17, 0x01	; 1
    1872:	68 94       	set
    1874:	88 24       	eor	r8, r8
    1876:	87 f8       	bld	r8, 7
    1878:	b1 2c       	mov	r11, r1
    187a:	c1 2c       	mov	r12, r1
    187c:	0f 2e       	mov	r0, r31
    187e:	f5 e7       	ldi	r31, 0x75	; 117
    1880:	9f 2e       	mov	r9, r31
    1882:	f0 2d       	mov	r31, r0
    1884:	0f 2e       	mov	r0, r31
    1886:	fc ed       	ldi	r31, 0xDC	; 220
    1888:	df 2e       	mov	r13, r31
    188a:	f0 2d       	mov	r31, r0
    188c:	62 d9       	rcall	.-3388   	; 0xb52 <forward>
    188e:	8b e0       	ldi	r24, 0x0B	; 11
    1890:	a0 d9       	rcall	.-3264   	; 0xbd2 <ADC_Conversion>
    1892:	80 93 2d 05 	sts	0x052D, r24
    1896:	83 e0       	ldi	r24, 0x03	; 3
    1898:	9c d9       	rcall	.-3272   	; 0xbd2 <ADC_Conversion>
    189a:	80 93 26 05 	sts	0x0526, r24
    189e:	82 e0       	ldi	r24, 0x02	; 2
    18a0:	98 d9       	rcall	.-3280   	; 0xbd2 <ADC_Conversion>
    18a2:	80 93 23 05 	sts	0x0523, r24
    18a6:	90 91 26 05 	lds	r25, 0x0526
    18aa:	91 35       	cpi	r25, 0x51	; 81
    18ac:	10 f4       	brcc	.+4      	; 0x18b2 <forward_walls+0x9a>
    18ae:	81 35       	cpi	r24, 0x51	; 81
    18b0:	58 f0       	brcs	.+22     	; 0x18c8 <forward_walls+0xb0>
    18b2:	80 91 2d 05 	lds	r24, 0x052D
    18b6:	80 35       	cpi	r24, 0x50	; 80
    18b8:	38 f4       	brcc	.+14     	; 0x18c8 <forward_walls+0xb0>
    18ba:	5a d9       	rcall	.-3404   	; 0xb70 <stop>
    18bc:	61 e0       	ldi	r22, 0x01	; 1
    18be:	70 e0       	ldi	r23, 0x00	; 0
    18c0:	80 e0       	ldi	r24, 0x00	; 0
    18c2:	90 e0       	ldi	r25, 0x00	; 0
    18c4:	6c dd       	rcall	.-1320   	; 0x139e <forward_wls>
    18c6:	42 c0       	rjmp	.+132    	; 0x194c <forward_walls+0x134>
    18c8:	80 91 2d 05 	lds	r24, 0x052D
    18cc:	9d e8       	ldi	r25, 0x8D	; 141
    18ce:	98 0f       	add	r25, r24
    18d0:	90 31       	cpi	r25, 0x10	; 16
    18d2:	e0 f4       	brcc	.+56     	; 0x190c <forward_walls+0xf4>
    18d4:	21 96       	adiw	r28, 0x01	; 1
    18d6:	c4 30       	cpi	r28, 0x04	; 4
    18d8:	d1 05       	cpc	r29, r1
    18da:	6c f0       	brlt	.+26     	; 0x18f6 <forward_walls+0xde>
    18dc:	80 91 42 04 	lds	r24, 0x0442
    18e0:	f7 01       	movw	r30, r14
    18e2:	80 83       	st	Z, r24
    18e4:	80 91 42 04 	lds	r24, 0x0442
    18e8:	f8 01       	movw	r30, r16
    18ea:	80 83       	st	Z, r24
    18ec:	83 e3       	ldi	r24, 0x33	; 51
    18ee:	9b e2       	ldi	r25, 0x2B	; 43
    18f0:	01 97       	sbiw	r24, 0x01	; 1
    18f2:	f1 f7       	brne	.-4      	; 0x18f0 <forward_walls+0xd8>
    18f4:	cb cf       	rjmp	.-106    	; 0x188c <forward_walls+0x74>
    18f6:	f7 01       	movw	r30, r14
    18f8:	d0 82       	st	Z, r13
    18fa:	f8 01       	movw	r30, r16
    18fc:	d0 82       	st	Z, r13
    18fe:	8f ef       	ldi	r24, 0xFF	; 255
    1900:	97 e4       	ldi	r25, 0x47	; 71
    1902:	01 97       	sbiw	r24, 0x01	; 1
    1904:	f1 f7       	brne	.-4      	; 0x1902 <forward_walls+0xea>
    1906:	00 c0       	rjmp	.+0      	; 0x1908 <forward_walls+0xf0>
    1908:	00 00       	nop
    190a:	c0 cf       	rjmp	.-128    	; 0x188c <forward_walls+0x74>
    190c:	83 38       	cpi	r24, 0x83	; 131
    190e:	68 f0       	brcs	.+26     	; 0x192a <forward_walls+0x112>
    1910:	23 d9       	rcall	.-3514   	; 0xb58 <right>
    1912:	f7 01       	movw	r30, r14
    1914:	90 82       	st	Z, r9
    1916:	f8 01       	movw	r30, r16
    1918:	a0 82       	st	Z, r10
    191a:	86 e6       	ldi	r24, 0x66	; 102
    191c:	9e e0       	ldi	r25, 0x0E	; 14
    191e:	01 97       	sbiw	r24, 0x01	; 1
    1920:	f1 f7       	brne	.-4      	; 0x191e <forward_walls+0x106>
    1922:	00 00       	nop
    1924:	cb 2d       	mov	r28, r11
    1926:	dc 2d       	mov	r29, r12
    1928:	b1 cf       	rjmp	.-158    	; 0x188c <forward_walls+0x74>
    192a:	83 53       	subi	r24, 0x33	; 51
    192c:	80 34       	cpi	r24, 0x40	; 64
    192e:	08 f0       	brcs	.+2      	; 0x1932 <forward_walls+0x11a>
    1930:	ad cf       	rjmp	.-166    	; 0x188c <forward_walls+0x74>
    1932:	15 d9       	rcall	.-3542   	; 0xb5e <left>
    1934:	f7 01       	movw	r30, r14
    1936:	a0 82       	st	Z, r10
    1938:	f8 01       	movw	r30, r16
    193a:	80 82       	st	Z, r8
    193c:	86 e6       	ldi	r24, 0x66	; 102
    193e:	9e e0       	ldi	r25, 0x0E	; 14
    1940:	01 97       	sbiw	r24, 0x01	; 1
    1942:	f1 f7       	brne	.-4      	; 0x1940 <forward_walls+0x128>
    1944:	00 00       	nop
    1946:	cb 2d       	mov	r28, r11
    1948:	dc 2d       	mov	r29, r12
    194a:	a0 cf       	rjmp	.-192    	; 0x188c <forward_walls+0x74>
    194c:	df 91       	pop	r29
    194e:	cf 91       	pop	r28
    1950:	1f 91       	pop	r17
    1952:	0f 91       	pop	r16
    1954:	ff 90       	pop	r15
    1956:	ef 90       	pop	r14
    1958:	df 90       	pop	r13
    195a:	cf 90       	pop	r12
    195c:	bf 90       	pop	r11
    195e:	af 90       	pop	r10
    1960:	9f 90       	pop	r9
    1962:	8f 90       	pop	r8
    1964:	08 95       	ret

00001966 <static_reorientation_inv>:
    1966:	04 d9       	rcall	.-3576   	; 0xb70 <stop>
    1968:	81 e0       	ldi	r24, 0x01	; 1
    196a:	33 d9       	rcall	.-3482   	; 0xbd2 <ADC_Conversion>
    196c:	80 93 2e 05 	sts	0x052E, r24
    1970:	82 e0       	ldi	r24, 0x02	; 2
    1972:	2f d9       	rcall	.-3490   	; 0xbd2 <ADC_Conversion>
    1974:	80 93 23 05 	sts	0x0523, r24
    1978:	83 e0       	ldi	r24, 0x03	; 3
    197a:	2b d9       	rcall	.-3498   	; 0xbd2 <ADC_Conversion>
    197c:	80 93 26 05 	sts	0x0526, r24
    1980:	80 91 23 05 	lds	r24, 0x0523
    1984:	8f 36       	cpi	r24, 0x6F	; 111
    1986:	08 f4       	brcc	.+2      	; 0x198a <static_reorientation_inv+0x24>
    1988:	41 c0       	rjmp	.+130    	; 0x1a0c <static_reorientation_inv+0xa6>
    198a:	86 e9       	ldi	r24, 0x96	; 150
    198c:	80 93 28 01 	sts	0x0128, r24
    1990:	80 93 2a 01 	sts	0x012A, r24
    1994:	e1 d8       	rcall	.-3646   	; 0xb58 <right>
    1996:	2f ef       	ldi	r18, 0xFF	; 255
    1998:	8f ef       	ldi	r24, 0xFF	; 255
    199a:	91 e1       	ldi	r25, 0x11	; 17
    199c:	21 50       	subi	r18, 0x01	; 1
    199e:	80 40       	sbci	r24, 0x00	; 0
    19a0:	90 40       	sbci	r25, 0x00	; 0
    19a2:	e1 f7       	brne	.-8      	; 0x199c <static_reorientation_inv+0x36>
    19a4:	00 c0       	rjmp	.+0      	; 0x19a6 <static_reorientation_inv+0x40>
    19a6:	00 00       	nop
    19a8:	e3 d8       	rcall	.-3642   	; 0xb70 <stop>
    19aa:	8e e6       	ldi	r24, 0x6E	; 110
    19ac:	80 93 28 01 	sts	0x0128, r24
    19b0:	80 93 2a 01 	sts	0x012A, r24
    19b4:	d4 d8       	rcall	.-3672   	; 0xb5e <left>
    19b6:	2f ef       	ldi	r18, 0xFF	; 255
    19b8:	8f e3       	ldi	r24, 0x3F	; 63
    19ba:	92 e0       	ldi	r25, 0x02	; 2
    19bc:	21 50       	subi	r18, 0x01	; 1
    19be:	80 40       	sbci	r24, 0x00	; 0
    19c0:	90 40       	sbci	r25, 0x00	; 0
    19c2:	e1 f7       	brne	.-8      	; 0x19bc <static_reorientation_inv+0x56>
    19c4:	00 c0       	rjmp	.+0      	; 0x19c6 <static_reorientation_inv+0x60>
    19c6:	00 00       	nop
    19c8:	81 e0       	ldi	r24, 0x01	; 1
    19ca:	03 d9       	rcall	.-3578   	; 0xbd2 <ADC_Conversion>
    19cc:	80 93 2e 05 	sts	0x052E, r24
    19d0:	82 e0       	ldi	r24, 0x02	; 2
    19d2:	ff d8       	rcall	.-3586   	; 0xbd2 <ADC_Conversion>
    19d4:	80 93 23 05 	sts	0x0523, r24
    19d8:	83 e0       	ldi	r24, 0x03	; 3
    19da:	fb d8       	rcall	.-3594   	; 0xbd2 <ADC_Conversion>
    19dc:	80 93 26 05 	sts	0x0526, r24
    19e0:	90 91 2e 05 	lds	r25, 0x052E
    19e4:	20 91 23 05 	lds	r18, 0x0523
    19e8:	30 e0       	ldi	r19, 0x00	; 0
    19ea:	29 0f       	add	r18, r25
    19ec:	31 1d       	adc	r19, r1
    19ee:	2b 3f       	cpi	r18, 0xFB	; 251
    19f0:	31 05       	cpc	r19, r1
    19f2:	54 f7       	brge	.-44     	; 0x19c8 <static_reorientation_inv+0x62>
    19f4:	82 38       	cpi	r24, 0x82	; 130
    19f6:	40 f3       	brcs	.-48     	; 0x19c8 <static_reorientation_inv+0x62>
    19f8:	12 b8       	out	0x02, r1	; 2
    19fa:	ba d8       	rcall	.-3724   	; 0xb70 <stop>
    19fc:	80 91 42 04 	lds	r24, 0x0442
    1a00:	80 93 28 01 	sts	0x0128, r24
    1a04:	80 91 42 04 	lds	r24, 0x0442
    1a08:	80 93 2a 01 	sts	0x012A, r24
    1a0c:	08 95       	ret

00001a0e <forward_zigzag>:
    1a0e:	9f 92       	push	r9
    1a10:	af 92       	push	r10
    1a12:	bf 92       	push	r11
    1a14:	cf 92       	push	r12
    1a16:	df 92       	push	r13
    1a18:	ef 92       	push	r14
    1a1a:	ff 92       	push	r15
    1a1c:	0f 93       	push	r16
    1a1e:	1f 93       	push	r17
    1a20:	cf 93       	push	r28
    1a22:	df 93       	push	r29
    1a24:	85 e0       	ldi	r24, 0x05	; 5
    1a26:	90 e0       	ldi	r25, 0x00	; 0
    1a28:	ef d8       	rcall	.-3618   	; 0xc08 <LCD_Function>
    1a2a:	e1 2c       	mov	r14, r1
    1a2c:	f1 2c       	mov	r15, r1
    1a2e:	08 e2       	ldi	r16, 0x28	; 40
    1a30:	11 e0       	ldi	r17, 0x01	; 1
    1a32:	0f 2e       	mov	r0, r31
    1a34:	fa ef       	ldi	r31, 0xFA	; 250
    1a36:	df 2e       	mov	r13, r31
    1a38:	f0 2d       	mov	r31, r0
    1a3a:	ca e2       	ldi	r28, 0x2A	; 42
    1a3c:	d1 e0       	ldi	r29, 0x01	; 1
    1a3e:	91 2c       	mov	r9, r1
    1a40:	a1 2c       	mov	r10, r1
    1a42:	0f 2e       	mov	r0, r31
    1a44:	f0 ea       	ldi	r31, 0xA0	; 160
    1a46:	bf 2e       	mov	r11, r31
    1a48:	f0 2d       	mov	r31, r0
    1a4a:	0f 2e       	mov	r0, r31
    1a4c:	f4 eb       	ldi	r31, 0xB4	; 180
    1a4e:	cf 2e       	mov	r12, r31
    1a50:	f0 2d       	mov	r31, r0
    1a52:	81 e0       	ldi	r24, 0x01	; 1
    1a54:	be d8       	rcall	.-3716   	; 0xbd2 <ADC_Conversion>
    1a56:	80 93 2e 05 	sts	0x052E, r24
    1a5a:	82 e0       	ldi	r24, 0x02	; 2
    1a5c:	ba d8       	rcall	.-3724   	; 0xbd2 <ADC_Conversion>
    1a5e:	80 93 23 05 	sts	0x0523, r24
    1a62:	83 e0       	ldi	r24, 0x03	; 3
    1a64:	b6 d8       	rcall	.-3732   	; 0xbd2 <ADC_Conversion>
    1a66:	80 93 26 05 	sts	0x0526, r24
    1a6a:	73 d8       	rcall	.-3866   	; 0xb52 <forward>
    1a6c:	f8 01       	movw	r30, r16
    1a6e:	d0 82       	st	Z, r13
    1a70:	d8 82       	st	Y, r13
    1a72:	20 91 23 05 	lds	r18, 0x0523
    1a76:	30 91 2e 05 	lds	r19, 0x052E
    1a7a:	82 2f       	mov	r24, r18
    1a7c:	90 e0       	ldi	r25, 0x00	; 0
    1a7e:	83 0f       	add	r24, r19
    1a80:	91 1d       	adc	r25, r1
    1a82:	30 91 26 05 	lds	r19, 0x0526
    1a86:	83 0f       	add	r24, r19
    1a88:	91 1d       	adc	r25, r1
    1a8a:	81 39       	cpi	r24, 0x91	; 145
    1a8c:	91 40       	sbci	r25, 0x01	; 1
    1a8e:	e4 f0       	brlt	.+56     	; 0x1ac8 <forward_zigzag+0xba>
    1a90:	6f d8       	rcall	.-3874   	; 0xb70 <stop>
    1a92:	6e d8       	rcall	.-3876   	; 0xb70 <stop>
    1a94:	2f ef       	ldi	r18, 0xFF	; 255
    1a96:	3f e7       	ldi	r19, 0x7F	; 127
    1a98:	84 e0       	ldi	r24, 0x04	; 4
    1a9a:	21 50       	subi	r18, 0x01	; 1
    1a9c:	30 40       	sbci	r19, 0x00	; 0
    1a9e:	80 40       	sbci	r24, 0x00	; 0
    1aa0:	e1 f7       	brne	.-8      	; 0x1a9a <forward_zigzag+0x8c>
    1aa2:	00 c0       	rjmp	.+0      	; 0x1aa4 <forward_zigzag+0x96>
    1aa4:	00 00       	nop
    1aa6:	80 91 42 04 	lds	r24, 0x0442
    1aaa:	80 93 28 01 	sts	0x0128, r24
    1aae:	80 93 2a 01 	sts	0x012A, r24
    1ab2:	4f d8       	rcall	.-3938   	; 0xb52 <forward>
    1ab4:	99 e9       	ldi	r25, 0x99	; 153
    1ab6:	e9 e9       	ldi	r30, 0x99	; 153
    1ab8:	f3 e0       	ldi	r31, 0x03	; 3
    1aba:	91 50       	subi	r25, 0x01	; 1
    1abc:	e0 40       	sbci	r30, 0x00	; 0
    1abe:	f0 40       	sbci	r31, 0x00	; 0
    1ac0:	e1 f7       	brne	.-8      	; 0x1aba <forward_zigzag+0xac>
    1ac2:	00 00       	nop
    1ac4:	55 d8       	rcall	.-3926   	; 0xb70 <stop>
    1ac6:	41 c0       	rjmp	.+130    	; 0x1b4a <forward_zigzag+0x13c>
    1ac8:	25 36       	cpi	r18, 0x65	; 101
    1aca:	50 f0       	brcs	.+20     	; 0x1ae0 <forward_zigzag+0xd2>
    1acc:	42 d8       	rcall	.-3964   	; 0xb52 <forward>
    1ace:	f8 01       	movw	r30, r16
    1ad0:	d0 82       	st	Z, r13
    1ad2:	d8 82       	st	Y, r13
    1ad4:	8f ef       	ldi	r24, 0xFF	; 255
    1ad6:	97 e4       	ldi	r25, 0x47	; 71
    1ad8:	01 97       	sbiw	r24, 0x01	; 1
    1ada:	f1 f7       	brne	.-4      	; 0x1ad8 <forward_zigzag+0xca>
    1adc:	00 c0       	rjmp	.+0      	; 0x1ade <forward_zigzag+0xd0>
    1ade:	00 00       	nop
    1ae0:	80 91 2e 05 	lds	r24, 0x052E
    1ae4:	84 31       	cpi	r24, 0x14	; 20
    1ae6:	90 f4       	brcc	.+36     	; 0x1b0c <forward_zigzag+0xfe>
    1ae8:	80 91 23 05 	lds	r24, 0x0523
    1aec:	84 31       	cpi	r24, 0x14	; 20
    1aee:	70 f4       	brcc	.+28     	; 0x1b0c <forward_zigzag+0xfe>
    1af0:	80 91 26 05 	lds	r24, 0x0526
    1af4:	84 31       	cpi	r24, 0x14	; 20
    1af6:	50 f4       	brcc	.+20     	; 0x1b0c <forward_zigzag+0xfe>
    1af8:	9f ef       	ldi	r25, 0xFF	; 255
    1afa:	e9 1a       	sub	r14, r25
    1afc:	f9 0a       	sbc	r15, r25
    1afe:	e2 e8       	ldi	r30, 0x82	; 130
    1b00:	ee 16       	cp	r14, r30
    1b02:	f1 04       	cpc	r15, r1
    1b04:	1c f0       	brlt	.+6      	; 0x1b0c <forward_zigzag+0xfe>
    1b06:	1d dc       	rcall	.-1990   	; 0x1342 <static_reorientation>
    1b08:	e9 2c       	mov	r14, r9
    1b0a:	fa 2c       	mov	r15, r10
    1b0c:	80 91 23 05 	lds	r24, 0x0523
    1b10:	90 91 2e 05 	lds	r25, 0x052E
    1b14:	89 17       	cp	r24, r25
    1b16:	50 f4       	brcc	.+20     	; 0x1b2c <forward_zigzag+0x11e>
    1b18:	22 d8       	rcall	.-4028   	; 0xb5e <left>
    1b1a:	f8 01       	movw	r30, r16
    1b1c:	c0 82       	st	Z, r12
    1b1e:	b8 82       	st	Y, r11
    1b20:	86 e6       	ldi	r24, 0x66	; 102
    1b22:	9e e0       	ldi	r25, 0x0E	; 14
    1b24:	01 97       	sbiw	r24, 0x01	; 1
    1b26:	f1 f7       	brne	.-4      	; 0x1b24 <forward_zigzag+0x116>
    1b28:	00 00       	nop
    1b2a:	93 cf       	rjmp	.-218    	; 0x1a52 <forward_zigzag+0x44>
    1b2c:	90 91 26 05 	lds	r25, 0x0526
    1b30:	89 17       	cp	r24, r25
    1b32:	08 f0       	brcs	.+2      	; 0x1b36 <forward_zigzag+0x128>
    1b34:	8e cf       	rjmp	.-228    	; 0x1a52 <forward_zigzag+0x44>
    1b36:	10 d8       	rcall	.-4064   	; 0xb58 <right>
    1b38:	f8 01       	movw	r30, r16
    1b3a:	b0 82       	st	Z, r11
    1b3c:	c8 82       	st	Y, r12
    1b3e:	86 e6       	ldi	r24, 0x66	; 102
    1b40:	9e e0       	ldi	r25, 0x0E	; 14
    1b42:	01 97       	sbiw	r24, 0x01	; 1
    1b44:	f1 f7       	brne	.-4      	; 0x1b42 <forward_zigzag+0x134>
    1b46:	00 00       	nop
    1b48:	84 cf       	rjmp	.-248    	; 0x1a52 <forward_zigzag+0x44>
    1b4a:	df 91       	pop	r29
    1b4c:	cf 91       	pop	r28
    1b4e:	1f 91       	pop	r17
    1b50:	0f 91       	pop	r16
    1b52:	ff 90       	pop	r15
    1b54:	ef 90       	pop	r14
    1b56:	df 90       	pop	r13
    1b58:	cf 90       	pop	r12
    1b5a:	bf 90       	pop	r11
    1b5c:	af 90       	pop	r10
    1b5e:	9f 90       	pop	r9
    1b60:	08 95       	ret

00001b62 <right_turn_wls>:
    1b62:	86 e9       	ldi	r24, 0x96	; 150
    1b64:	80 93 28 01 	sts	0x0128, r24
    1b68:	80 93 2a 01 	sts	0x012A, r24
    1b6c:	0e 94 ac 05 	call	0xb58	; 0xb58 <right>
    1b70:	2f ef       	ldi	r18, 0xFF	; 255
    1b72:	8f ef       	ldi	r24, 0xFF	; 255
    1b74:	98 e0       	ldi	r25, 0x08	; 8
    1b76:	21 50       	subi	r18, 0x01	; 1
    1b78:	80 40       	sbci	r24, 0x00	; 0
    1b7a:	90 40       	sbci	r25, 0x00	; 0
    1b7c:	e1 f7       	brne	.-8      	; 0x1b76 <right_turn_wls+0x14>
    1b7e:	00 c0       	rjmp	.+0      	; 0x1b80 <right_turn_wls+0x1e>
    1b80:	00 00       	nop
    1b82:	84 e6       	ldi	r24, 0x64	; 100
    1b84:	80 93 28 01 	sts	0x0128, r24
    1b88:	80 93 2a 01 	sts	0x012A, r24
    1b8c:	83 e0       	ldi	r24, 0x03	; 3
    1b8e:	21 d8       	rcall	.-4030   	; 0xbd2 <ADC_Conversion>
    1b90:	80 93 26 05 	sts	0x0526, r24
    1b94:	81 35       	cpi	r24, 0x51	; 81
    1b96:	d0 f3       	brcs	.-12     	; 0x1b8c <right_turn_wls+0x2a>
    1b98:	12 b8       	out	0x02, r1	; 2
    1b9a:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    1b9e:	80 91 42 04 	lds	r24, 0x0442
    1ba2:	80 93 28 01 	sts	0x0128, r24
    1ba6:	80 91 42 04 	lds	r24, 0x0442
    1baa:	80 93 2a 01 	sts	0x012A, r24
    1bae:	08 95       	ret

00001bb0 <right_turn_inv>:
    1bb0:	86 e9       	ldi	r24, 0x96	; 150
    1bb2:	80 93 28 01 	sts	0x0128, r24
    1bb6:	80 93 2a 01 	sts	0x012A, r24
    1bba:	0e 94 ac 05 	call	0xb58	; 0xb58 <right>
    1bbe:	2f ef       	ldi	r18, 0xFF	; 255
    1bc0:	4f ef       	ldi	r20, 0xFF	; 255
    1bc2:	58 e0       	ldi	r21, 0x08	; 8
    1bc4:	21 50       	subi	r18, 0x01	; 1
    1bc6:	40 40       	sbci	r20, 0x00	; 0
    1bc8:	50 40       	sbci	r21, 0x00	; 0
    1bca:	e1 f7       	brne	.-8      	; 0x1bc4 <right_turn_inv+0x14>
    1bcc:	00 c0       	rjmp	.+0      	; 0x1bce <right_turn_inv+0x1e>
    1bce:	00 00       	nop
    1bd0:	8e e6       	ldi	r24, 0x6E	; 110
    1bd2:	80 93 28 01 	sts	0x0128, r24
    1bd6:	80 93 2a 01 	sts	0x012A, r24
    1bda:	82 e0       	ldi	r24, 0x02	; 2
    1bdc:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <ADC_Conversion>
    1be0:	80 93 23 05 	sts	0x0523, r24
    1be4:	81 e0       	ldi	r24, 0x01	; 1
    1be6:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <ADC_Conversion>
    1bea:	80 93 2e 05 	sts	0x052E, r24
    1bee:	83 e0       	ldi	r24, 0x03	; 3
    1bf0:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <ADC_Conversion>
    1bf4:	80 93 26 05 	sts	0x0526, r24
    1bf8:	20 91 23 05 	lds	r18, 0x0523
    1bfc:	30 e0       	ldi	r19, 0x00	; 0
    1bfe:	a9 01       	movw	r20, r18
    1c00:	48 0f       	add	r20, r24
    1c02:	51 1d       	adc	r21, r1
    1c04:	4b 3f       	cpi	r20, 0xFB	; 251
    1c06:	51 05       	cpc	r21, r1
    1c08:	44 f7       	brge	.-48     	; 0x1bda <right_turn_inv+0x2a>
    1c0a:	80 91 2e 05 	lds	r24, 0x052E
    1c0e:	82 38       	cpi	r24, 0x82	; 130
    1c10:	20 f3       	brcs	.-56     	; 0x1bda <right_turn_inv+0x2a>
    1c12:	12 b8       	out	0x02, r1	; 2
    1c14:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    1c18:	a6 ce       	rjmp	.-692    	; 0x1966 <static_reorientation_inv>
    1c1a:	08 95       	ret

00001c1c <right_turn_wls_bwall>:
    1c1c:	86 e9       	ldi	r24, 0x96	; 150
    1c1e:	80 93 28 01 	sts	0x0128, r24
    1c22:	80 93 2a 01 	sts	0x012A, r24
    1c26:	0e 94 ac 05 	call	0xb58	; 0xb58 <right>
    1c2a:	2f ef       	ldi	r18, 0xFF	; 255
    1c2c:	8f ef       	ldi	r24, 0xFF	; 255
    1c2e:	98 e0       	ldi	r25, 0x08	; 8
    1c30:	21 50       	subi	r18, 0x01	; 1
    1c32:	80 40       	sbci	r24, 0x00	; 0
    1c34:	90 40       	sbci	r25, 0x00	; 0
    1c36:	e1 f7       	brne	.-8      	; 0x1c30 <right_turn_wls_bwall+0x14>
    1c38:	00 c0       	rjmp	.+0      	; 0x1c3a <right_turn_wls_bwall+0x1e>
    1c3a:	00 00       	nop
    1c3c:	84 e6       	ldi	r24, 0x64	; 100
    1c3e:	80 93 28 01 	sts	0x0128, r24
    1c42:	80 93 2a 01 	sts	0x012A, r24
    1c46:	83 e0       	ldi	r24, 0x03	; 3
    1c48:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <ADC_Conversion>
    1c4c:	80 93 26 05 	sts	0x0526, r24
    1c50:	81 35       	cpi	r24, 0x51	; 81
    1c52:	c8 f3       	brcs	.-14     	; 0x1c46 <right_turn_wls_bwall+0x2a>
    1c54:	12 b8       	out	0x02, r1	; 2
    1c56:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    1c5a:	80 91 42 04 	lds	r24, 0x0442
    1c5e:	80 93 28 01 	sts	0x0128, r24
    1c62:	80 91 42 04 	lds	r24, 0x0442
    1c66:	80 93 2a 01 	sts	0x012A, r24
    1c6a:	08 95       	ret

00001c6c <left_turn_wls>:
    1c6c:	86 e9       	ldi	r24, 0x96	; 150
    1c6e:	80 93 28 01 	sts	0x0128, r24
    1c72:	80 93 2a 01 	sts	0x012A, r24
    1c76:	0e 94 af 05 	call	0xb5e	; 0xb5e <left>
    1c7a:	2f ef       	ldi	r18, 0xFF	; 255
    1c7c:	8f ef       	ldi	r24, 0xFF	; 255
    1c7e:	91 e1       	ldi	r25, 0x11	; 17
    1c80:	21 50       	subi	r18, 0x01	; 1
    1c82:	80 40       	sbci	r24, 0x00	; 0
    1c84:	90 40       	sbci	r25, 0x00	; 0
    1c86:	e1 f7       	brne	.-8      	; 0x1c80 <left_turn_wls+0x14>
    1c88:	00 c0       	rjmp	.+0      	; 0x1c8a <left_turn_wls+0x1e>
    1c8a:	00 00       	nop
    1c8c:	8e e6       	ldi	r24, 0x6E	; 110
    1c8e:	80 93 28 01 	sts	0x0128, r24
    1c92:	80 93 2a 01 	sts	0x012A, r24
    1c96:	81 e0       	ldi	r24, 0x01	; 1
    1c98:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <ADC_Conversion>
    1c9c:	80 93 2e 05 	sts	0x052E, r24
    1ca0:	80 35       	cpi	r24, 0x50	; 80
    1ca2:	c8 f3       	brcs	.-14     	; 0x1c96 <left_turn_wls+0x2a>
    1ca4:	12 b8       	out	0x02, r1	; 2
    1ca6:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    1caa:	80 91 42 04 	lds	r24, 0x0442
    1cae:	80 93 28 01 	sts	0x0128, r24
    1cb2:	80 91 42 04 	lds	r24, 0x0442
    1cb6:	80 93 2a 01 	sts	0x012A, r24
    1cba:	08 95       	ret

00001cbc <traverse>:
    1cbc:	2f 92       	push	r2
    1cbe:	3f 92       	push	r3
    1cc0:	4f 92       	push	r4
    1cc2:	5f 92       	push	r5
    1cc4:	6f 92       	push	r6
    1cc6:	7f 92       	push	r7
    1cc8:	8f 92       	push	r8
    1cca:	9f 92       	push	r9
    1ccc:	af 92       	push	r10
    1cce:	bf 92       	push	r11
    1cd0:	cf 92       	push	r12
    1cd2:	df 92       	push	r13
    1cd4:	ef 92       	push	r14
    1cd6:	ff 92       	push	r15
    1cd8:	0f 93       	push	r16
    1cda:	1f 93       	push	r17
    1cdc:	cf 93       	push	r28
    1cde:	df 93       	push	r29
    1ce0:	da 01       	movw	r26, r20
    1ce2:	0d 91       	ld	r16, X+
    1ce4:	1c 91       	ld	r17, X
    1ce6:	98 01       	movw	r18, r16
    1ce8:	21 50       	subi	r18, 0x01	; 1
    1cea:	31 09       	sbc	r19, r1
    1cec:	12 16       	cp	r1, r18
    1cee:	13 06       	cpc	r1, r19
    1cf0:	0c f0       	brlt	.+2      	; 0x1cf4 <traverse+0x38>
    1cf2:	9a c6       	rjmp	.+3380   	; 0x2a28 <__stack+0x829>
    1cf4:	28 2e       	mov	r2, r24
    1cf6:	39 2e       	mov	r3, r25
    1cf8:	ee 24       	eor	r14, r14
    1cfa:	e3 94       	inc	r14
    1cfc:	f1 2c       	mov	r15, r1
    1cfe:	cc 24       	eor	r12, r12
    1d00:	c3 94       	inc	r12
    1d02:	d1 2c       	mov	r13, r1
    1d04:	b1 2c       	mov	r11, r1
    1d06:	a1 2c       	mov	r10, r1
    1d08:	0f 2e       	mov	r0, r31
    1d0a:	f7 e7       	ldi	r31, 0x77	; 119
    1d0c:	7f 2e       	mov	r7, r31
    1d0e:	f0 2d       	mov	r31, r0
    1d10:	0f 2e       	mov	r0, r31
    1d12:	f3 e7       	ldi	r31, 0x73	; 115
    1d14:	6f 2e       	mov	r6, r31
    1d16:	f0 2d       	mov	r31, r0
    1d18:	0f 2e       	mov	r0, r31
    1d1a:	f5 e6       	ldi	r31, 0x65	; 101
    1d1c:	5f 2e       	mov	r5, r31
    1d1e:	f0 2d       	mov	r31, r0
    1d20:	0f 2e       	mov	r0, r31
    1d22:	fe e6       	ldi	r31, 0x6E	; 110
    1d24:	4f 2e       	mov	r4, r31
    1d26:	f0 2d       	mov	r31, r0
    1d28:	f1 01       	movw	r30, r2
    1d2a:	80 81       	ld	r24, Z
    1d2c:	91 81       	ldd	r25, Z+1	; 0x01
    1d2e:	00 97       	sbiw	r24, 0x00	; 0
    1d30:	49 f4       	brne	.+18     	; 0x1d44 <traverse+0x88>
    1d32:	22 81       	ldd	r18, Z+2	; 0x02
    1d34:	33 81       	ldd	r19, Z+3	; 0x03
    1d36:	21 30       	cpi	r18, 0x01	; 1
    1d38:	31 05       	cpc	r19, r1
    1d3a:	b1 f1       	breq	.+108    	; 0x1da8 <traverse+0xec>
    1d3c:	2e 30       	cpi	r18, 0x0E	; 14
    1d3e:	31 05       	cpc	r19, r1
    1d40:	99 f4       	brne	.+38     	; 0x1d68 <traverse+0xac>
    1d42:	32 c0       	rjmp	.+100    	; 0x1da8 <traverse+0xec>
    1d44:	89 30       	cpi	r24, 0x09	; 9
    1d46:	91 05       	cpc	r25, r1
    1d48:	31 f4       	brne	.+12     	; 0x1d56 <traverse+0x9a>
    1d4a:	22 81       	ldd	r18, Z+2	; 0x02
    1d4c:	33 81       	ldd	r19, Z+3	; 0x03
    1d4e:	28 30       	cpi	r18, 0x08	; 8
    1d50:	31 05       	cpc	r19, r1
    1d52:	a1 f4       	brne	.+40     	; 0x1d7c <traverse+0xc0>
    1d54:	29 c0       	rjmp	.+82     	; 0x1da8 <traverse+0xec>
    1d56:	86 30       	cpi	r24, 0x06	; 6
    1d58:	91 05       	cpc	r25, r1
    1d5a:	31 f4       	brne	.+12     	; 0x1d68 <traverse+0xac>
    1d5c:	22 81       	ldd	r18, Z+2	; 0x02
    1d5e:	33 81       	ldd	r19, Z+3	; 0x03
    1d60:	27 30       	cpi	r18, 0x07	; 7
    1d62:	31 05       	cpc	r19, r1
    1d64:	a9 f4       	brne	.+42     	; 0x1d90 <traverse+0xd4>
    1d66:	20 c0       	rjmp	.+64     	; 0x1da8 <traverse+0xec>
    1d68:	8d 30       	cpi	r24, 0x0D	; 13
    1d6a:	91 05       	cpc	r25, r1
    1d6c:	39 f4       	brne	.+14     	; 0x1d7c <traverse+0xc0>
    1d6e:	22 81       	ldd	r18, Z+2	; 0x02
    1d70:	33 81       	ldd	r19, Z+3	; 0x03
    1d72:	2e 30       	cpi	r18, 0x0E	; 14
    1d74:	31 05       	cpc	r19, r1
    1d76:	09 f0       	breq	.+2      	; 0x1d7a <traverse+0xbe>
    1d78:	a9 c1       	rjmp	.+850    	; 0x20cc <traverse+0x410>
    1d7a:	16 c0       	rjmp	.+44     	; 0x1da8 <traverse+0xec>
    1d7c:	82 30       	cpi	r24, 0x02	; 2
    1d7e:	91 05       	cpc	r25, r1
    1d80:	39 f4       	brne	.+14     	; 0x1d90 <traverse+0xd4>
    1d82:	22 81       	ldd	r18, Z+2	; 0x02
    1d84:	33 81       	ldd	r19, Z+3	; 0x03
    1d86:	21 30       	cpi	r18, 0x01	; 1
    1d88:	31 05       	cpc	r19, r1
    1d8a:	09 f0       	breq	.+2      	; 0x1d8e <traverse+0xd2>
    1d8c:	44 c3       	rjmp	.+1672   	; 0x2416 <__stack+0x217>
    1d8e:	0c c0       	rjmp	.+24     	; 0x1da8 <traverse+0xec>
    1d90:	8e 30       	cpi	r24, 0x0E	; 14
    1d92:	91 05       	cpc	r25, r1
    1d94:	21 f0       	breq	.+8      	; 0x1d9e <traverse+0xe2>
    1d96:	81 30       	cpi	r24, 0x01	; 1
    1d98:	91 05       	cpc	r25, r1
    1d9a:	09 f0       	breq	.+2      	; 0x1d9e <traverse+0xe2>
    1d9c:	97 c1       	rjmp	.+814    	; 0x20cc <traverse+0x410>
    1d9e:	22 81       	ldd	r18, Z+2	; 0x02
    1da0:	33 81       	ldd	r19, Z+3	; 0x03
    1da2:	23 2b       	or	r18, r19
    1da4:	09 f0       	breq	.+2      	; 0x1da8 <traverse+0xec>
    1da6:	92 c1       	rjmp	.+804    	; 0x20cc <traverse+0x410>
    1da8:	4c 2d       	mov	r20, r12
    1daa:	5d 2d       	mov	r21, r13
    1dac:	2b 2d       	mov	r18, r11
    1dae:	3a 2d       	mov	r19, r10
    1db0:	04 c0       	rjmp	.+8      	; 0x1dba <traverse+0xfe>
    1db2:	2f 5f       	subi	r18, 0xFF	; 255
    1db4:	3f 4f       	sbci	r19, 0xFF	; 255
    1db6:	4f 5f       	subi	r20, 0xFF	; 255
    1db8:	5f 4f       	sbci	r21, 0xFF	; 255
    1dba:	d9 01       	movw	r26, r18
    1dbc:	80 81       	ld	r24, Z
    1dbe:	91 81       	ldd	r25, Z+1	; 0x01
    1dc0:	88 0f       	add	r24, r24
    1dc2:	99 1f       	adc	r25, r25
    1dc4:	88 0f       	add	r24, r24
    1dc6:	99 1f       	adc	r25, r25
    1dc8:	82 0f       	add	r24, r18
    1dca:	93 1f       	adc	r25, r19
    1dcc:	88 0f       	add	r24, r24
    1dce:	99 1f       	adc	r25, r25
    1dd0:	8a 5f       	subi	r24, 0xFA	; 250
    1dd2:	9d 4f       	sbci	r25, 0xFD	; 253
    1dd4:	ec 01       	movw	r28, r24
    1dd6:	68 81       	ld	r22, Y
    1dd8:	79 81       	ldd	r23, Y+1	; 0x01
    1dda:	82 81       	ldd	r24, Z+2	; 0x02
    1ddc:	93 81       	ldd	r25, Z+3	; 0x03
    1dde:	68 17       	cp	r22, r24
    1de0:	79 07       	cpc	r23, r25
    1de2:	b9 f4       	brne	.+46     	; 0x1e12 <traverse+0x156>
    1de4:	10 97       	sbiw	r26, 0x00	; 0
    1de6:	19 f4       	brne	.+6      	; 0x1dee <traverse+0x132>
    1de8:	40 92 85 04 	sts	0x0485, r4
    1dec:	e2 cf       	rjmp	.-60     	; 0x1db2 <traverse+0xf6>
    1dee:	21 30       	cpi	r18, 0x01	; 1
    1df0:	31 05       	cpc	r19, r1
    1df2:	19 f4       	brne	.+6      	; 0x1dfa <traverse+0x13e>
    1df4:	50 92 85 04 	sts	0x0485, r5
    1df8:	dc cf       	rjmp	.-72     	; 0x1db2 <traverse+0xf6>
    1dfa:	22 30       	cpi	r18, 0x02	; 2
    1dfc:	31 05       	cpc	r19, r1
    1dfe:	19 f4       	brne	.+6      	; 0x1e06 <traverse+0x14a>
    1e00:	60 92 85 04 	sts	0x0485, r6
    1e04:	d6 cf       	rjmp	.-84     	; 0x1db2 <traverse+0xf6>
    1e06:	23 30       	cpi	r18, 0x03	; 3
    1e08:	31 05       	cpc	r19, r1
    1e0a:	19 f4       	brne	.+6      	; 0x1e12 <traverse+0x156>
    1e0c:	70 92 85 04 	sts	0x0485, r7
    1e10:	03 c0       	rjmp	.+6      	; 0x1e18 <traverse+0x15c>
    1e12:	44 30       	cpi	r20, 0x04	; 4
    1e14:	51 05       	cpc	r21, r1
    1e16:	6c f2       	brlt	.-102    	; 0x1db2 <traverse+0xf6>
    1e18:	80 91 86 04 	lds	r24, 0x0486
    1e1c:	8e 36       	cpi	r24, 0x6E	; 110
    1e1e:	09 f0       	breq	.+2      	; 0x1e22 <traverse+0x166>
    1e20:	53 c0       	rjmp	.+166    	; 0x1ec8 <traverse+0x20c>
    1e22:	90 91 85 04 	lds	r25, 0x0485
    1e26:	9e 36       	cpi	r25, 0x6E	; 110
    1e28:	89 f4       	brne	.+34     	; 0x1e4c <traverse+0x190>
    1e2a:	6c 2d       	mov	r22, r12
    1e2c:	7d 2d       	mov	r23, r13
    1e2e:	82 e0       	ldi	r24, 0x02	; 2
    1e30:	90 e0       	ldi	r25, 0x00	; 0
    1e32:	b5 da       	rcall	.-2710   	; 0x139e <forward_wls>
    1e34:	80 91 85 04 	lds	r24, 0x0485
    1e38:	80 93 86 04 	sts	0x0486, r24
    1e3c:	86 ec       	ldi	r24, 0xC6	; 198
    1e3e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    1e42:	80 91 86 04 	lds	r24, 0x0486
    1e46:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1e4a:	e4 c5       	rjmp	.+3016   	; 0x2a14 <__stack+0x815>
    1e4c:	95 36       	cpi	r25, 0x65	; 101
    1e4e:	91 f4       	brne	.+36     	; 0x1e74 <traverse+0x1b8>
    1e50:	88 de       	rcall	.-752    	; 0x1b62 <right_turn_wls>
    1e52:	6c 2d       	mov	r22, r12
    1e54:	7d 2d       	mov	r23, r13
    1e56:	82 e0       	ldi	r24, 0x02	; 2
    1e58:	90 e0       	ldi	r25, 0x00	; 0
    1e5a:	a1 da       	rcall	.-2750   	; 0x139e <forward_wls>
    1e5c:	80 91 85 04 	lds	r24, 0x0485
    1e60:	80 93 86 04 	sts	0x0486, r24
    1e64:	86 ec       	ldi	r24, 0xC6	; 198
    1e66:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    1e6a:	80 91 86 04 	lds	r24, 0x0486
    1e6e:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1e72:	d0 c5       	rjmp	.+2976   	; 0x2a14 <__stack+0x815>
    1e74:	93 37       	cpi	r25, 0x73	; 115
    1e76:	99 f4       	brne	.+38     	; 0x1e9e <traverse+0x1e2>
    1e78:	74 de       	rcall	.-792    	; 0x1b62 <right_turn_wls>
    1e7a:	73 de       	rcall	.-794    	; 0x1b62 <right_turn_wls>
    1e7c:	6c 2d       	mov	r22, r12
    1e7e:	7d 2d       	mov	r23, r13
    1e80:	82 e0       	ldi	r24, 0x02	; 2
    1e82:	90 e0       	ldi	r25, 0x00	; 0
    1e84:	8c da       	rcall	.-2792   	; 0x139e <forward_wls>
    1e86:	80 91 85 04 	lds	r24, 0x0485
    1e8a:	80 93 86 04 	sts	0x0486, r24
    1e8e:	86 ec       	ldi	r24, 0xC6	; 198
    1e90:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    1e94:	80 91 86 04 	lds	r24, 0x0486
    1e98:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1e9c:	bb c5       	rjmp	.+2934   	; 0x2a14 <__stack+0x815>
    1e9e:	97 37       	cpi	r25, 0x77	; 119
    1ea0:	09 f0       	breq	.+2      	; 0x1ea4 <traverse+0x1e8>
    1ea2:	be c0       	rjmp	.+380    	; 0x2020 <traverse+0x364>
    1ea4:	e3 de       	rcall	.-570    	; 0x1c6c <left_turn_wls>
    1ea6:	6c 2d       	mov	r22, r12
    1ea8:	7d 2d       	mov	r23, r13
    1eaa:	82 e0       	ldi	r24, 0x02	; 2
    1eac:	90 e0       	ldi	r25, 0x00	; 0
    1eae:	77 da       	rcall	.-2834   	; 0x139e <forward_wls>
    1eb0:	80 91 85 04 	lds	r24, 0x0485
    1eb4:	80 93 86 04 	sts	0x0486, r24
    1eb8:	86 ec       	ldi	r24, 0xC6	; 198
    1eba:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    1ebe:	80 91 86 04 	lds	r24, 0x0486
    1ec2:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1ec6:	a6 c5       	rjmp	.+2892   	; 0x2a14 <__stack+0x815>
    1ec8:	85 36       	cpi	r24, 0x65	; 101
    1eca:	09 f0       	breq	.+2      	; 0x1ece <traverse+0x212>
    1ecc:	53 c0       	rjmp	.+166    	; 0x1f74 <traverse+0x2b8>
    1ece:	80 91 85 04 	lds	r24, 0x0485
    1ed2:	85 36       	cpi	r24, 0x65	; 101
    1ed4:	89 f4       	brne	.+34     	; 0x1ef8 <traverse+0x23c>
    1ed6:	6c 2d       	mov	r22, r12
    1ed8:	7d 2d       	mov	r23, r13
    1eda:	82 e0       	ldi	r24, 0x02	; 2
    1edc:	90 e0       	ldi	r25, 0x00	; 0
    1ede:	5f da       	rcall	.-2882   	; 0x139e <forward_wls>
    1ee0:	80 91 85 04 	lds	r24, 0x0485
    1ee4:	80 93 86 04 	sts	0x0486, r24
    1ee8:	86 ec       	ldi	r24, 0xC6	; 198
    1eea:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    1eee:	80 91 86 04 	lds	r24, 0x0486
    1ef2:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1ef6:	8e c5       	rjmp	.+2844   	; 0x2a14 <__stack+0x815>
    1ef8:	83 37       	cpi	r24, 0x73	; 115
    1efa:	91 f4       	brne	.+36     	; 0x1f20 <traverse+0x264>
    1efc:	32 de       	rcall	.-924    	; 0x1b62 <right_turn_wls>
    1efe:	6c 2d       	mov	r22, r12
    1f00:	7d 2d       	mov	r23, r13
    1f02:	82 e0       	ldi	r24, 0x02	; 2
    1f04:	90 e0       	ldi	r25, 0x00	; 0
    1f06:	4b da       	rcall	.-2922   	; 0x139e <forward_wls>
    1f08:	80 91 85 04 	lds	r24, 0x0485
    1f0c:	80 93 86 04 	sts	0x0486, r24
    1f10:	86 ec       	ldi	r24, 0xC6	; 198
    1f12:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    1f16:	80 91 86 04 	lds	r24, 0x0486
    1f1a:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1f1e:	7a c5       	rjmp	.+2804   	; 0x2a14 <__stack+0x815>
    1f20:	87 37       	cpi	r24, 0x77	; 119
    1f22:	99 f4       	brne	.+38     	; 0x1f4a <traverse+0x28e>
    1f24:	1e de       	rcall	.-964    	; 0x1b62 <right_turn_wls>
    1f26:	1d de       	rcall	.-966    	; 0x1b62 <right_turn_wls>
    1f28:	6c 2d       	mov	r22, r12
    1f2a:	7d 2d       	mov	r23, r13
    1f2c:	82 e0       	ldi	r24, 0x02	; 2
    1f2e:	90 e0       	ldi	r25, 0x00	; 0
    1f30:	36 da       	rcall	.-2964   	; 0x139e <forward_wls>
    1f32:	80 91 85 04 	lds	r24, 0x0485
    1f36:	80 93 86 04 	sts	0x0486, r24
    1f3a:	86 ec       	ldi	r24, 0xC6	; 198
    1f3c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    1f40:	80 91 86 04 	lds	r24, 0x0486
    1f44:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1f48:	65 c5       	rjmp	.+2762   	; 0x2a14 <__stack+0x815>
    1f4a:	8e 36       	cpi	r24, 0x6E	; 110
    1f4c:	09 f0       	breq	.+2      	; 0x1f50 <traverse+0x294>
    1f4e:	62 c5       	rjmp	.+2756   	; 0x2a14 <__stack+0x815>
    1f50:	8d de       	rcall	.-742    	; 0x1c6c <left_turn_wls>
    1f52:	6c 2d       	mov	r22, r12
    1f54:	7d 2d       	mov	r23, r13
    1f56:	82 e0       	ldi	r24, 0x02	; 2
    1f58:	90 e0       	ldi	r25, 0x00	; 0
    1f5a:	21 da       	rcall	.-3006   	; 0x139e <forward_wls>
    1f5c:	80 91 85 04 	lds	r24, 0x0485
    1f60:	80 93 86 04 	sts	0x0486, r24
    1f64:	86 ec       	ldi	r24, 0xC6	; 198
    1f66:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    1f6a:	80 91 86 04 	lds	r24, 0x0486
    1f6e:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1f72:	50 c5       	rjmp	.+2720   	; 0x2a14 <__stack+0x815>
    1f74:	83 37       	cpi	r24, 0x73	; 115
    1f76:	09 f0       	breq	.+2      	; 0x1f7a <traverse+0x2be>
    1f78:	53 c0       	rjmp	.+166    	; 0x2020 <traverse+0x364>
    1f7a:	80 91 85 04 	lds	r24, 0x0485
    1f7e:	83 37       	cpi	r24, 0x73	; 115
    1f80:	89 f4       	brne	.+34     	; 0x1fa4 <traverse+0x2e8>
    1f82:	6c 2d       	mov	r22, r12
    1f84:	7d 2d       	mov	r23, r13
    1f86:	82 e0       	ldi	r24, 0x02	; 2
    1f88:	90 e0       	ldi	r25, 0x00	; 0
    1f8a:	09 da       	rcall	.-3054   	; 0x139e <forward_wls>
    1f8c:	80 91 85 04 	lds	r24, 0x0485
    1f90:	80 93 86 04 	sts	0x0486, r24
    1f94:	86 ec       	ldi	r24, 0xC6	; 198
    1f96:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    1f9a:	80 91 86 04 	lds	r24, 0x0486
    1f9e:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1fa2:	38 c5       	rjmp	.+2672   	; 0x2a14 <__stack+0x815>
    1fa4:	87 37       	cpi	r24, 0x77	; 119
    1fa6:	91 f4       	brne	.+36     	; 0x1fcc <traverse+0x310>
    1fa8:	dc dd       	rcall	.-1096   	; 0x1b62 <right_turn_wls>
    1faa:	6c 2d       	mov	r22, r12
    1fac:	7d 2d       	mov	r23, r13
    1fae:	82 e0       	ldi	r24, 0x02	; 2
    1fb0:	90 e0       	ldi	r25, 0x00	; 0
    1fb2:	f5 d9       	rcall	.-3094   	; 0x139e <forward_wls>
    1fb4:	80 91 85 04 	lds	r24, 0x0485
    1fb8:	80 93 86 04 	sts	0x0486, r24
    1fbc:	86 ec       	ldi	r24, 0xC6	; 198
    1fbe:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    1fc2:	80 91 86 04 	lds	r24, 0x0486
    1fc6:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1fca:	24 c5       	rjmp	.+2632   	; 0x2a14 <__stack+0x815>
    1fcc:	8e 36       	cpi	r24, 0x6E	; 110
    1fce:	99 f4       	brne	.+38     	; 0x1ff6 <traverse+0x33a>
    1fd0:	c8 dd       	rcall	.-1136   	; 0x1b62 <right_turn_wls>
    1fd2:	c7 dd       	rcall	.-1138   	; 0x1b62 <right_turn_wls>
    1fd4:	6c 2d       	mov	r22, r12
    1fd6:	7d 2d       	mov	r23, r13
    1fd8:	82 e0       	ldi	r24, 0x02	; 2
    1fda:	90 e0       	ldi	r25, 0x00	; 0
    1fdc:	e0 d9       	rcall	.-3136   	; 0x139e <forward_wls>
    1fde:	80 91 85 04 	lds	r24, 0x0485
    1fe2:	80 93 86 04 	sts	0x0486, r24
    1fe6:	86 ec       	ldi	r24, 0xC6	; 198
    1fe8:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    1fec:	80 91 86 04 	lds	r24, 0x0486
    1ff0:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1ff4:	0f c5       	rjmp	.+2590   	; 0x2a14 <__stack+0x815>
    1ff6:	85 36       	cpi	r24, 0x65	; 101
    1ff8:	09 f0       	breq	.+2      	; 0x1ffc <traverse+0x340>
    1ffa:	0c c5       	rjmp	.+2584   	; 0x2a14 <__stack+0x815>
    1ffc:	37 de       	rcall	.-914    	; 0x1c6c <left_turn_wls>
    1ffe:	6c 2d       	mov	r22, r12
    2000:	7d 2d       	mov	r23, r13
    2002:	82 e0       	ldi	r24, 0x02	; 2
    2004:	90 e0       	ldi	r25, 0x00	; 0
    2006:	cb d9       	rcall	.-3178   	; 0x139e <forward_wls>
    2008:	80 91 85 04 	lds	r24, 0x0485
    200c:	80 93 86 04 	sts	0x0486, r24
    2010:	86 ec       	ldi	r24, 0xC6	; 198
    2012:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2016:	80 91 86 04 	lds	r24, 0x0486
    201a:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    201e:	fa c4       	rjmp	.+2548   	; 0x2a14 <__stack+0x815>
    2020:	87 37       	cpi	r24, 0x77	; 119
    2022:	09 f0       	breq	.+2      	; 0x2026 <traverse+0x36a>
    2024:	f7 c4       	rjmp	.+2542   	; 0x2a14 <__stack+0x815>
    2026:	80 91 85 04 	lds	r24, 0x0485
    202a:	87 37       	cpi	r24, 0x77	; 119
    202c:	89 f4       	brne	.+34     	; 0x2050 <traverse+0x394>
    202e:	6c 2d       	mov	r22, r12
    2030:	7d 2d       	mov	r23, r13
    2032:	82 e0       	ldi	r24, 0x02	; 2
    2034:	90 e0       	ldi	r25, 0x00	; 0
    2036:	b3 d9       	rcall	.-3226   	; 0x139e <forward_wls>
    2038:	80 91 85 04 	lds	r24, 0x0485
    203c:	80 93 86 04 	sts	0x0486, r24
    2040:	86 ec       	ldi	r24, 0xC6	; 198
    2042:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2046:	80 91 86 04 	lds	r24, 0x0486
    204a:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    204e:	e2 c4       	rjmp	.+2500   	; 0x2a14 <__stack+0x815>
    2050:	8e 36       	cpi	r24, 0x6E	; 110
    2052:	91 f4       	brne	.+36     	; 0x2078 <traverse+0x3bc>
    2054:	86 dd       	rcall	.-1268   	; 0x1b62 <right_turn_wls>
    2056:	6c 2d       	mov	r22, r12
    2058:	7d 2d       	mov	r23, r13
    205a:	82 e0       	ldi	r24, 0x02	; 2
    205c:	90 e0       	ldi	r25, 0x00	; 0
    205e:	9f d9       	rcall	.-3266   	; 0x139e <forward_wls>
    2060:	80 91 85 04 	lds	r24, 0x0485
    2064:	80 93 86 04 	sts	0x0486, r24
    2068:	86 ec       	ldi	r24, 0xC6	; 198
    206a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    206e:	80 91 86 04 	lds	r24, 0x0486
    2072:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2076:	ce c4       	rjmp	.+2460   	; 0x2a14 <__stack+0x815>
    2078:	85 36       	cpi	r24, 0x65	; 101
    207a:	99 f4       	brne	.+38     	; 0x20a2 <traverse+0x3e6>
    207c:	72 dd       	rcall	.-1308   	; 0x1b62 <right_turn_wls>
    207e:	71 dd       	rcall	.-1310   	; 0x1b62 <right_turn_wls>
    2080:	6c 2d       	mov	r22, r12
    2082:	7d 2d       	mov	r23, r13
    2084:	82 e0       	ldi	r24, 0x02	; 2
    2086:	90 e0       	ldi	r25, 0x00	; 0
    2088:	8a d9       	rcall	.-3308   	; 0x139e <forward_wls>
    208a:	80 91 85 04 	lds	r24, 0x0485
    208e:	80 93 86 04 	sts	0x0486, r24
    2092:	86 ec       	ldi	r24, 0xC6	; 198
    2094:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2098:	80 91 86 04 	lds	r24, 0x0486
    209c:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    20a0:	b9 c4       	rjmp	.+2418   	; 0x2a14 <__stack+0x815>
    20a2:	83 37       	cpi	r24, 0x73	; 115
    20a4:	09 f0       	breq	.+2      	; 0x20a8 <traverse+0x3ec>
    20a6:	b6 c4       	rjmp	.+2412   	; 0x2a14 <__stack+0x815>
    20a8:	e1 dd       	rcall	.-1086   	; 0x1c6c <left_turn_wls>
    20aa:	6c 2d       	mov	r22, r12
    20ac:	7d 2d       	mov	r23, r13
    20ae:	82 e0       	ldi	r24, 0x02	; 2
    20b0:	90 e0       	ldi	r25, 0x00	; 0
    20b2:	75 d9       	rcall	.-3350   	; 0x139e <forward_wls>
    20b4:	80 91 85 04 	lds	r24, 0x0485
    20b8:	80 93 86 04 	sts	0x0486, r24
    20bc:	86 ec       	ldi	r24, 0xC6	; 198
    20be:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    20c2:	80 91 86 04 	lds	r24, 0x0486
    20c6:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    20ca:	a4 c4       	rjmp	.+2376   	; 0x2a14 <__stack+0x815>
    20cc:	83 30       	cpi	r24, 0x03	; 3
    20ce:	91 05       	cpc	r25, r1
    20d0:	39 f4       	brne	.+14     	; 0x20e0 <traverse+0x424>
    20d2:	22 81       	ldd	r18, Z+2	; 0x02
    20d4:	33 81       	ldd	r19, Z+3	; 0x03
    20d6:	2c 30       	cpi	r18, 0x0C	; 12
    20d8:	31 05       	cpc	r19, r1
    20da:	09 f0       	breq	.+2      	; 0x20de <traverse+0x422>
    20dc:	a5 c1       	rjmp	.+842    	; 0x2428 <__stack+0x229>
    20de:	09 c0       	rjmp	.+18     	; 0x20f2 <traverse+0x436>
    20e0:	8c 30       	cpi	r24, 0x0C	; 12
    20e2:	91 05       	cpc	r25, r1
    20e4:	09 f0       	breq	.+2      	; 0x20e8 <traverse+0x42c>
    20e6:	97 c1       	rjmp	.+814    	; 0x2416 <__stack+0x217>
    20e8:	82 81       	ldd	r24, Z+2	; 0x02
    20ea:	93 81       	ldd	r25, Z+3	; 0x03
    20ec:	03 97       	sbiw	r24, 0x03	; 3
    20ee:	09 f0       	breq	.+2      	; 0x20f2 <traverse+0x436>
    20f0:	f2 c2       	rjmp	.+1508   	; 0x26d6 <__stack+0x4d7>
    20f2:	2c 2d       	mov	r18, r12
    20f4:	3d 2d       	mov	r19, r13
    20f6:	8b 2d       	mov	r24, r11
    20f8:	9a 2d       	mov	r25, r10
    20fa:	03 c0       	rjmp	.+6      	; 0x2102 <traverse+0x446>
    20fc:	01 96       	adiw	r24, 0x01	; 1
    20fe:	2f 5f       	subi	r18, 0xFF	; 255
    2100:	3f 4f       	sbci	r19, 0xFF	; 255
    2102:	a0 81       	ld	r26, Z
    2104:	b1 81       	ldd	r27, Z+1	; 0x01
    2106:	aa 0f       	add	r26, r26
    2108:	bb 1f       	adc	r27, r27
    210a:	aa 0f       	add	r26, r26
    210c:	bb 1f       	adc	r27, r27
    210e:	a8 0f       	add	r26, r24
    2110:	b9 1f       	adc	r27, r25
    2112:	aa 0f       	add	r26, r26
    2114:	bb 1f       	adc	r27, r27
    2116:	aa 5f       	subi	r26, 0xFA	; 250
    2118:	bd 4f       	sbci	r27, 0xFD	; 253
    211a:	6d 91       	ld	r22, X+
    211c:	7c 91       	ld	r23, X
    211e:	42 81       	ldd	r20, Z+2	; 0x02
    2120:	53 81       	ldd	r21, Z+3	; 0x03
    2122:	64 17       	cp	r22, r20
    2124:	75 07       	cpc	r23, r21
    2126:	b9 f4       	brne	.+46     	; 0x2156 <traverse+0x49a>
    2128:	00 97       	sbiw	r24, 0x00	; 0
    212a:	19 f4       	brne	.+6      	; 0x2132 <traverse+0x476>
    212c:	40 92 85 04 	sts	0x0485, r4
    2130:	e5 cf       	rjmp	.-54     	; 0x20fc <traverse+0x440>
    2132:	81 30       	cpi	r24, 0x01	; 1
    2134:	91 05       	cpc	r25, r1
    2136:	19 f4       	brne	.+6      	; 0x213e <traverse+0x482>
    2138:	50 92 85 04 	sts	0x0485, r5
    213c:	df cf       	rjmp	.-66     	; 0x20fc <traverse+0x440>
    213e:	82 30       	cpi	r24, 0x02	; 2
    2140:	91 05       	cpc	r25, r1
    2142:	19 f4       	brne	.+6      	; 0x214a <traverse+0x48e>
    2144:	60 92 85 04 	sts	0x0485, r6
    2148:	d9 cf       	rjmp	.-78     	; 0x20fc <traverse+0x440>
    214a:	83 30       	cpi	r24, 0x03	; 3
    214c:	91 05       	cpc	r25, r1
    214e:	19 f4       	brne	.+6      	; 0x2156 <traverse+0x49a>
    2150:	70 92 85 04 	sts	0x0485, r7
    2154:	03 c0       	rjmp	.+6      	; 0x215c <traverse+0x4a0>
    2156:	24 30       	cpi	r18, 0x04	; 4
    2158:	31 05       	cpc	r19, r1
    215a:	84 f2       	brlt	.-96     	; 0x20fc <traverse+0x440>
    215c:	80 91 86 04 	lds	r24, 0x0486
    2160:	8e 36       	cpi	r24, 0x6E	; 110
    2162:	09 f0       	breq	.+2      	; 0x2166 <traverse+0x4aa>
    2164:	53 c0       	rjmp	.+166    	; 0x220c <__stack+0xd>
    2166:	90 91 85 04 	lds	r25, 0x0485
    216a:	9e 36       	cpi	r25, 0x6E	; 110
    216c:	89 f4       	brne	.+34     	; 0x2190 <traverse+0x4d4>
    216e:	6c 2d       	mov	r22, r12
    2170:	7d 2d       	mov	r23, r13
    2172:	8c 2d       	mov	r24, r12
    2174:	9d 2d       	mov	r25, r13
    2176:	13 d9       	rcall	.-3546   	; 0x139e <forward_wls>
    2178:	80 91 85 04 	lds	r24, 0x0485
    217c:	80 93 86 04 	sts	0x0486, r24
    2180:	86 ec       	ldi	r24, 0xC6	; 198
    2182:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2186:	80 91 86 04 	lds	r24, 0x0486
    218a:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    218e:	42 c4       	rjmp	.+2180   	; 0x2a14 <__stack+0x815>
    2190:	95 36       	cpi	r25, 0x65	; 101
    2192:	91 f4       	brne	.+36     	; 0x21b8 <traverse+0x4fc>
    2194:	e6 dc       	rcall	.-1588   	; 0x1b62 <right_turn_wls>
    2196:	6c 2d       	mov	r22, r12
    2198:	7d 2d       	mov	r23, r13
    219a:	8c 2d       	mov	r24, r12
    219c:	9d 2d       	mov	r25, r13
    219e:	ff d8       	rcall	.-3586   	; 0x139e <forward_wls>
    21a0:	80 91 85 04 	lds	r24, 0x0485
    21a4:	80 93 86 04 	sts	0x0486, r24
    21a8:	86 ec       	ldi	r24, 0xC6	; 198
    21aa:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    21ae:	80 91 86 04 	lds	r24, 0x0486
    21b2:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    21b6:	2e c4       	rjmp	.+2140   	; 0x2a14 <__stack+0x815>
    21b8:	93 37       	cpi	r25, 0x73	; 115
    21ba:	99 f4       	brne	.+38     	; 0x21e2 <traverse+0x526>
    21bc:	d2 dc       	rcall	.-1628   	; 0x1b62 <right_turn_wls>
    21be:	d1 dc       	rcall	.-1630   	; 0x1b62 <right_turn_wls>
    21c0:	6c 2d       	mov	r22, r12
    21c2:	7d 2d       	mov	r23, r13
    21c4:	8c 2d       	mov	r24, r12
    21c6:	9d 2d       	mov	r25, r13
    21c8:	ea d8       	rcall	.-3628   	; 0x139e <forward_wls>
    21ca:	80 91 85 04 	lds	r24, 0x0485
    21ce:	80 93 86 04 	sts	0x0486, r24
    21d2:	86 ec       	ldi	r24, 0xC6	; 198
    21d4:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    21d8:	80 91 86 04 	lds	r24, 0x0486
    21dc:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    21e0:	19 c4       	rjmp	.+2098   	; 0x2a14 <__stack+0x815>
    21e2:	97 37       	cpi	r25, 0x77	; 119
    21e4:	09 f0       	breq	.+2      	; 0x21e8 <traverse+0x52c>
    21e6:	be c0       	rjmp	.+380    	; 0x2364 <__stack+0x165>
    21e8:	41 dd       	rcall	.-1406   	; 0x1c6c <left_turn_wls>
    21ea:	6c 2d       	mov	r22, r12
    21ec:	7d 2d       	mov	r23, r13
    21ee:	8c 2d       	mov	r24, r12
    21f0:	9d 2d       	mov	r25, r13
    21f2:	d5 d8       	rcall	.-3670   	; 0x139e <forward_wls>
    21f4:	80 91 85 04 	lds	r24, 0x0485
    21f8:	80 93 86 04 	sts	0x0486, r24
    21fc:	86 ec       	ldi	r24, 0xC6	; 198
    21fe:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2202:	80 91 86 04 	lds	r24, 0x0486
    2206:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    220a:	04 c4       	rjmp	.+2056   	; 0x2a14 <__stack+0x815>
    220c:	85 36       	cpi	r24, 0x65	; 101
    220e:	09 f0       	breq	.+2      	; 0x2212 <__stack+0x13>
    2210:	53 c0       	rjmp	.+166    	; 0x22b8 <__stack+0xb9>
    2212:	80 91 85 04 	lds	r24, 0x0485
    2216:	85 36       	cpi	r24, 0x65	; 101
    2218:	89 f4       	brne	.+34     	; 0x223c <__stack+0x3d>
    221a:	6c 2d       	mov	r22, r12
    221c:	7d 2d       	mov	r23, r13
    221e:	8c 2d       	mov	r24, r12
    2220:	9d 2d       	mov	r25, r13
    2222:	bd d8       	rcall	.-3718   	; 0x139e <forward_wls>
    2224:	80 91 85 04 	lds	r24, 0x0485
    2228:	80 93 86 04 	sts	0x0486, r24
    222c:	86 ec       	ldi	r24, 0xC6	; 198
    222e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2232:	80 91 86 04 	lds	r24, 0x0486
    2236:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    223a:	ec c3       	rjmp	.+2008   	; 0x2a14 <__stack+0x815>
    223c:	83 37       	cpi	r24, 0x73	; 115
    223e:	91 f4       	brne	.+36     	; 0x2264 <__stack+0x65>
    2240:	90 dc       	rcall	.-1760   	; 0x1b62 <right_turn_wls>
    2242:	6c 2d       	mov	r22, r12
    2244:	7d 2d       	mov	r23, r13
    2246:	8c 2d       	mov	r24, r12
    2248:	9d 2d       	mov	r25, r13
    224a:	a9 d8       	rcall	.-3758   	; 0x139e <forward_wls>
    224c:	80 91 85 04 	lds	r24, 0x0485
    2250:	80 93 86 04 	sts	0x0486, r24
    2254:	86 ec       	ldi	r24, 0xC6	; 198
    2256:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    225a:	80 91 86 04 	lds	r24, 0x0486
    225e:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2262:	d8 c3       	rjmp	.+1968   	; 0x2a14 <__stack+0x815>
    2264:	87 37       	cpi	r24, 0x77	; 119
    2266:	99 f4       	brne	.+38     	; 0x228e <__stack+0x8f>
    2268:	7c dc       	rcall	.-1800   	; 0x1b62 <right_turn_wls>
    226a:	7b dc       	rcall	.-1802   	; 0x1b62 <right_turn_wls>
    226c:	6c 2d       	mov	r22, r12
    226e:	7d 2d       	mov	r23, r13
    2270:	8c 2d       	mov	r24, r12
    2272:	9d 2d       	mov	r25, r13
    2274:	94 d8       	rcall	.-3800   	; 0x139e <forward_wls>
    2276:	80 91 85 04 	lds	r24, 0x0485
    227a:	80 93 86 04 	sts	0x0486, r24
    227e:	86 ec       	ldi	r24, 0xC6	; 198
    2280:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2284:	80 91 86 04 	lds	r24, 0x0486
    2288:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    228c:	c3 c3       	rjmp	.+1926   	; 0x2a14 <__stack+0x815>
    228e:	8e 36       	cpi	r24, 0x6E	; 110
    2290:	09 f0       	breq	.+2      	; 0x2294 <__stack+0x95>
    2292:	c0 c3       	rjmp	.+1920   	; 0x2a14 <__stack+0x815>
    2294:	eb dc       	rcall	.-1578   	; 0x1c6c <left_turn_wls>
    2296:	6c 2d       	mov	r22, r12
    2298:	7d 2d       	mov	r23, r13
    229a:	8c 2d       	mov	r24, r12
    229c:	9d 2d       	mov	r25, r13
    229e:	7f d8       	rcall	.-3842   	; 0x139e <forward_wls>
    22a0:	80 91 85 04 	lds	r24, 0x0485
    22a4:	80 93 86 04 	sts	0x0486, r24
    22a8:	86 ec       	ldi	r24, 0xC6	; 198
    22aa:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    22ae:	80 91 86 04 	lds	r24, 0x0486
    22b2:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    22b6:	ae c3       	rjmp	.+1884   	; 0x2a14 <__stack+0x815>
    22b8:	83 37       	cpi	r24, 0x73	; 115
    22ba:	09 f0       	breq	.+2      	; 0x22be <__stack+0xbf>
    22bc:	53 c0       	rjmp	.+166    	; 0x2364 <__stack+0x165>
    22be:	80 91 85 04 	lds	r24, 0x0485
    22c2:	83 37       	cpi	r24, 0x73	; 115
    22c4:	89 f4       	brne	.+34     	; 0x22e8 <__stack+0xe9>
    22c6:	6c 2d       	mov	r22, r12
    22c8:	7d 2d       	mov	r23, r13
    22ca:	8c 2d       	mov	r24, r12
    22cc:	9d 2d       	mov	r25, r13
    22ce:	67 d8       	rcall	.-3890   	; 0x139e <forward_wls>
    22d0:	80 91 85 04 	lds	r24, 0x0485
    22d4:	80 93 86 04 	sts	0x0486, r24
    22d8:	86 ec       	ldi	r24, 0xC6	; 198
    22da:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    22de:	80 91 86 04 	lds	r24, 0x0486
    22e2:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    22e6:	96 c3       	rjmp	.+1836   	; 0x2a14 <__stack+0x815>
    22e8:	87 37       	cpi	r24, 0x77	; 119
    22ea:	91 f4       	brne	.+36     	; 0x2310 <__stack+0x111>
    22ec:	3a dc       	rcall	.-1932   	; 0x1b62 <right_turn_wls>
    22ee:	6c 2d       	mov	r22, r12
    22f0:	7d 2d       	mov	r23, r13
    22f2:	8c 2d       	mov	r24, r12
    22f4:	9d 2d       	mov	r25, r13
    22f6:	53 d8       	rcall	.-3930   	; 0x139e <forward_wls>
    22f8:	80 91 85 04 	lds	r24, 0x0485
    22fc:	80 93 86 04 	sts	0x0486, r24
    2300:	86 ec       	ldi	r24, 0xC6	; 198
    2302:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2306:	80 91 86 04 	lds	r24, 0x0486
    230a:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    230e:	82 c3       	rjmp	.+1796   	; 0x2a14 <__stack+0x815>
    2310:	8e 36       	cpi	r24, 0x6E	; 110
    2312:	99 f4       	brne	.+38     	; 0x233a <__stack+0x13b>
    2314:	26 dc       	rcall	.-1972   	; 0x1b62 <right_turn_wls>
    2316:	25 dc       	rcall	.-1974   	; 0x1b62 <right_turn_wls>
    2318:	6c 2d       	mov	r22, r12
    231a:	7d 2d       	mov	r23, r13
    231c:	8c 2d       	mov	r24, r12
    231e:	9d 2d       	mov	r25, r13
    2320:	3e d8       	rcall	.-3972   	; 0x139e <forward_wls>
    2322:	80 91 85 04 	lds	r24, 0x0485
    2326:	80 93 86 04 	sts	0x0486, r24
    232a:	86 ec       	ldi	r24, 0xC6	; 198
    232c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2330:	80 91 86 04 	lds	r24, 0x0486
    2334:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2338:	6d c3       	rjmp	.+1754   	; 0x2a14 <__stack+0x815>
    233a:	85 36       	cpi	r24, 0x65	; 101
    233c:	09 f0       	breq	.+2      	; 0x2340 <__stack+0x141>
    233e:	6a c3       	rjmp	.+1748   	; 0x2a14 <__stack+0x815>
    2340:	95 dc       	rcall	.-1750   	; 0x1c6c <left_turn_wls>
    2342:	6c 2d       	mov	r22, r12
    2344:	7d 2d       	mov	r23, r13
    2346:	8c 2d       	mov	r24, r12
    2348:	9d 2d       	mov	r25, r13
    234a:	29 d8       	rcall	.-4014   	; 0x139e <forward_wls>
    234c:	80 91 85 04 	lds	r24, 0x0485
    2350:	80 93 86 04 	sts	0x0486, r24
    2354:	86 ec       	ldi	r24, 0xC6	; 198
    2356:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    235a:	80 91 86 04 	lds	r24, 0x0486
    235e:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2362:	58 c3       	rjmp	.+1712   	; 0x2a14 <__stack+0x815>
    2364:	87 37       	cpi	r24, 0x77	; 119
    2366:	09 f0       	breq	.+2      	; 0x236a <__stack+0x16b>
    2368:	55 c3       	rjmp	.+1706   	; 0x2a14 <__stack+0x815>
    236a:	80 91 85 04 	lds	r24, 0x0485
    236e:	87 37       	cpi	r24, 0x77	; 119
    2370:	89 f4       	brne	.+34     	; 0x2394 <__stack+0x195>
    2372:	6c 2d       	mov	r22, r12
    2374:	7d 2d       	mov	r23, r13
    2376:	8c 2d       	mov	r24, r12
    2378:	9d 2d       	mov	r25, r13
    237a:	11 d8       	rcall	.-4062   	; 0x139e <forward_wls>
    237c:	80 91 85 04 	lds	r24, 0x0485
    2380:	80 93 86 04 	sts	0x0486, r24
    2384:	86 ec       	ldi	r24, 0xC6	; 198
    2386:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    238a:	80 91 86 04 	lds	r24, 0x0486
    238e:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2392:	40 c3       	rjmp	.+1664   	; 0x2a14 <__stack+0x815>
    2394:	8e 36       	cpi	r24, 0x6E	; 110
    2396:	99 f4       	brne	.+38     	; 0x23be <__stack+0x1bf>
    2398:	e4 db       	rcall	.-2104   	; 0x1b62 <right_turn_wls>
    239a:	6c 2d       	mov	r22, r12
    239c:	7d 2d       	mov	r23, r13
    239e:	8c 2d       	mov	r24, r12
    23a0:	9d 2d       	mov	r25, r13
    23a2:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    23a6:	80 91 85 04 	lds	r24, 0x0485
    23aa:	80 93 86 04 	sts	0x0486, r24
    23ae:	86 ec       	ldi	r24, 0xC6	; 198
    23b0:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    23b4:	80 91 86 04 	lds	r24, 0x0486
    23b8:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    23bc:	2b c3       	rjmp	.+1622   	; 0x2a14 <__stack+0x815>
    23be:	85 36       	cpi	r24, 0x65	; 101
    23c0:	a1 f4       	brne	.+40     	; 0x23ea <__stack+0x1eb>
    23c2:	cf db       	rcall	.-2146   	; 0x1b62 <right_turn_wls>
    23c4:	ce db       	rcall	.-2148   	; 0x1b62 <right_turn_wls>
    23c6:	6c 2d       	mov	r22, r12
    23c8:	7d 2d       	mov	r23, r13
    23ca:	8c 2d       	mov	r24, r12
    23cc:	9d 2d       	mov	r25, r13
    23ce:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    23d2:	80 91 85 04 	lds	r24, 0x0485
    23d6:	80 93 86 04 	sts	0x0486, r24
    23da:	86 ec       	ldi	r24, 0xC6	; 198
    23dc:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    23e0:	80 91 86 04 	lds	r24, 0x0486
    23e4:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    23e8:	15 c3       	rjmp	.+1578   	; 0x2a14 <__stack+0x815>
    23ea:	83 37       	cpi	r24, 0x73	; 115
    23ec:	09 f0       	breq	.+2      	; 0x23f0 <__stack+0x1f1>
    23ee:	12 c3       	rjmp	.+1572   	; 0x2a14 <__stack+0x815>
    23f0:	3d dc       	rcall	.-1926   	; 0x1c6c <left_turn_wls>
    23f2:	6c 2d       	mov	r22, r12
    23f4:	7d 2d       	mov	r23, r13
    23f6:	8c 2d       	mov	r24, r12
    23f8:	9d 2d       	mov	r25, r13
    23fa:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    23fe:	80 91 85 04 	lds	r24, 0x0485
    2402:	80 93 86 04 	sts	0x0486, r24
    2406:	86 ec       	ldi	r24, 0xC6	; 198
    2408:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    240c:	80 91 86 04 	lds	r24, 0x0486
    2410:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2414:	ff c2       	rjmp	.+1534   	; 0x2a14 <__stack+0x815>
    2416:	8a 30       	cpi	r24, 0x0A	; 10
    2418:	91 05       	cpc	r25, r1
    241a:	31 f4       	brne	.+12     	; 0x2428 <__stack+0x229>
    241c:	82 81       	ldd	r24, Z+2	; 0x02
    241e:	93 81       	ldd	r25, Z+3	; 0x03
    2420:	05 97       	sbiw	r24, 0x05	; 5
    2422:	09 f0       	breq	.+2      	; 0x2426 <__stack+0x227>
    2424:	58 c1       	rjmp	.+688    	; 0x26d6 <__stack+0x4d7>
    2426:	08 c0       	rjmp	.+16     	; 0x2438 <__stack+0x239>
    2428:	05 97       	sbiw	r24, 0x05	; 5
    242a:	09 f0       	breq	.+2      	; 0x242e <__stack+0x22f>
    242c:	54 c1       	rjmp	.+680    	; 0x26d6 <__stack+0x4d7>
    242e:	82 81       	ldd	r24, Z+2	; 0x02
    2430:	93 81       	ldd	r25, Z+3	; 0x03
    2432:	0a 97       	sbiw	r24, 0x0a	; 10
    2434:	09 f0       	breq	.+2      	; 0x2438 <__stack+0x239>
    2436:	4f c1       	rjmp	.+670    	; 0x26d6 <__stack+0x4d7>
    2438:	6c 2d       	mov	r22, r12
    243a:	7d 2d       	mov	r23, r13
    243c:	8b 2d       	mov	r24, r11
    243e:	9a 2d       	mov	r25, r10
    2440:	03 c0       	rjmp	.+6      	; 0x2448 <__stack+0x249>
    2442:	01 96       	adiw	r24, 0x01	; 1
    2444:	6f 5f       	subi	r22, 0xFF	; 255
    2446:	7f 4f       	sbci	r23, 0xFF	; 255
    2448:	a0 81       	ld	r26, Z
    244a:	b1 81       	ldd	r27, Z+1	; 0x01
    244c:	aa 0f       	add	r26, r26
    244e:	bb 1f       	adc	r27, r27
    2450:	aa 0f       	add	r26, r26
    2452:	bb 1f       	adc	r27, r27
    2454:	a8 0f       	add	r26, r24
    2456:	b9 1f       	adc	r27, r25
    2458:	aa 0f       	add	r26, r26
    245a:	bb 1f       	adc	r27, r27
    245c:	aa 5f       	subi	r26, 0xFA	; 250
    245e:	bd 4f       	sbci	r27, 0xFD	; 253
    2460:	4d 91       	ld	r20, X+
    2462:	5c 91       	ld	r21, X
    2464:	22 81       	ldd	r18, Z+2	; 0x02
    2466:	33 81       	ldd	r19, Z+3	; 0x03
    2468:	42 17       	cp	r20, r18
    246a:	53 07       	cpc	r21, r19
    246c:	b9 f4       	brne	.+46     	; 0x249c <__stack+0x29d>
    246e:	00 97       	sbiw	r24, 0x00	; 0
    2470:	19 f4       	brne	.+6      	; 0x2478 <__stack+0x279>
    2472:	40 92 85 04 	sts	0x0485, r4
    2476:	e5 cf       	rjmp	.-54     	; 0x2442 <__stack+0x243>
    2478:	81 30       	cpi	r24, 0x01	; 1
    247a:	91 05       	cpc	r25, r1
    247c:	19 f4       	brne	.+6      	; 0x2484 <__stack+0x285>
    247e:	50 92 85 04 	sts	0x0485, r5
    2482:	df cf       	rjmp	.-66     	; 0x2442 <__stack+0x243>
    2484:	82 30       	cpi	r24, 0x02	; 2
    2486:	91 05       	cpc	r25, r1
    2488:	19 f4       	brne	.+6      	; 0x2490 <__stack+0x291>
    248a:	60 92 85 04 	sts	0x0485, r6
    248e:	d9 cf       	rjmp	.-78     	; 0x2442 <__stack+0x243>
    2490:	83 30       	cpi	r24, 0x03	; 3
    2492:	91 05       	cpc	r25, r1
    2494:	19 f4       	brne	.+6      	; 0x249c <__stack+0x29d>
    2496:	70 92 85 04 	sts	0x0485, r7
    249a:	03 c0       	rjmp	.+6      	; 0x24a2 <__stack+0x2a3>
    249c:	64 30       	cpi	r22, 0x04	; 4
    249e:	71 05       	cpc	r23, r1
    24a0:	84 f2       	brlt	.-96     	; 0x2442 <__stack+0x243>
    24a2:	80 91 86 04 	lds	r24, 0x0486
    24a6:	8e 36       	cpi	r24, 0x6E	; 110
    24a8:	09 f0       	breq	.+2      	; 0x24ac <__stack+0x2ad>
    24aa:	43 c0       	rjmp	.+134    	; 0x2532 <__stack+0x333>
    24ac:	90 91 85 04 	lds	r25, 0x0485
    24b0:	9e 36       	cpi	r25, 0x6E	; 110
    24b2:	69 f4       	brne	.+26     	; 0x24ce <__stack+0x2cf>
    24b4:	ac da       	rcall	.-2728   	; 0x1a0e <forward_zigzag>
    24b6:	80 91 85 04 	lds	r24, 0x0485
    24ba:	80 93 86 04 	sts	0x0486, r24
    24be:	86 ec       	ldi	r24, 0xC6	; 198
    24c0:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    24c4:	80 91 86 04 	lds	r24, 0x0486
    24c8:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    24cc:	a3 c2       	rjmp	.+1350   	; 0x2a14 <__stack+0x815>
    24ce:	95 36       	cpi	r25, 0x65	; 101
    24d0:	71 f4       	brne	.+28     	; 0x24ee <__stack+0x2ef>
    24d2:	47 db       	rcall	.-2418   	; 0x1b62 <right_turn_wls>
    24d4:	9c da       	rcall	.-2760   	; 0x1a0e <forward_zigzag>
    24d6:	80 91 85 04 	lds	r24, 0x0485
    24da:	80 93 86 04 	sts	0x0486, r24
    24de:	86 ec       	ldi	r24, 0xC6	; 198
    24e0:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    24e4:	80 91 86 04 	lds	r24, 0x0486
    24e8:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    24ec:	93 c2       	rjmp	.+1318   	; 0x2a14 <__stack+0x815>
    24ee:	93 37       	cpi	r25, 0x73	; 115
    24f0:	79 f4       	brne	.+30     	; 0x2510 <__stack+0x311>
    24f2:	37 db       	rcall	.-2450   	; 0x1b62 <right_turn_wls>
    24f4:	36 db       	rcall	.-2452   	; 0x1b62 <right_turn_wls>
    24f6:	8b da       	rcall	.-2794   	; 0x1a0e <forward_zigzag>
    24f8:	80 91 85 04 	lds	r24, 0x0485
    24fc:	80 93 86 04 	sts	0x0486, r24
    2500:	86 ec       	ldi	r24, 0xC6	; 198
    2502:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2506:	80 91 86 04 	lds	r24, 0x0486
    250a:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    250e:	82 c2       	rjmp	.+1284   	; 0x2a14 <__stack+0x815>
    2510:	97 37       	cpi	r25, 0x77	; 119
    2512:	09 f0       	breq	.+2      	; 0x2516 <__stack+0x317>
    2514:	9a c0       	rjmp	.+308    	; 0x264a <__stack+0x44b>
    2516:	aa db       	rcall	.-2220   	; 0x1c6c <left_turn_wls>
    2518:	7a da       	rcall	.-2828   	; 0x1a0e <forward_zigzag>
    251a:	80 91 85 04 	lds	r24, 0x0485
    251e:	80 93 86 04 	sts	0x0486, r24
    2522:	86 ec       	ldi	r24, 0xC6	; 198
    2524:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2528:	80 91 86 04 	lds	r24, 0x0486
    252c:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2530:	71 c2       	rjmp	.+1250   	; 0x2a14 <__stack+0x815>
    2532:	85 36       	cpi	r24, 0x65	; 101
    2534:	09 f0       	breq	.+2      	; 0x2538 <__stack+0x339>
    2536:	43 c0       	rjmp	.+134    	; 0x25be <__stack+0x3bf>
    2538:	80 91 85 04 	lds	r24, 0x0485
    253c:	85 36       	cpi	r24, 0x65	; 101
    253e:	69 f4       	brne	.+26     	; 0x255a <__stack+0x35b>
    2540:	66 da       	rcall	.-2868   	; 0x1a0e <forward_zigzag>
    2542:	80 91 85 04 	lds	r24, 0x0485
    2546:	80 93 86 04 	sts	0x0486, r24
    254a:	86 ec       	ldi	r24, 0xC6	; 198
    254c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2550:	80 91 86 04 	lds	r24, 0x0486
    2554:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2558:	5d c2       	rjmp	.+1210   	; 0x2a14 <__stack+0x815>
    255a:	83 37       	cpi	r24, 0x73	; 115
    255c:	71 f4       	brne	.+28     	; 0x257a <__stack+0x37b>
    255e:	01 db       	rcall	.-2558   	; 0x1b62 <right_turn_wls>
    2560:	56 da       	rcall	.-2900   	; 0x1a0e <forward_zigzag>
    2562:	80 91 85 04 	lds	r24, 0x0485
    2566:	80 93 86 04 	sts	0x0486, r24
    256a:	86 ec       	ldi	r24, 0xC6	; 198
    256c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2570:	80 91 86 04 	lds	r24, 0x0486
    2574:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2578:	4d c2       	rjmp	.+1178   	; 0x2a14 <__stack+0x815>
    257a:	87 37       	cpi	r24, 0x77	; 119
    257c:	79 f4       	brne	.+30     	; 0x259c <__stack+0x39d>
    257e:	f1 da       	rcall	.-2590   	; 0x1b62 <right_turn_wls>
    2580:	f0 da       	rcall	.-2592   	; 0x1b62 <right_turn_wls>
    2582:	45 da       	rcall	.-2934   	; 0x1a0e <forward_zigzag>
    2584:	80 91 85 04 	lds	r24, 0x0485
    2588:	80 93 86 04 	sts	0x0486, r24
    258c:	86 ec       	ldi	r24, 0xC6	; 198
    258e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2592:	80 91 86 04 	lds	r24, 0x0486
    2596:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    259a:	3c c2       	rjmp	.+1144   	; 0x2a14 <__stack+0x815>
    259c:	8e 36       	cpi	r24, 0x6E	; 110
    259e:	09 f0       	breq	.+2      	; 0x25a2 <__stack+0x3a3>
    25a0:	39 c2       	rjmp	.+1138   	; 0x2a14 <__stack+0x815>
    25a2:	64 db       	rcall	.-2360   	; 0x1c6c <left_turn_wls>
    25a4:	34 da       	rcall	.-2968   	; 0x1a0e <forward_zigzag>
    25a6:	80 91 85 04 	lds	r24, 0x0485
    25aa:	80 93 86 04 	sts	0x0486, r24
    25ae:	86 ec       	ldi	r24, 0xC6	; 198
    25b0:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    25b4:	80 91 86 04 	lds	r24, 0x0486
    25b8:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    25bc:	2b c2       	rjmp	.+1110   	; 0x2a14 <__stack+0x815>
    25be:	83 37       	cpi	r24, 0x73	; 115
    25c0:	09 f0       	breq	.+2      	; 0x25c4 <__stack+0x3c5>
    25c2:	43 c0       	rjmp	.+134    	; 0x264a <__stack+0x44b>
    25c4:	80 91 85 04 	lds	r24, 0x0485
    25c8:	83 37       	cpi	r24, 0x73	; 115
    25ca:	69 f4       	brne	.+26     	; 0x25e6 <__stack+0x3e7>
    25cc:	20 da       	rcall	.-3008   	; 0x1a0e <forward_zigzag>
    25ce:	80 91 85 04 	lds	r24, 0x0485
    25d2:	80 93 86 04 	sts	0x0486, r24
    25d6:	86 ec       	ldi	r24, 0xC6	; 198
    25d8:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    25dc:	80 91 86 04 	lds	r24, 0x0486
    25e0:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    25e4:	17 c2       	rjmp	.+1070   	; 0x2a14 <__stack+0x815>
    25e6:	87 37       	cpi	r24, 0x77	; 119
    25e8:	71 f4       	brne	.+28     	; 0x2606 <__stack+0x407>
    25ea:	bb da       	rcall	.-2698   	; 0x1b62 <right_turn_wls>
    25ec:	10 da       	rcall	.-3040   	; 0x1a0e <forward_zigzag>
    25ee:	80 91 85 04 	lds	r24, 0x0485
    25f2:	80 93 86 04 	sts	0x0486, r24
    25f6:	86 ec       	ldi	r24, 0xC6	; 198
    25f8:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    25fc:	80 91 86 04 	lds	r24, 0x0486
    2600:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2604:	07 c2       	rjmp	.+1038   	; 0x2a14 <__stack+0x815>
    2606:	8e 36       	cpi	r24, 0x6E	; 110
    2608:	79 f4       	brne	.+30     	; 0x2628 <__stack+0x429>
    260a:	ab da       	rcall	.-2730   	; 0x1b62 <right_turn_wls>
    260c:	aa da       	rcall	.-2732   	; 0x1b62 <right_turn_wls>
    260e:	ff d9       	rcall	.-3074   	; 0x1a0e <forward_zigzag>
    2610:	80 91 85 04 	lds	r24, 0x0485
    2614:	80 93 86 04 	sts	0x0486, r24
    2618:	86 ec       	ldi	r24, 0xC6	; 198
    261a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    261e:	80 91 86 04 	lds	r24, 0x0486
    2622:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2626:	f6 c1       	rjmp	.+1004   	; 0x2a14 <__stack+0x815>
    2628:	85 36       	cpi	r24, 0x65	; 101
    262a:	09 f0       	breq	.+2      	; 0x262e <__stack+0x42f>
    262c:	f3 c1       	rjmp	.+998    	; 0x2a14 <__stack+0x815>
    262e:	1e db       	rcall	.-2500   	; 0x1c6c <left_turn_wls>
    2630:	ee d9       	rcall	.-3108   	; 0x1a0e <forward_zigzag>
    2632:	80 91 85 04 	lds	r24, 0x0485
    2636:	80 93 86 04 	sts	0x0486, r24
    263a:	86 ec       	ldi	r24, 0xC6	; 198
    263c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2640:	80 91 86 04 	lds	r24, 0x0486
    2644:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2648:	e5 c1       	rjmp	.+970    	; 0x2a14 <__stack+0x815>
    264a:	87 37       	cpi	r24, 0x77	; 119
    264c:	09 f0       	breq	.+2      	; 0x2650 <__stack+0x451>
    264e:	e2 c1       	rjmp	.+964    	; 0x2a14 <__stack+0x815>
    2650:	80 91 85 04 	lds	r24, 0x0485
    2654:	87 37       	cpi	r24, 0x77	; 119
    2656:	69 f4       	brne	.+26     	; 0x2672 <__stack+0x473>
    2658:	da d9       	rcall	.-3148   	; 0x1a0e <forward_zigzag>
    265a:	80 91 85 04 	lds	r24, 0x0485
    265e:	80 93 86 04 	sts	0x0486, r24
    2662:	86 ec       	ldi	r24, 0xC6	; 198
    2664:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2668:	80 91 86 04 	lds	r24, 0x0486
    266c:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2670:	d1 c1       	rjmp	.+930    	; 0x2a14 <__stack+0x815>
    2672:	8e 36       	cpi	r24, 0x6E	; 110
    2674:	71 f4       	brne	.+28     	; 0x2692 <__stack+0x493>
    2676:	75 da       	rcall	.-2838   	; 0x1b62 <right_turn_wls>
    2678:	ca d9       	rcall	.-3180   	; 0x1a0e <forward_zigzag>
    267a:	80 91 85 04 	lds	r24, 0x0485
    267e:	80 93 86 04 	sts	0x0486, r24
    2682:	86 ec       	ldi	r24, 0xC6	; 198
    2684:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2688:	80 91 86 04 	lds	r24, 0x0486
    268c:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2690:	c1 c1       	rjmp	.+898    	; 0x2a14 <__stack+0x815>
    2692:	85 36       	cpi	r24, 0x65	; 101
    2694:	79 f4       	brne	.+30     	; 0x26b4 <__stack+0x4b5>
    2696:	65 da       	rcall	.-2870   	; 0x1b62 <right_turn_wls>
    2698:	64 da       	rcall	.-2872   	; 0x1b62 <right_turn_wls>
    269a:	b9 d9       	rcall	.-3214   	; 0x1a0e <forward_zigzag>
    269c:	80 91 85 04 	lds	r24, 0x0485
    26a0:	80 93 86 04 	sts	0x0486, r24
    26a4:	86 ec       	ldi	r24, 0xC6	; 198
    26a6:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    26aa:	80 91 86 04 	lds	r24, 0x0486
    26ae:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    26b2:	b0 c1       	rjmp	.+864    	; 0x2a14 <__stack+0x815>
    26b4:	83 37       	cpi	r24, 0x73	; 115
    26b6:	09 f0       	breq	.+2      	; 0x26ba <__stack+0x4bb>
    26b8:	ad c1       	rjmp	.+858    	; 0x2a14 <__stack+0x815>
    26ba:	d8 da       	rcall	.-2640   	; 0x1c6c <left_turn_wls>
    26bc:	a8 d9       	rcall	.-3248   	; 0x1a0e <forward_zigzag>
    26be:	80 91 85 04 	lds	r24, 0x0485
    26c2:	80 93 86 04 	sts	0x0486, r24
    26c6:	86 ec       	ldi	r24, 0xC6	; 198
    26c8:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    26cc:	80 91 86 04 	lds	r24, 0x0486
    26d0:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    26d4:	9f c1       	rjmp	.+830    	; 0x2a14 <__stack+0x815>
    26d6:	8c 2d       	mov	r24, r12
    26d8:	9d 2d       	mov	r25, r13
    26da:	2b 2d       	mov	r18, r11
    26dc:	3a 2d       	mov	r19, r10
    26de:	03 c0       	rjmp	.+6      	; 0x26e6 <__stack+0x4e7>
    26e0:	2f 5f       	subi	r18, 0xFF	; 255
    26e2:	3f 4f       	sbci	r19, 0xFF	; 255
    26e4:	01 96       	adiw	r24, 0x01	; 1
    26e6:	a0 81       	ld	r26, Z
    26e8:	b1 81       	ldd	r27, Z+1	; 0x01
    26ea:	aa 0f       	add	r26, r26
    26ec:	bb 1f       	adc	r27, r27
    26ee:	aa 0f       	add	r26, r26
    26f0:	bb 1f       	adc	r27, r27
    26f2:	a2 0f       	add	r26, r18
    26f4:	b3 1f       	adc	r27, r19
    26f6:	aa 0f       	add	r26, r26
    26f8:	bb 1f       	adc	r27, r27
    26fa:	aa 5f       	subi	r26, 0xFA	; 250
    26fc:	bd 4f       	sbci	r27, 0xFD	; 253
    26fe:	0d 90       	ld	r0, X+
    2700:	bc 91       	ld	r27, X
    2702:	a0 2d       	mov	r26, r0
    2704:	62 81       	ldd	r22, Z+2	; 0x02
    2706:	73 81       	ldd	r23, Z+3	; 0x03
    2708:	a6 17       	cp	r26, r22
    270a:	b7 07       	cpc	r27, r23
    270c:	c1 f4       	brne	.+48     	; 0x273e <__stack+0x53f>
    270e:	21 15       	cp	r18, r1
    2710:	31 05       	cpc	r19, r1
    2712:	19 f4       	brne	.+6      	; 0x271a <__stack+0x51b>
    2714:	40 92 85 04 	sts	0x0485, r4
    2718:	e3 cf       	rjmp	.-58     	; 0x26e0 <__stack+0x4e1>
    271a:	21 30       	cpi	r18, 0x01	; 1
    271c:	31 05       	cpc	r19, r1
    271e:	19 f4       	brne	.+6      	; 0x2726 <__stack+0x527>
    2720:	50 92 85 04 	sts	0x0485, r5
    2724:	dd cf       	rjmp	.-70     	; 0x26e0 <__stack+0x4e1>
    2726:	22 30       	cpi	r18, 0x02	; 2
    2728:	31 05       	cpc	r19, r1
    272a:	19 f4       	brne	.+6      	; 0x2732 <__stack+0x533>
    272c:	60 92 85 04 	sts	0x0485, r6
    2730:	d7 cf       	rjmp	.-82     	; 0x26e0 <__stack+0x4e1>
    2732:	23 30       	cpi	r18, 0x03	; 3
    2734:	31 05       	cpc	r19, r1
    2736:	19 f4       	brne	.+6      	; 0x273e <__stack+0x53f>
    2738:	70 92 85 04 	sts	0x0485, r7
    273c:	03 c0       	rjmp	.+6      	; 0x2744 <__stack+0x545>
    273e:	84 30       	cpi	r24, 0x04	; 4
    2740:	91 05       	cpc	r25, r1
    2742:	74 f2       	brlt	.-100    	; 0x26e0 <__stack+0x4e1>
    2744:	80 91 86 04 	lds	r24, 0x0486
    2748:	8e 36       	cpi	r24, 0x6E	; 110
    274a:	09 f0       	breq	.+2      	; 0x274e <__stack+0x54f>
    274c:	57 c0       	rjmp	.+174    	; 0x27fc <__stack+0x5fd>
    274e:	90 91 85 04 	lds	r25, 0x0485
    2752:	9e 36       	cpi	r25, 0x6E	; 110
    2754:	91 f4       	brne	.+36     	; 0x277a <__stack+0x57b>
    2756:	6c 2d       	mov	r22, r12
    2758:	7d 2d       	mov	r23, r13
    275a:	8b 2d       	mov	r24, r11
    275c:	9a 2d       	mov	r25, r10
    275e:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    2762:	80 91 85 04 	lds	r24, 0x0485
    2766:	80 93 86 04 	sts	0x0486, r24
    276a:	86 ec       	ldi	r24, 0xC6	; 198
    276c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2770:	80 91 86 04 	lds	r24, 0x0486
    2774:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2778:	4d c1       	rjmp	.+666    	; 0x2a14 <__stack+0x815>
    277a:	95 36       	cpi	r25, 0x65	; 101
    277c:	99 f4       	brne	.+38     	; 0x27a4 <__stack+0x5a5>
    277e:	f1 d9       	rcall	.-3102   	; 0x1b62 <right_turn_wls>
    2780:	6c 2d       	mov	r22, r12
    2782:	7d 2d       	mov	r23, r13
    2784:	8b 2d       	mov	r24, r11
    2786:	9a 2d       	mov	r25, r10
    2788:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    278c:	80 91 85 04 	lds	r24, 0x0485
    2790:	80 93 86 04 	sts	0x0486, r24
    2794:	86 ec       	ldi	r24, 0xC6	; 198
    2796:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    279a:	80 91 86 04 	lds	r24, 0x0486
    279e:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    27a2:	38 c1       	rjmp	.+624    	; 0x2a14 <__stack+0x815>
    27a4:	93 37       	cpi	r25, 0x73	; 115
    27a6:	a1 f4       	brne	.+40     	; 0x27d0 <__stack+0x5d1>
    27a8:	dc d9       	rcall	.-3144   	; 0x1b62 <right_turn_wls>
    27aa:	db d9       	rcall	.-3146   	; 0x1b62 <right_turn_wls>
    27ac:	6c 2d       	mov	r22, r12
    27ae:	7d 2d       	mov	r23, r13
    27b0:	8b 2d       	mov	r24, r11
    27b2:	9a 2d       	mov	r25, r10
    27b4:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    27b8:	80 91 85 04 	lds	r24, 0x0485
    27bc:	80 93 86 04 	sts	0x0486, r24
    27c0:	86 ec       	ldi	r24, 0xC6	; 198
    27c2:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    27c6:	80 91 86 04 	lds	r24, 0x0486
    27ca:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    27ce:	22 c1       	rjmp	.+580    	; 0x2a14 <__stack+0x815>
    27d0:	97 37       	cpi	r25, 0x77	; 119
    27d2:	09 f0       	breq	.+2      	; 0x27d6 <__stack+0x5d7>
    27d4:	c7 c0       	rjmp	.+398    	; 0x2964 <__stack+0x765>
    27d6:	4a da       	rcall	.-2924   	; 0x1c6c <left_turn_wls>
    27d8:	6c 2d       	mov	r22, r12
    27da:	7d 2d       	mov	r23, r13
    27dc:	8b 2d       	mov	r24, r11
    27de:	9a 2d       	mov	r25, r10
    27e0:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    27e4:	80 91 85 04 	lds	r24, 0x0485
    27e8:	80 93 86 04 	sts	0x0486, r24
    27ec:	86 ec       	ldi	r24, 0xC6	; 198
    27ee:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    27f2:	80 91 86 04 	lds	r24, 0x0486
    27f6:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    27fa:	0c c1       	rjmp	.+536    	; 0x2a14 <__stack+0x815>
    27fc:	85 36       	cpi	r24, 0x65	; 101
    27fe:	09 f0       	breq	.+2      	; 0x2802 <__stack+0x603>
    2800:	57 c0       	rjmp	.+174    	; 0x28b0 <__stack+0x6b1>
    2802:	80 91 85 04 	lds	r24, 0x0485
    2806:	85 36       	cpi	r24, 0x65	; 101
    2808:	91 f4       	brne	.+36     	; 0x282e <__stack+0x62f>
    280a:	6c 2d       	mov	r22, r12
    280c:	7d 2d       	mov	r23, r13
    280e:	8b 2d       	mov	r24, r11
    2810:	9a 2d       	mov	r25, r10
    2812:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    2816:	80 91 85 04 	lds	r24, 0x0485
    281a:	80 93 86 04 	sts	0x0486, r24
    281e:	86 ec       	ldi	r24, 0xC6	; 198
    2820:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2824:	80 91 86 04 	lds	r24, 0x0486
    2828:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    282c:	f3 c0       	rjmp	.+486    	; 0x2a14 <__stack+0x815>
    282e:	83 37       	cpi	r24, 0x73	; 115
    2830:	99 f4       	brne	.+38     	; 0x2858 <__stack+0x659>
    2832:	97 d9       	rcall	.-3282   	; 0x1b62 <right_turn_wls>
    2834:	6c 2d       	mov	r22, r12
    2836:	7d 2d       	mov	r23, r13
    2838:	8b 2d       	mov	r24, r11
    283a:	9a 2d       	mov	r25, r10
    283c:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    2840:	80 91 85 04 	lds	r24, 0x0485
    2844:	80 93 86 04 	sts	0x0486, r24
    2848:	86 ec       	ldi	r24, 0xC6	; 198
    284a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    284e:	80 91 86 04 	lds	r24, 0x0486
    2852:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2856:	de c0       	rjmp	.+444    	; 0x2a14 <__stack+0x815>
    2858:	87 37       	cpi	r24, 0x77	; 119
    285a:	a1 f4       	brne	.+40     	; 0x2884 <__stack+0x685>
    285c:	82 d9       	rcall	.-3324   	; 0x1b62 <right_turn_wls>
    285e:	81 d9       	rcall	.-3326   	; 0x1b62 <right_turn_wls>
    2860:	6c 2d       	mov	r22, r12
    2862:	7d 2d       	mov	r23, r13
    2864:	8b 2d       	mov	r24, r11
    2866:	9a 2d       	mov	r25, r10
    2868:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    286c:	80 91 85 04 	lds	r24, 0x0485
    2870:	80 93 86 04 	sts	0x0486, r24
    2874:	86 ec       	ldi	r24, 0xC6	; 198
    2876:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    287a:	80 91 86 04 	lds	r24, 0x0486
    287e:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2882:	c8 c0       	rjmp	.+400    	; 0x2a14 <__stack+0x815>
    2884:	8e 36       	cpi	r24, 0x6E	; 110
    2886:	09 f0       	breq	.+2      	; 0x288a <__stack+0x68b>
    2888:	c5 c0       	rjmp	.+394    	; 0x2a14 <__stack+0x815>
    288a:	f0 d9       	rcall	.-3104   	; 0x1c6c <left_turn_wls>
    288c:	6c 2d       	mov	r22, r12
    288e:	7d 2d       	mov	r23, r13
    2890:	8b 2d       	mov	r24, r11
    2892:	9a 2d       	mov	r25, r10
    2894:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    2898:	80 91 85 04 	lds	r24, 0x0485
    289c:	80 93 86 04 	sts	0x0486, r24
    28a0:	86 ec       	ldi	r24, 0xC6	; 198
    28a2:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    28a6:	80 91 86 04 	lds	r24, 0x0486
    28aa:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    28ae:	b2 c0       	rjmp	.+356    	; 0x2a14 <__stack+0x815>
    28b0:	83 37       	cpi	r24, 0x73	; 115
    28b2:	09 f0       	breq	.+2      	; 0x28b6 <__stack+0x6b7>
    28b4:	57 c0       	rjmp	.+174    	; 0x2964 <__stack+0x765>
    28b6:	80 91 85 04 	lds	r24, 0x0485
    28ba:	83 37       	cpi	r24, 0x73	; 115
    28bc:	91 f4       	brne	.+36     	; 0x28e2 <__stack+0x6e3>
    28be:	6c 2d       	mov	r22, r12
    28c0:	7d 2d       	mov	r23, r13
    28c2:	8b 2d       	mov	r24, r11
    28c4:	9a 2d       	mov	r25, r10
    28c6:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    28ca:	80 91 85 04 	lds	r24, 0x0485
    28ce:	80 93 86 04 	sts	0x0486, r24
    28d2:	86 ec       	ldi	r24, 0xC6	; 198
    28d4:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    28d8:	80 91 86 04 	lds	r24, 0x0486
    28dc:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    28e0:	99 c0       	rjmp	.+306    	; 0x2a14 <__stack+0x815>
    28e2:	87 37       	cpi	r24, 0x77	; 119
    28e4:	99 f4       	brne	.+38     	; 0x290c <__stack+0x70d>
    28e6:	3d d9       	rcall	.-3462   	; 0x1b62 <right_turn_wls>
    28e8:	6c 2d       	mov	r22, r12
    28ea:	7d 2d       	mov	r23, r13
    28ec:	8b 2d       	mov	r24, r11
    28ee:	9a 2d       	mov	r25, r10
    28f0:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    28f4:	80 91 85 04 	lds	r24, 0x0485
    28f8:	80 93 86 04 	sts	0x0486, r24
    28fc:	86 ec       	ldi	r24, 0xC6	; 198
    28fe:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2902:	80 91 86 04 	lds	r24, 0x0486
    2906:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    290a:	84 c0       	rjmp	.+264    	; 0x2a14 <__stack+0x815>
    290c:	8e 36       	cpi	r24, 0x6E	; 110
    290e:	a1 f4       	brne	.+40     	; 0x2938 <__stack+0x739>
    2910:	28 d9       	rcall	.-3504   	; 0x1b62 <right_turn_wls>
    2912:	27 d9       	rcall	.-3506   	; 0x1b62 <right_turn_wls>
    2914:	6c 2d       	mov	r22, r12
    2916:	7d 2d       	mov	r23, r13
    2918:	8b 2d       	mov	r24, r11
    291a:	9a 2d       	mov	r25, r10
    291c:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    2920:	80 91 85 04 	lds	r24, 0x0485
    2924:	80 93 86 04 	sts	0x0486, r24
    2928:	86 ec       	ldi	r24, 0xC6	; 198
    292a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    292e:	80 91 86 04 	lds	r24, 0x0486
    2932:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2936:	6e c0       	rjmp	.+220    	; 0x2a14 <__stack+0x815>
    2938:	85 36       	cpi	r24, 0x65	; 101
    293a:	09 f0       	breq	.+2      	; 0x293e <__stack+0x73f>
    293c:	6b c0       	rjmp	.+214    	; 0x2a14 <__stack+0x815>
    293e:	96 d9       	rcall	.-3284   	; 0x1c6c <left_turn_wls>
    2940:	6c 2d       	mov	r22, r12
    2942:	7d 2d       	mov	r23, r13
    2944:	8b 2d       	mov	r24, r11
    2946:	9a 2d       	mov	r25, r10
    2948:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    294c:	80 91 85 04 	lds	r24, 0x0485
    2950:	80 93 86 04 	sts	0x0486, r24
    2954:	86 ec       	ldi	r24, 0xC6	; 198
    2956:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    295a:	80 91 86 04 	lds	r24, 0x0486
    295e:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2962:	58 c0       	rjmp	.+176    	; 0x2a14 <__stack+0x815>
    2964:	87 37       	cpi	r24, 0x77	; 119
    2966:	09 f0       	breq	.+2      	; 0x296a <__stack+0x76b>
    2968:	55 c0       	rjmp	.+170    	; 0x2a14 <__stack+0x815>
    296a:	80 91 85 04 	lds	r24, 0x0485
    296e:	87 37       	cpi	r24, 0x77	; 119
    2970:	91 f4       	brne	.+36     	; 0x2996 <__stack+0x797>
    2972:	6c 2d       	mov	r22, r12
    2974:	7d 2d       	mov	r23, r13
    2976:	8b 2d       	mov	r24, r11
    2978:	9a 2d       	mov	r25, r10
    297a:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    297e:	80 91 85 04 	lds	r24, 0x0485
    2982:	80 93 86 04 	sts	0x0486, r24
    2986:	86 ec       	ldi	r24, 0xC6	; 198
    2988:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    298c:	80 91 86 04 	lds	r24, 0x0486
    2990:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2994:	3f c0       	rjmp	.+126    	; 0x2a14 <__stack+0x815>
    2996:	8e 36       	cpi	r24, 0x6E	; 110
    2998:	99 f4       	brne	.+38     	; 0x29c0 <__stack+0x7c1>
    299a:	e3 d8       	rcall	.-3642   	; 0x1b62 <right_turn_wls>
    299c:	6c 2d       	mov	r22, r12
    299e:	7d 2d       	mov	r23, r13
    29a0:	8b 2d       	mov	r24, r11
    29a2:	9a 2d       	mov	r25, r10
    29a4:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    29a8:	80 91 85 04 	lds	r24, 0x0485
    29ac:	80 93 86 04 	sts	0x0486, r24
    29b0:	86 ec       	ldi	r24, 0xC6	; 198
    29b2:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    29b6:	80 91 86 04 	lds	r24, 0x0486
    29ba:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    29be:	2a c0       	rjmp	.+84     	; 0x2a14 <__stack+0x815>
    29c0:	85 36       	cpi	r24, 0x65	; 101
    29c2:	a1 f4       	brne	.+40     	; 0x29ec <__stack+0x7ed>
    29c4:	ce d8       	rcall	.-3684   	; 0x1b62 <right_turn_wls>
    29c6:	cd d8       	rcall	.-3686   	; 0x1b62 <right_turn_wls>
    29c8:	6c 2d       	mov	r22, r12
    29ca:	7d 2d       	mov	r23, r13
    29cc:	8b 2d       	mov	r24, r11
    29ce:	9a 2d       	mov	r25, r10
    29d0:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    29d4:	80 91 85 04 	lds	r24, 0x0485
    29d8:	80 93 86 04 	sts	0x0486, r24
    29dc:	86 ec       	ldi	r24, 0xC6	; 198
    29de:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    29e2:	80 91 86 04 	lds	r24, 0x0486
    29e6:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    29ea:	14 c0       	rjmp	.+40     	; 0x2a14 <__stack+0x815>
    29ec:	83 37       	cpi	r24, 0x73	; 115
    29ee:	91 f4       	brne	.+36     	; 0x2a14 <__stack+0x815>
    29f0:	3d d9       	rcall	.-3462   	; 0x1c6c <left_turn_wls>
    29f2:	6c 2d       	mov	r22, r12
    29f4:	7d 2d       	mov	r23, r13
    29f6:	8b 2d       	mov	r24, r11
    29f8:	9a 2d       	mov	r25, r10
    29fa:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    29fe:	80 91 85 04 	lds	r24, 0x0485
    2a02:	80 93 86 04 	sts	0x0486, r24
    2a06:	86 ec       	ldi	r24, 0xC6	; 198
    2a08:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2a0c:	80 91 86 04 	lds	r24, 0x0486
    2a10:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2a14:	ef ef       	ldi	r30, 0xFF	; 255
    2a16:	ee 1a       	sub	r14, r30
    2a18:	fe 0a       	sbc	r15, r30
    2a1a:	f2 e0       	ldi	r31, 0x02	; 2
    2a1c:	2f 0e       	add	r2, r31
    2a1e:	31 1c       	adc	r3, r1
    2a20:	e0 16       	cp	r14, r16
    2a22:	f1 06       	cpc	r15, r17
    2a24:	09 f0       	breq	.+2      	; 0x2a28 <__stack+0x829>
    2a26:	80 c9       	rjmp	.-3328   	; 0x1d28 <traverse+0x6c>
    2a28:	df 91       	pop	r29
    2a2a:	cf 91       	pop	r28
    2a2c:	1f 91       	pop	r17
    2a2e:	0f 91       	pop	r16
    2a30:	ff 90       	pop	r15
    2a32:	ef 90       	pop	r14
    2a34:	df 90       	pop	r13
    2a36:	cf 90       	pop	r12
    2a38:	bf 90       	pop	r11
    2a3a:	af 90       	pop	r10
    2a3c:	9f 90       	pop	r9
    2a3e:	8f 90       	pop	r8
    2a40:	7f 90       	pop	r7
    2a42:	6f 90       	pop	r6
    2a44:	5f 90       	pop	r5
    2a46:	4f 90       	pop	r4
    2a48:	3f 90       	pop	r3
    2a4a:	2f 90       	pop	r2
    2a4c:	08 95       	ret

00002a4e <block_traverse>:
    2a4e:	80 91 86 04 	lds	r24, 0x0486
    2a52:	8e 36       	cpi	r24, 0x6E	; 110
    2a54:	a1 f5       	brne	.+104    	; 0x2abe <block_traverse+0x70>
    2a56:	90 91 85 04 	lds	r25, 0x0485
    2a5a:	9e 36       	cpi	r25, 0x6E	; 110
    2a5c:	41 f4       	brne	.+16     	; 0x2a6e <block_traverse+0x20>
    2a5e:	86 ec       	ldi	r24, 0xC6	; 198
    2a60:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2a64:	80 91 86 04 	lds	r24, 0x0486
    2a68:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2a6c:	e2 c0       	rjmp	.+452    	; 0x2c32 <block_traverse+0x1e4>
    2a6e:	95 36       	cpi	r25, 0x65	; 101
    2a70:	69 f4       	brne	.+26     	; 0x2a8c <block_traverse+0x3e>
    2a72:	77 d8       	rcall	.-3858   	; 0x1b62 <right_turn_wls>
    2a74:	80 91 85 04 	lds	r24, 0x0485
    2a78:	80 93 86 04 	sts	0x0486, r24
    2a7c:	86 ec       	ldi	r24, 0xC6	; 198
    2a7e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2a82:	80 91 86 04 	lds	r24, 0x0486
    2a86:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2a8a:	d3 c0       	rjmp	.+422    	; 0x2c32 <block_traverse+0x1e4>
    2a8c:	93 37       	cpi	r25, 0x73	; 115
    2a8e:	39 f4       	brne	.+14     	; 0x2a9e <block_traverse+0x50>
    2a90:	68 d8       	rcall	.-3888   	; 0x1b62 <right_turn_wls>
    2a92:	c4 d8       	rcall	.-3704   	; 0x1c1c <right_turn_wls_bwall>
    2a94:	80 91 85 04 	lds	r24, 0x0485
    2a98:	80 93 86 04 	sts	0x0486, r24
    2a9c:	ca c0       	rjmp	.+404    	; 0x2c32 <block_traverse+0x1e4>
    2a9e:	97 37       	cpi	r25, 0x77	; 119
    2aa0:	09 f0       	breq	.+2      	; 0x2aa4 <block_traverse+0x56>
    2aa2:	8a c0       	rjmp	.+276    	; 0x2bb8 <block_traverse+0x16a>
    2aa4:	e3 d8       	rcall	.-3642   	; 0x1c6c <left_turn_wls>
    2aa6:	80 91 85 04 	lds	r24, 0x0485
    2aaa:	80 93 86 04 	sts	0x0486, r24
    2aae:	86 ec       	ldi	r24, 0xC6	; 198
    2ab0:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2ab4:	80 91 86 04 	lds	r24, 0x0486
    2ab8:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2abc:	ba c0       	rjmp	.+372    	; 0x2c32 <block_traverse+0x1e4>
    2abe:	85 36       	cpi	r24, 0x65	; 101
    2ac0:	09 f0       	breq	.+2      	; 0x2ac4 <block_traverse+0x76>
    2ac2:	3b c0       	rjmp	.+118    	; 0x2b3a <block_traverse+0xec>
    2ac4:	80 91 85 04 	lds	r24, 0x0485
    2ac8:	85 36       	cpi	r24, 0x65	; 101
    2aca:	41 f4       	brne	.+16     	; 0x2adc <block_traverse+0x8e>
    2acc:	86 ec       	ldi	r24, 0xC6	; 198
    2ace:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2ad2:	80 91 86 04 	lds	r24, 0x0486
    2ad6:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2ada:	ab c0       	rjmp	.+342    	; 0x2c32 <block_traverse+0x1e4>
    2adc:	83 37       	cpi	r24, 0x73	; 115
    2ade:	69 f4       	brne	.+26     	; 0x2afa <block_traverse+0xac>
    2ae0:	40 d8       	rcall	.-3968   	; 0x1b62 <right_turn_wls>
    2ae2:	80 91 85 04 	lds	r24, 0x0485
    2ae6:	80 93 86 04 	sts	0x0486, r24
    2aea:	86 ec       	ldi	r24, 0xC6	; 198
    2aec:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2af0:	80 91 86 04 	lds	r24, 0x0486
    2af4:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2af8:	9c c0       	rjmp	.+312    	; 0x2c32 <block_traverse+0x1e4>
    2afa:	87 37       	cpi	r24, 0x77	; 119
    2afc:	71 f4       	brne	.+28     	; 0x2b1a <block_traverse+0xcc>
    2afe:	31 d8       	rcall	.-3998   	; 0x1b62 <right_turn_wls>
    2b00:	8d d8       	rcall	.-3814   	; 0x1c1c <right_turn_wls_bwall>
    2b02:	80 91 85 04 	lds	r24, 0x0485
    2b06:	80 93 86 04 	sts	0x0486, r24
    2b0a:	86 ec       	ldi	r24, 0xC6	; 198
    2b0c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2b10:	80 91 86 04 	lds	r24, 0x0486
    2b14:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2b18:	8c c0       	rjmp	.+280    	; 0x2c32 <block_traverse+0x1e4>
    2b1a:	8e 36       	cpi	r24, 0x6E	; 110
    2b1c:	09 f0       	breq	.+2      	; 0x2b20 <block_traverse+0xd2>
    2b1e:	89 c0       	rjmp	.+274    	; 0x2c32 <block_traverse+0x1e4>
    2b20:	a5 d8       	rcall	.-3766   	; 0x1c6c <left_turn_wls>
    2b22:	80 91 85 04 	lds	r24, 0x0485
    2b26:	80 93 86 04 	sts	0x0486, r24
    2b2a:	86 ec       	ldi	r24, 0xC6	; 198
    2b2c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2b30:	80 91 86 04 	lds	r24, 0x0486
    2b34:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2b38:	7c c0       	rjmp	.+248    	; 0x2c32 <block_traverse+0x1e4>
    2b3a:	83 37       	cpi	r24, 0x73	; 115
    2b3c:	09 f0       	breq	.+2      	; 0x2b40 <block_traverse+0xf2>
    2b3e:	3c c0       	rjmp	.+120    	; 0x2bb8 <block_traverse+0x16a>
    2b40:	80 91 85 04 	lds	r24, 0x0485
    2b44:	83 37       	cpi	r24, 0x73	; 115
    2b46:	41 f4       	brne	.+16     	; 0x2b58 <block_traverse+0x10a>
    2b48:	86 ec       	ldi	r24, 0xC6	; 198
    2b4a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2b4e:	80 91 86 04 	lds	r24, 0x0486
    2b52:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2b56:	6d c0       	rjmp	.+218    	; 0x2c32 <block_traverse+0x1e4>
    2b58:	87 37       	cpi	r24, 0x77	; 119
    2b5a:	69 f4       	brne	.+26     	; 0x2b76 <block_traverse+0x128>
    2b5c:	02 d8       	rcall	.-4092   	; 0x1b62 <right_turn_wls>
    2b5e:	80 91 85 04 	lds	r24, 0x0485
    2b62:	80 93 86 04 	sts	0x0486, r24
    2b66:	86 ec       	ldi	r24, 0xC6	; 198
    2b68:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2b6c:	80 91 86 04 	lds	r24, 0x0486
    2b70:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2b74:	5e c0       	rjmp	.+188    	; 0x2c32 <block_traverse+0x1e4>
    2b76:	8e 36       	cpi	r24, 0x6E	; 110
    2b78:	79 f4       	brne	.+30     	; 0x2b98 <block_traverse+0x14a>
    2b7a:	0e 94 b1 0d 	call	0x1b62	; 0x1b62 <right_turn_wls>
    2b7e:	4e d8       	rcall	.-3940   	; 0x1c1c <right_turn_wls_bwall>
    2b80:	80 91 85 04 	lds	r24, 0x0485
    2b84:	80 93 86 04 	sts	0x0486, r24
    2b88:	86 ec       	ldi	r24, 0xC6	; 198
    2b8a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2b8e:	80 91 86 04 	lds	r24, 0x0486
    2b92:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2b96:	4d c0       	rjmp	.+154    	; 0x2c32 <block_traverse+0x1e4>
    2b98:	85 36       	cpi	r24, 0x65	; 101
    2b9a:	09 f0       	breq	.+2      	; 0x2b9e <block_traverse+0x150>
    2b9c:	4a c0       	rjmp	.+148    	; 0x2c32 <block_traverse+0x1e4>
    2b9e:	66 d8       	rcall	.-3892   	; 0x1c6c <left_turn_wls>
    2ba0:	80 91 85 04 	lds	r24, 0x0485
    2ba4:	80 93 86 04 	sts	0x0486, r24
    2ba8:	86 ec       	ldi	r24, 0xC6	; 198
    2baa:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2bae:	80 91 86 04 	lds	r24, 0x0486
    2bb2:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2bb6:	3d c0       	rjmp	.+122    	; 0x2c32 <block_traverse+0x1e4>
    2bb8:	87 37       	cpi	r24, 0x77	; 119
    2bba:	d9 f5       	brne	.+118    	; 0x2c32 <block_traverse+0x1e4>
    2bbc:	80 91 85 04 	lds	r24, 0x0485
    2bc0:	87 37       	cpi	r24, 0x77	; 119
    2bc2:	41 f4       	brne	.+16     	; 0x2bd4 <block_traverse+0x186>
    2bc4:	86 ec       	ldi	r24, 0xC6	; 198
    2bc6:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2bca:	80 91 86 04 	lds	r24, 0x0486
    2bce:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2bd2:	2f c0       	rjmp	.+94     	; 0x2c32 <block_traverse+0x1e4>
    2bd4:	8e 36       	cpi	r24, 0x6E	; 110
    2bd6:	71 f4       	brne	.+28     	; 0x2bf4 <block_traverse+0x1a6>
    2bd8:	0e 94 b1 0d 	call	0x1b62	; 0x1b62 <right_turn_wls>
    2bdc:	80 91 85 04 	lds	r24, 0x0485
    2be0:	80 93 86 04 	sts	0x0486, r24
    2be4:	86 ec       	ldi	r24, 0xC6	; 198
    2be6:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2bea:	80 91 86 04 	lds	r24, 0x0486
    2bee:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2bf2:	1f c0       	rjmp	.+62     	; 0x2c32 <block_traverse+0x1e4>
    2bf4:	85 36       	cpi	r24, 0x65	; 101
    2bf6:	79 f4       	brne	.+30     	; 0x2c16 <block_traverse+0x1c8>
    2bf8:	0e 94 b1 0d 	call	0x1b62	; 0x1b62 <right_turn_wls>
    2bfc:	0f d8       	rcall	.-4066   	; 0x1c1c <right_turn_wls_bwall>
    2bfe:	80 91 85 04 	lds	r24, 0x0485
    2c02:	80 93 86 04 	sts	0x0486, r24
    2c06:	86 ec       	ldi	r24, 0xC6	; 198
    2c08:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2c0c:	80 91 86 04 	lds	r24, 0x0486
    2c10:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2c14:	0e c0       	rjmp	.+28     	; 0x2c32 <block_traverse+0x1e4>
    2c16:	83 37       	cpi	r24, 0x73	; 115
    2c18:	61 f4       	brne	.+24     	; 0x2c32 <block_traverse+0x1e4>
    2c1a:	28 d8       	rcall	.-4016   	; 0x1c6c <left_turn_wls>
    2c1c:	80 91 85 04 	lds	r24, 0x0485
    2c20:	80 93 86 04 	sts	0x0486, r24
    2c24:	86 ec       	ldi	r24, 0xC6	; 198
    2c26:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
    2c2a:	80 91 86 04 	lds	r24, 0x0486
    2c2e:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    2c32:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    2c36:	2f ef       	ldi	r18, 0xFF	; 255
    2c38:	8f e3       	ldi	r24, 0x3F	; 63
    2c3a:	92 e0       	ldi	r25, 0x02	; 2
    2c3c:	21 50       	subi	r18, 0x01	; 1
    2c3e:	80 40       	sbci	r24, 0x00	; 0
    2c40:	90 40       	sbci	r25, 0x00	; 0
    2c42:	e1 f7       	brne	.-8      	; 0x2c3c <block_traverse+0x1ee>
    2c44:	00 c0       	rjmp	.+0      	; 0x2c46 <block_traverse+0x1f8>
    2c46:	00 00       	nop
    2c48:	08 95       	ret

00002c4a <block_choose2>:
    2c4a:	0f 93       	push	r16
    2c4c:	1f 93       	push	r17
    2c4e:	cf 93       	push	r28
    2c50:	df 93       	push	r29
    2c52:	ec 01       	movw	r28, r24
    2c54:	8b 01       	movw	r16, r22
    2c56:	80 fd       	sbrc	r24, 0
    2c58:	3f c0       	rjmp	.+126    	; 0x2cd8 <block_choose2+0x8e>
    2c5a:	85 e6       	ldi	r24, 0x65	; 101
    2c5c:	80 93 85 04 	sts	0x0485, r24
    2c60:	f6 de       	rcall	.-532    	; 0x2a4e <block_traverse>
    2c62:	c1 50       	subi	r28, 0x01	; 1
    2c64:	d0 48       	sbci	r29, 0x80	; 128
    2c66:	cc 0f       	add	r28, r28
    2c68:	dd 1f       	adc	r29, r29
    2c6a:	f8 01       	movw	r30, r16
    2c6c:	ec 0f       	add	r30, r28
    2c6e:	fd 1f       	adc	r31, r29
    2c70:	81 e0       	ldi	r24, 0x01	; 1
    2c72:	90 e0       	ldi	r25, 0x00	; 0
    2c74:	91 83       	std	Z+1, r25	; 0x01
    2c76:	80 83       	st	Z, r24
    2c78:	80 91 42 04 	lds	r24, 0x0442
    2c7c:	80 93 28 01 	sts	0x0128, r24
    2c80:	80 93 2a 01 	sts	0x012A, r24
    2c84:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    2c88:	8f ef       	ldi	r24, 0xFF	; 255
    2c8a:	9f e7       	ldi	r25, 0x7F	; 127
    2c8c:	24 e0       	ldi	r18, 0x04	; 4
    2c8e:	81 50       	subi	r24, 0x01	; 1
    2c90:	90 40       	sbci	r25, 0x00	; 0
    2c92:	20 40       	sbci	r18, 0x00	; 0
    2c94:	e1 f7       	brne	.-8      	; 0x2c8e <block_choose2+0x44>
    2c96:	00 c0       	rjmp	.+0      	; 0x2c98 <block_choose2+0x4e>
    2c98:	00 00       	nop
    2c9a:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    2c9e:	8f ef       	ldi	r24, 0xFF	; 255
    2ca0:	9f ef       	ldi	r25, 0xFF	; 255
    2ca2:	28 e0       	ldi	r18, 0x08	; 8
    2ca4:	81 50       	subi	r24, 0x01	; 1
    2ca6:	90 40       	sbci	r25, 0x00	; 0
    2ca8:	20 40       	sbci	r18, 0x00	; 0
    2caa:	e1 f7       	brne	.-8      	; 0x2ca4 <block_choose2+0x5a>
    2cac:	00 c0       	rjmp	.+0      	; 0x2cae <block_choose2+0x64>
    2cae:	00 00       	nop
    2cb0:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    2cb4:	8f ef       	ldi	r24, 0xFF	; 255
    2cb6:	9f e7       	ldi	r25, 0x7F	; 127
    2cb8:	24 e0       	ldi	r18, 0x04	; 4
    2cba:	81 50       	subi	r24, 0x01	; 1
    2cbc:	90 40       	sbci	r25, 0x00	; 0
    2cbe:	20 40       	sbci	r18, 0x00	; 0
    2cc0:	e1 f7       	brne	.-8      	; 0x2cba <block_choose2+0x70>
    2cc2:	00 c0       	rjmp	.+0      	; 0x2cc4 <block_choose2+0x7a>
    2cc4:	00 00       	nop
    2cc6:	0e 94 49 06 	call	0xc92	; 0xc92 <object_detect>
    2cca:	80 91 42 04 	lds	r24, 0x0442
    2cce:	80 93 28 01 	sts	0x0128, r24
    2cd2:	80 93 2a 01 	sts	0x012A, r24
    2cd6:	66 c0       	rjmp	.+204    	; 0x2da4 <block_choose2+0x15a>
    2cd8:	9c 01       	movw	r18, r24
    2cda:	21 70       	andi	r18, 0x01	; 1
    2cdc:	30 78       	andi	r19, 0x80	; 128
    2cde:	33 23       	and	r19, r19
    2ce0:	34 f4       	brge	.+12     	; 0x2cee <block_choose2+0xa4>
    2ce2:	21 50       	subi	r18, 0x01	; 1
    2ce4:	31 09       	sbc	r19, r1
    2ce6:	2e 6f       	ori	r18, 0xFE	; 254
    2ce8:	3f 6f       	ori	r19, 0xFF	; 255
    2cea:	2f 5f       	subi	r18, 0xFF	; 255
    2cec:	3f 4f       	sbci	r19, 0xFF	; 255
    2cee:	21 30       	cpi	r18, 0x01	; 1
    2cf0:	31 05       	cpc	r19, r1
    2cf2:	09 f0       	breq	.+2      	; 0x2cf6 <block_choose2+0xac>
    2cf4:	57 c0       	rjmp	.+174    	; 0x2da4 <block_choose2+0x15a>
    2cf6:	87 e7       	ldi	r24, 0x77	; 119
    2cf8:	80 93 85 04 	sts	0x0485, r24
    2cfc:	a8 de       	rcall	.-688    	; 0x2a4e <block_traverse>
    2cfe:	ce 01       	movw	r24, r28
    2d00:	81 50       	subi	r24, 0x01	; 1
    2d02:	90 48       	sbci	r25, 0x80	; 128
    2d04:	88 0f       	add	r24, r24
    2d06:	99 1f       	adc	r25, r25
    2d08:	f8 01       	movw	r30, r16
    2d0a:	e8 0f       	add	r30, r24
    2d0c:	f9 1f       	adc	r31, r25
    2d0e:	81 e0       	ldi	r24, 0x01	; 1
    2d10:	90 e0       	ldi	r25, 0x00	; 0
    2d12:	91 83       	std	Z+1, r25	; 0x01
    2d14:	80 83       	st	Z, r24
    2d16:	80 91 42 04 	lds	r24, 0x0442
    2d1a:	80 93 28 01 	sts	0x0128, r24
    2d1e:	80 93 2a 01 	sts	0x012A, r24
    2d22:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    2d26:	8f ef       	ldi	r24, 0xFF	; 255
    2d28:	9f e7       	ldi	r25, 0x7F	; 127
    2d2a:	24 e0       	ldi	r18, 0x04	; 4
    2d2c:	81 50       	subi	r24, 0x01	; 1
    2d2e:	90 40       	sbci	r25, 0x00	; 0
    2d30:	20 40       	sbci	r18, 0x00	; 0
    2d32:	e1 f7       	brne	.-8      	; 0x2d2c <block_choose2+0xe2>
    2d34:	00 c0       	rjmp	.+0      	; 0x2d36 <block_choose2+0xec>
    2d36:	00 00       	nop
    2d38:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    2d3c:	8f ef       	ldi	r24, 0xFF	; 255
    2d3e:	9f ef       	ldi	r25, 0xFF	; 255
    2d40:	28 e0       	ldi	r18, 0x08	; 8
    2d42:	81 50       	subi	r24, 0x01	; 1
    2d44:	90 40       	sbci	r25, 0x00	; 0
    2d46:	20 40       	sbci	r18, 0x00	; 0
    2d48:	e1 f7       	brne	.-8      	; 0x2d42 <block_choose2+0xf8>
    2d4a:	00 c0       	rjmp	.+0      	; 0x2d4c <block_choose2+0x102>
    2d4c:	00 00       	nop
    2d4e:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    2d52:	8f ef       	ldi	r24, 0xFF	; 255
    2d54:	9f e7       	ldi	r25, 0x7F	; 127
    2d56:	24 e0       	ldi	r18, 0x04	; 4
    2d58:	81 50       	subi	r24, 0x01	; 1
    2d5a:	90 40       	sbci	r25, 0x00	; 0
    2d5c:	20 40       	sbci	r18, 0x00	; 0
    2d5e:	e1 f7       	brne	.-8      	; 0x2d58 <block_choose2+0x10e>
    2d60:	00 c0       	rjmp	.+0      	; 0x2d62 <block_choose2+0x118>
    2d62:	00 00       	nop
    2d64:	21 97       	sbiw	r28, 0x01	; 1
    2d66:	b1 f4       	brne	.+44     	; 0x2d94 <block_choose2+0x14a>
    2d68:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    2d6c:	8f ef       	ldi	r24, 0xFF	; 255
    2d6e:	9f e3       	ldi	r25, 0x3F	; 63
    2d70:	22 e0       	ldi	r18, 0x02	; 2
    2d72:	81 50       	subi	r24, 0x01	; 1
    2d74:	90 40       	sbci	r25, 0x00	; 0
    2d76:	20 40       	sbci	r18, 0x00	; 0
    2d78:	e1 f7       	brne	.-8      	; 0x2d72 <block_choose2+0x128>
    2d7a:	00 c0       	rjmp	.+0      	; 0x2d7c <block_choose2+0x132>
    2d7c:	00 00       	nop
    2d7e:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    2d82:	8f ef       	ldi	r24, 0xFF	; 255
    2d84:	9f e7       	ldi	r25, 0x7F	; 127
    2d86:	24 e0       	ldi	r18, 0x04	; 4
    2d88:	81 50       	subi	r24, 0x01	; 1
    2d8a:	90 40       	sbci	r25, 0x00	; 0
    2d8c:	20 40       	sbci	r18, 0x00	; 0
    2d8e:	e1 f7       	brne	.-8      	; 0x2d88 <block_choose2+0x13e>
    2d90:	00 c0       	rjmp	.+0      	; 0x2d92 <block_choose2+0x148>
    2d92:	00 00       	nop
    2d94:	0e 94 49 06 	call	0xc92	; 0xc92 <object_detect>
    2d98:	80 91 42 04 	lds	r24, 0x0442
    2d9c:	80 93 28 01 	sts	0x0128, r24
    2da0:	80 93 2a 01 	sts	0x012A, r24
    2da4:	df 91       	pop	r29
    2da6:	cf 91       	pop	r28
    2da8:	1f 91       	pop	r17
    2daa:	0f 91       	pop	r16
    2dac:	08 95       	ret

00002dae <left_turn_inv>:
    2dae:	86 e9       	ldi	r24, 0x96	; 150
    2db0:	80 93 28 01 	sts	0x0128, r24
    2db4:	80 93 2a 01 	sts	0x012A, r24
    2db8:	0e 94 af 05 	call	0xb5e	; 0xb5e <left>
    2dbc:	2f ef       	ldi	r18, 0xFF	; 255
    2dbe:	8f ef       	ldi	r24, 0xFF	; 255
    2dc0:	98 e0       	ldi	r25, 0x08	; 8
    2dc2:	21 50       	subi	r18, 0x01	; 1
    2dc4:	80 40       	sbci	r24, 0x00	; 0
    2dc6:	90 40       	sbci	r25, 0x00	; 0
    2dc8:	e1 f7       	brne	.-8      	; 0x2dc2 <left_turn_inv+0x14>
    2dca:	00 c0       	rjmp	.+0      	; 0x2dcc <left_turn_inv+0x1e>
    2dcc:	00 00       	nop
    2dce:	8e e6       	ldi	r24, 0x6E	; 110
    2dd0:	80 93 28 01 	sts	0x0128, r24
    2dd4:	80 93 2a 01 	sts	0x012A, r24
    2dd8:	82 e0       	ldi	r24, 0x02	; 2
    2dda:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <ADC_Conversion>
    2dde:	80 93 23 05 	sts	0x0523, r24
    2de2:	81 e0       	ldi	r24, 0x01	; 1
    2de4:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <ADC_Conversion>
    2de8:	80 93 2e 05 	sts	0x052E, r24
    2dec:	83 e0       	ldi	r24, 0x03	; 3
    2dee:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <ADC_Conversion>
    2df2:	80 93 26 05 	sts	0x0526, r24
    2df6:	90 91 2e 05 	lds	r25, 0x052E
    2dfa:	20 91 23 05 	lds	r18, 0x0523
    2dfe:	30 e0       	ldi	r19, 0x00	; 0
    2e00:	29 0f       	add	r18, r25
    2e02:	31 1d       	adc	r19, r1
    2e04:	2b 3f       	cpi	r18, 0xFB	; 251
    2e06:	31 05       	cpc	r19, r1
    2e08:	3c f7       	brge	.-50     	; 0x2dd8 <left_turn_inv+0x2a>
    2e0a:	82 38       	cpi	r24, 0x82	; 130
    2e0c:	28 f3       	brcs	.-54     	; 0x2dd8 <left_turn_inv+0x2a>
    2e0e:	12 b8       	out	0x02, r1	; 2
    2e10:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    2e14:	0c 94 b3 0c 	jmp	0x1966	; 0x1966 <static_reorientation_inv>
    2e18:	08 95       	ret

00002e1a <adc_init>:
/* -------------------------------------------------------------INITIALIZATION--------------------------------------------------*/

//Function to Initialize ADC
void adc_init()
{
    ADCSRA = 0x00;
    2e1a:	ea e7       	ldi	r30, 0x7A	; 122
    2e1c:	f0 e0       	ldi	r31, 0x00	; 0
    2e1e:	10 82       	st	Z, r1
    ADCSRB = 0x00; //MUX5 = 0
    2e20:	10 92 7b 00 	sts	0x007B, r1
    ADMUX = 0x20; //Vref=5V external --- ADLAR=1 --- MUX4:0 = 0000
    2e24:	80 e2       	ldi	r24, 0x20	; 32
    2e26:	80 93 7c 00 	sts	0x007C, r24
    ACSR = 0x80;
    2e2a:	80 e8       	ldi	r24, 0x80	; 128
    2e2c:	80 bf       	out	0x30, r24	; 48
    ADCSRA = 0x86; //ADEN=1 --- ADIE=1 --- ADPS2:0 = 1 1 0
    2e2e:	86 e8       	ldi	r24, 0x86	; 134
    2e30:	80 83       	st	Z, r24
    2e32:	08 95       	ret

00002e34 <init_devices>:
}

void init_devices(void)
{
    cli(); //Clears the global interrupts
    2e34:	f8 94       	cli
    port_init();
    2e36:	0e 94 97 05 	call	0xb2e	; 0xb2e <port_init>
    adc_init();
    2e3a:	ef df       	rcall	.-34     	; 0x2e1a <adc_init>
    timer5_init();
    2e3c:	0e 94 4d 05 	call	0xa9a	; 0xa9a <timer5_init>
    timer1_init();
    2e40:	0e 94 2a 05 	call	0xa54	; 0xa54 <timer1_init>
    sei(); //Enables the global interrupts
    2e44:	78 94       	sei
    lcd_set_4bit(); //These functions need not to be inside interrupt blocked code
    2e46:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_set_4bit>
    lcd_init();
    2e4a:	0c 94 05 01 	jmp	0x20a	; 0x20a <lcd_init>
    2e4e:	08 95       	ret

00002e50 <main>:
}


/*--------------------------------------------------------------MAIN-----------------------------------------------------------*/
int main()
{
    2e50:	2f 92       	push	r2
    2e52:	3f 92       	push	r3
    2e54:	4f 92       	push	r4
    2e56:	5f 92       	push	r5
    2e58:	6f 92       	push	r6
    2e5a:	7f 92       	push	r7
    2e5c:	8f 92       	push	r8
    2e5e:	9f 92       	push	r9
    2e60:	af 92       	push	r10
    2e62:	bf 92       	push	r11
    2e64:	cf 92       	push	r12
    2e66:	df 92       	push	r13
    2e68:	ef 92       	push	r14
    2e6a:	ff 92       	push	r15
    2e6c:	0f 93       	push	r16
    2e6e:	1f 93       	push	r17
    2e70:	cf 93       	push	r28
    2e72:	df 93       	push	r29
    2e74:	1f 92       	push	r1
    2e76:	1f 92       	push	r1
    2e78:	cd b7       	in	r28, 0x3d	; 61
    2e7a:	de b7       	in	r29, 0x3e	; 62
    init_devices();
    2e7c:	db df       	rcall	.-74     	; 0x2e34 <init_devices>
    int is_block5 = 0;
    int is_block6 = 0;
    int house_no = 0;
    int block = 0;
    int bnode;
    int len = 0;
    2e7e:	1a 82       	std	Y+2, r1	; 0x02
    2e80:	19 82       	std	Y+1, r1	; 0x01
    int *path = (int*)malloc(80);
    2e82:	80 e5       	ldi	r24, 0x50	; 80
    2e84:	90 e0       	ldi	r25, 0x00	; 0
    2e86:	0e 94 e8 2a 	call	0x55d0	; 0x55d0 <malloc>
    2e8a:	7c 01       	movw	r14, r24
    u = 0;
    2e8c:	10 92 ff 04 	sts	0x04FF, r1
    2e90:	10 92 fe 04 	sts	0x04FE, r1
    face = 's';
    2e94:	83 e7       	ldi	r24, 0x73	; 115
    2e96:	80 93 86 04 	sts	0x0486, r24
    forward_wls(0,1);
    2e9a:	61 e0       	ldi	r22, 0x01	; 1
    2e9c:	70 e0       	ldi	r23, 0x00	; 0
    2e9e:	80 e0       	ldi	r24, 0x00	; 0
    2ea0:	90 e0       	ldi	r25, 0x00	; 0
    2ea2:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
    block = which_material[8];
    2ea6:	00 91 77 04 	lds	r16, 0x0477
    2eaa:	10 91 78 04 	lds	r17, 0x0478
    if (block==0)
    2eae:	01 15       	cp	r16, r1
    2eb0:	11 05       	cpc	r17, r1
    2eb2:	09 f0       	breq	.+2      	; 0x2eb6 <main+0x66>
    2eb4:	a7 c0       	rjmp	.+334    	; 0x3004 <main+0x1b4>
    {
        block = which_material[9];
    2eb6:	a0 90 79 04 	lds	r10, 0x0479
    2eba:	b0 90 7a 04 	lds	r11, 0x047A
        lcd_init();
    2ebe:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_init>
        //printf("Block - %d\n",block);
        //lcd_print(2,1,block,3);
        bnode = which_node(block);
    2ec2:	c5 01       	movw	r24, r10
    2ec4:	0e 94 a6 04 	call	0x94c	; 0x94c <which_node>
    2ec8:	6c 01       	movw	r12, r24
        //printf("Node - %d\n",bnode);
        //lcd_print(2,14,bnode,3);
        dijkstra(G,n,u);
    2eca:	40 91 fe 04 	lds	r20, 0x04FE
    2ece:	50 91 ff 04 	lds	r21, 0x04FF
    2ed2:	60 91 87 04 	lds	r22, 0x0487
    2ed6:	70 91 88 04 	lds	r23, 0x0488
    2eda:	8e e7       	ldi	r24, 0x7E	; 126
    2edc:	92 e0       	ldi	r25, 0x02	; 2
    2ede:	0e 94 94 02 	call	0x528	; 0x528 <dijkstra>
        //printf("Dijkstra Completed\n");
        dist_comp(bnode,bnode,path,&len);
    2ee2:	9e 01       	movw	r18, r28
    2ee4:	2f 5f       	subi	r18, 0xFF	; 255
    2ee6:	3f 4f       	sbci	r19, 0xFF	; 255
    2ee8:	a7 01       	movw	r20, r14
    2eea:	b6 01       	movw	r22, r12
    2eec:	c6 01       	movw	r24, r12
    2eee:	0e 94 15 04 	call	0x82a	; 0x82a <dist_comp>
        //printf("Dist compare Completed\n");
        for(int p = 0; p<len; p++)
    2ef2:	89 81       	ldd	r24, Y+1	; 0x01
    2ef4:	9a 81       	ldd	r25, Y+2	; 0x02
    2ef6:	18 16       	cp	r1, r24
    2ef8:	19 06       	cpc	r1, r25
    2efa:	3c f4       	brge	.+14     	; 0x2f0a <main+0xba>
    2efc:	20 e0       	ldi	r18, 0x00	; 0
    2efe:	30 e0       	ldi	r19, 0x00	; 0
    2f00:	2f 5f       	subi	r18, 0xFF	; 255
    2f02:	3f 4f       	sbci	r19, 0xFF	; 255
    2f04:	28 17       	cp	r18, r24
    2f06:	39 07       	cpc	r19, r25
    2f08:	d9 f7       	brne	.-10     	; 0x2f00 <main+0xb0>
        {
            //printf("%d\n",path[p]);
            //lcd_print(1,2*p,path[p],2);
        }
        traverse(path,u,&len);
    2f0a:	60 91 fe 04 	lds	r22, 0x04FE
    2f0e:	70 91 ff 04 	lds	r23, 0x04FF
    2f12:	ae 01       	movw	r20, r28
    2f14:	4f 5f       	subi	r20, 0xFF	; 255
    2f16:	5f 4f       	sbci	r21, 0xFF	; 255
    2f18:	c7 01       	movw	r24, r14
    2f1a:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <traverse>
        //printf("Traverse Completed\n");
        free(path);
    2f1e:	c7 01       	movw	r24, r14
    2f20:	0e 94 80 2b 	call	0x5700	; 0x5700 <free>
        len = 0;
    2f24:	1a 82       	std	Y+2, r1	; 0x02
    2f26:	19 82       	std	Y+1, r1	; 0x01
        block_choose2(block,block_placed);
    2f28:	66 ee       	ldi	r22, 0xE6	; 230
    2f2a:	74 e0       	ldi	r23, 0x04	; 4
    2f2c:	c5 01       	movw	r24, r10
    2f2e:	8d de       	rcall	.-742    	; 0x2c4a <block_choose2>
        //block_choose(bnode,block_placed);
        //printf("Block Choose Completed\n");
        s_pick();
    2f30:	0e 94 0c 07 	call	0xe18	; 0xe18 <s_pick>
        forward();
    2f34:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2f38:	2f ef       	ldi	r18, 0xFF	; 255
    2f3a:	8f eb       	ldi	r24, 0xBF	; 191
    2f3c:	96 e0       	ldi	r25, 0x06	; 6
    2f3e:	21 50       	subi	r18, 0x01	; 1
    2f40:	80 40       	sbci	r24, 0x00	; 0
    2f42:	90 40       	sbci	r25, 0x00	; 0
    2f44:	e1 f7       	brne	.-8      	; 0x2f3e <main+0xee>
    2f46:	00 c0       	rjmp	.+0      	; 0x2f48 <main+0xf8>
    2f48:	00 00       	nop
        _delay_ms(150);
        stop();
    2f4a:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        lcd_init();
    2f4e:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_init>
    2f52:	47 01       	movw	r8, r14
        for(int p = 0; p<=12; p++)
    2f54:	00 e0       	ldi	r16, 0x00	; 0
    2f56:	10 e0       	ldi	r17, 0x00	; 0
        {
            if (path[p] == 1)
    2f58:	f4 01       	movw	r30, r8
    2f5a:	81 91       	ld	r24, Z+
    2f5c:	91 91       	ld	r25, Z+
    2f5e:	4f 01       	movw	r8, r30
    2f60:	01 97       	sbiw	r24, 0x01	; 1
    2f62:	39 f4       	brne	.+14     	; 0x2f72 <main+0x122>
                lcd_print(1,1,p,2);
    2f64:	22 e0       	ldi	r18, 0x02	; 2
    2f66:	30 e0       	ldi	r19, 0x00	; 0
    2f68:	a8 01       	movw	r20, r16
    2f6a:	61 e0       	ldi	r22, 0x01	; 1
    2f6c:	81 e0       	ldi	r24, 0x01	; 1
    2f6e:	0e 94 4c 01 	call	0x298	; 0x298 <lcd_print>
        s_pick();
        forward();
        _delay_ms(150);
        stop();
        lcd_init();
        for(int p = 0; p<=12; p++)
    2f72:	0f 5f       	subi	r16, 0xFF	; 255
    2f74:	1f 4f       	sbci	r17, 0xFF	; 255
    2f76:	0d 30       	cpi	r16, 0x0D	; 13
    2f78:	11 05       	cpc	r17, r1
    2f7a:	71 f7       	brne	.-36     	; 0x2f58 <main+0x108>
        {
            if (path[p] == 1)
                lcd_print(1,1,p,2);
        }
        u=bnode;
    2f7c:	d0 92 ff 04 	sts	0x04FF, r13
    2f80:	c0 92 fe 04 	sts	0x04FE, r12

        dijkstra(G,n,u);
    2f84:	60 91 87 04 	lds	r22, 0x0487
    2f88:	70 91 88 04 	lds	r23, 0x0488
    2f8c:	a6 01       	movw	r20, r12
    2f8e:	8e e7       	ldi	r24, 0x7E	; 126
    2f90:	92 e0       	ldi	r25, 0x02	; 2
    2f92:	0e 94 94 02 	call	0x528	; 0x528 <dijkstra>
        //printf("Dijkstra Completed\n");
        dist_comp(h51,h52,path,&len);
    2f96:	60 91 43 04 	lds	r22, 0x0443
    2f9a:	70 91 44 04 	lds	r23, 0x0444
    2f9e:	9e 01       	movw	r18, r28
    2fa0:	2f 5f       	subi	r18, 0xFF	; 255
    2fa2:	3f 4f       	sbci	r19, 0xFF	; 255
    2fa4:	a7 01       	movw	r20, r14
    2fa6:	80 91 45 04 	lds	r24, 0x0445
    2faa:	90 91 46 04 	lds	r25, 0x0446
    2fae:	0e 94 15 04 	call	0x82a	; 0x82a <dist_comp>

        //printf("Dist compare Completed\n");
        for(int p = 0; p<len; p++)
    2fb2:	29 81       	ldd	r18, Y+1	; 0x01
    2fb4:	3a 81       	ldd	r19, Y+2	; 0x02
    2fb6:	12 16       	cp	r1, r18
    2fb8:	13 06       	cpc	r1, r19
    2fba:	34 f4       	brge	.+12     	; 0x2fc8 <main+0x178>
    2fbc:	80 e0       	ldi	r24, 0x00	; 0
    2fbe:	90 e0       	ldi	r25, 0x00	; 0
    2fc0:	01 96       	adiw	r24, 0x01	; 1
    2fc2:	82 17       	cp	r24, r18
    2fc4:	93 07       	cpc	r25, r19
    2fc6:	e1 f7       	brne	.-8      	; 0x2fc0 <main+0x170>
        {
            //printf("%d\n",path[p]);
            //lcd_print(1,2*p,path[p],2);
        }
        traverse(path,u,&len);
    2fc8:	60 91 fe 04 	lds	r22, 0x04FE
    2fcc:	70 91 ff 04 	lds	r23, 0x04FF
    2fd0:	ae 01       	movw	r20, r28
    2fd2:	4f 5f       	subi	r20, 0xFF	; 255
    2fd4:	5f 4f       	sbci	r21, 0xFF	; 255
    2fd6:	c7 01       	movw	r24, r14
    2fd8:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <traverse>
        //printf("Traverse Completed\n");
        u = path[len-1];
    2fdc:	e9 81       	ldd	r30, Y+1	; 0x01
    2fde:	fa 81       	ldd	r31, Y+2	; 0x02
    2fe0:	e1 50       	subi	r30, 0x01	; 1
    2fe2:	f0 48       	sbci	r31, 0x80	; 128
    2fe4:	ee 0f       	add	r30, r30
    2fe6:	ff 1f       	adc	r31, r31
    2fe8:	ee 0d       	add	r30, r14
    2fea:	ff 1d       	adc	r31, r15
    2fec:	80 81       	ld	r24, Z
    2fee:	91 81       	ldd	r25, Z+1	; 0x01
    2ff0:	90 93 ff 04 	sts	0x04FF, r25
    2ff4:	80 93 fe 04 	sts	0x04FE, r24
        free(path);
    2ff8:	c7 01       	movw	r24, r14
    2ffa:	0e 94 80 2b 	call	0x5700	; 0x5700 <free>
        len = 0;
    2ffe:	1a 82       	std	Y+2, r1	; 0x02
    3000:	19 82       	std	Y+1, r1	; 0x01
    3002:	f4 c0       	rjmp	.+488    	; 0x31ec <main+0x39c>
    }
    else
    {
        lcd_init();
    3004:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_init>
        //printf("Block - %d\n",block);
        //lcd_print(2,1,block,3);
        bnode = which_node(block);
    3008:	c8 01       	movw	r24, r16
    300a:	0e 94 a6 04 	call	0x94c	; 0x94c <which_node>
    300e:	6c 01       	movw	r12, r24
        //printf("Node - %d\n",bnode);
        //lcd_print(2,14,bnode,3);
        dijkstra(G,n,u);
    3010:	40 91 fe 04 	lds	r20, 0x04FE
    3014:	50 91 ff 04 	lds	r21, 0x04FF
    3018:	60 91 87 04 	lds	r22, 0x0487
    301c:	70 91 88 04 	lds	r23, 0x0488
    3020:	8e e7       	ldi	r24, 0x7E	; 126
    3022:	92 e0       	ldi	r25, 0x02	; 2
    3024:	0e 94 94 02 	call	0x528	; 0x528 <dijkstra>
        //printf("Dijkstra Completed\n");
        //int *path = (int*)malloc(80);
        dist_comp(bnode,bnode,path,&len);
    3028:	9e 01       	movw	r18, r28
    302a:	2f 5f       	subi	r18, 0xFF	; 255
    302c:	3f 4f       	sbci	r19, 0xFF	; 255
    302e:	a7 01       	movw	r20, r14
    3030:	b6 01       	movw	r22, r12
    3032:	c6 01       	movw	r24, r12
    3034:	0e 94 15 04 	call	0x82a	; 0x82a <dist_comp>
        //printf("Dist compare Completed\n");
        for(int p = 0; p<len; p++)
    3038:	49 81       	ldd	r20, Y+1	; 0x01
    303a:	5a 81       	ldd	r21, Y+2	; 0x02
    303c:	14 16       	cp	r1, r20
    303e:	15 06       	cpc	r1, r21
    3040:	3c f4       	brge	.+14     	; 0x3050 <main+0x200>
    3042:	20 e0       	ldi	r18, 0x00	; 0
    3044:	30 e0       	ldi	r19, 0x00	; 0
    3046:	2f 5f       	subi	r18, 0xFF	; 255
    3048:	3f 4f       	sbci	r19, 0xFF	; 255
    304a:	24 17       	cp	r18, r20
    304c:	35 07       	cpc	r19, r21
    304e:	d9 f7       	brne	.-10     	; 0x3046 <main+0x1f6>
        {
            //printf("%d\n",path[p]);
            //lcd_print(1,2*p,path[p],2);
        }
        traverse(path,u,&len);
    3050:	60 91 fe 04 	lds	r22, 0x04FE
    3054:	70 91 ff 04 	lds	r23, 0x04FF
    3058:	ae 01       	movw	r20, r28
    305a:	4f 5f       	subi	r20, 0xFF	; 255
    305c:	5f 4f       	sbci	r21, 0xFF	; 255
    305e:	c7 01       	movw	r24, r14
    3060:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <traverse>
        //printf("Traverse Completed\n");
        free(path);
    3064:	c7 01       	movw	r24, r14
    3066:	0e 94 80 2b 	call	0x5700	; 0x5700 <free>
        len = 0;
    306a:	1a 82       	std	Y+2, r1	; 0x02
    306c:	19 82       	std	Y+1, r1	; 0x01
        block_choose2(block,block_placed);
    306e:	66 ee       	ldi	r22, 0xE6	; 230
    3070:	74 e0       	ldi	r23, 0x04	; 4
    3072:	c8 01       	movw	r24, r16
    3074:	ea dd       	rcall	.-1068   	; 0x2c4a <block_choose2>
        //printf("Block Choose Completed\n");
        m_pick();
    3076:	0e 94 9e 06 	call	0xd3c	; 0xd3c <m_pick>
        forward();
    307a:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    307e:	ff ef       	ldi	r31, 0xFF	; 255
    3080:	2f eb       	ldi	r18, 0xBF	; 191
    3082:	86 e0       	ldi	r24, 0x06	; 6
    3084:	f1 50       	subi	r31, 0x01	; 1
    3086:	20 40       	sbci	r18, 0x00	; 0
    3088:	80 40       	sbci	r24, 0x00	; 0
    308a:	e1 f7       	brne	.-8      	; 0x3084 <main+0x234>
    308c:	00 c0       	rjmp	.+0      	; 0x308e <main+0x23e>
    308e:	00 00       	nop
        _delay_ms(150);
        stop();
    3090:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        lcd_init();
    3094:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_init>
        u=bnode;
    3098:	d0 92 ff 04 	sts	0x04FF, r13
    309c:	c0 92 fe 04 	sts	0x04FE, r12

        block = which_material[9];
    30a0:	a0 90 79 04 	lds	r10, 0x0479
    30a4:	b0 90 7a 04 	lds	r11, 0x047A
        lcd_init();
    30a8:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_init>
        //printf("Block - %d\n",block);
        //lcd_print(2,1,block,3);
        bnode = which_node(block);
    30ac:	c5 01       	movw	r24, r10
    30ae:	0e 94 a6 04 	call	0x94c	; 0x94c <which_node>
    30b2:	6c 01       	movw	r12, r24
        //printf("Node - %d\n",bnode);
        //lcd_print(2,14,bnode,3);
        dijkstra(G,n,u);
    30b4:	40 91 fe 04 	lds	r20, 0x04FE
    30b8:	50 91 ff 04 	lds	r21, 0x04FF
    30bc:	60 91 87 04 	lds	r22, 0x0487
    30c0:	70 91 88 04 	lds	r23, 0x0488
    30c4:	8e e7       	ldi	r24, 0x7E	; 126
    30c6:	92 e0       	ldi	r25, 0x02	; 2
    30c8:	0e 94 94 02 	call	0x528	; 0x528 <dijkstra>
        //printf("Dijkstra Completed\n");
        dist_comp(bnode,bnode,path,&len);
    30cc:	9e 01       	movw	r18, r28
    30ce:	2f 5f       	subi	r18, 0xFF	; 255
    30d0:	3f 4f       	sbci	r19, 0xFF	; 255
    30d2:	a7 01       	movw	r20, r14
    30d4:	b6 01       	movw	r22, r12
    30d6:	c6 01       	movw	r24, r12
    30d8:	0e 94 15 04 	call	0x82a	; 0x82a <dist_comp>
        //printf("Dist compare Completed\n");
        for(int p = 0; p<len; p++)
    30dc:	89 81       	ldd	r24, Y+1	; 0x01
    30de:	9a 81       	ldd	r25, Y+2	; 0x02
    30e0:	18 16       	cp	r1, r24
    30e2:	19 06       	cpc	r1, r25
    30e4:	3c f4       	brge	.+14     	; 0x30f4 <main+0x2a4>
    30e6:	20 e0       	ldi	r18, 0x00	; 0
    30e8:	30 e0       	ldi	r19, 0x00	; 0
    30ea:	2f 5f       	subi	r18, 0xFF	; 255
    30ec:	3f 4f       	sbci	r19, 0xFF	; 255
    30ee:	28 17       	cp	r18, r24
    30f0:	39 07       	cpc	r19, r25
    30f2:	d9 f7       	brne	.-10     	; 0x30ea <main+0x29a>
        {
            //printf("%d\n",path[p]);
            //lcd_print(1,2*p,path[p],2);
        }
        traverse(path,u,&len);
    30f4:	60 91 fe 04 	lds	r22, 0x04FE
    30f8:	70 91 ff 04 	lds	r23, 0x04FF
    30fc:	ae 01       	movw	r20, r28
    30fe:	4f 5f       	subi	r20, 0xFF	; 255
    3100:	5f 4f       	sbci	r21, 0xFF	; 255
    3102:	c7 01       	movw	r24, r14
    3104:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <traverse>
        //printf("Traverse Completed\n");
        free(path);
    3108:	c7 01       	movw	r24, r14
    310a:	0e 94 80 2b 	call	0x5700	; 0x5700 <free>
        len = 0;
    310e:	1a 82       	std	Y+2, r1	; 0x02
    3110:	19 82       	std	Y+1, r1	; 0x01
        block_choose2(block,block_placed);
    3112:	66 ee       	ldi	r22, 0xE6	; 230
    3114:	74 e0       	ldi	r23, 0x04	; 4
    3116:	c5 01       	movw	r24, r10
    3118:	98 dd       	rcall	.-1232   	; 0x2c4a <block_choose2>
        //printf("Block Choose Completed\n");
        s_pick();
    311a:	0e 94 0c 07 	call	0xe18	; 0xe18 <s_pick>
        forward();
    311e:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    3122:	9f ef       	ldi	r25, 0xFF	; 255
    3124:	ef eb       	ldi	r30, 0xBF	; 191
    3126:	f6 e0       	ldi	r31, 0x06	; 6
    3128:	91 50       	subi	r25, 0x01	; 1
    312a:	e0 40       	sbci	r30, 0x00	; 0
    312c:	f0 40       	sbci	r31, 0x00	; 0
    312e:	e1 f7       	brne	.-8      	; 0x3128 <main+0x2d8>
    3130:	00 c0       	rjmp	.+0      	; 0x3132 <main+0x2e2>
    3132:	00 00       	nop
        _delay_ms(150);
        stop();
    3134:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        lcd_init();
    3138:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_init>
    313c:	47 01       	movw	r8, r14
        for(int p = 0; p<=12; p++)
    313e:	00 e0       	ldi	r16, 0x00	; 0
    3140:	10 e0       	ldi	r17, 0x00	; 0
        {
            if (path[p] == 1)
    3142:	f4 01       	movw	r30, r8
    3144:	81 91       	ld	r24, Z+
    3146:	91 91       	ld	r25, Z+
    3148:	4f 01       	movw	r8, r30
    314a:	01 97       	sbiw	r24, 0x01	; 1
    314c:	39 f4       	brne	.+14     	; 0x315c <main+0x30c>
                lcd_print(1,1,p,2);
    314e:	22 e0       	ldi	r18, 0x02	; 2
    3150:	30 e0       	ldi	r19, 0x00	; 0
    3152:	a8 01       	movw	r20, r16
    3154:	61 e0       	ldi	r22, 0x01	; 1
    3156:	81 e0       	ldi	r24, 0x01	; 1
    3158:	0e 94 4c 01 	call	0x298	; 0x298 <lcd_print>
        s_pick();
        forward();
        _delay_ms(150);
        stop();
        lcd_init();
        for(int p = 0; p<=12; p++)
    315c:	0f 5f       	subi	r16, 0xFF	; 255
    315e:	1f 4f       	sbci	r17, 0xFF	; 255
    3160:	0d 30       	cpi	r16, 0x0D	; 13
    3162:	11 05       	cpc	r17, r1
    3164:	71 f7       	brne	.-36     	; 0x3142 <main+0x2f2>
        {
            if (path[p] == 1)
                lcd_print(1,1,p,2);
        }
        u=bnode;
    3166:	d0 92 ff 04 	sts	0x04FF, r13
    316a:	c0 92 fe 04 	sts	0x04FE, r12

        dijkstra(G,n,u);
    316e:	60 91 87 04 	lds	r22, 0x0487
    3172:	70 91 88 04 	lds	r23, 0x0488
    3176:	a6 01       	movw	r20, r12
    3178:	8e e7       	ldi	r24, 0x7E	; 126
    317a:	92 e0       	ldi	r25, 0x02	; 2
    317c:	0e 94 94 02 	call	0x528	; 0x528 <dijkstra>
        //printf("Dijkstra Completed\n");
        dist_comp(h51,h52,path,&len);
    3180:	60 91 43 04 	lds	r22, 0x0443
    3184:	70 91 44 04 	lds	r23, 0x0444
    3188:	9e 01       	movw	r18, r28
    318a:	2f 5f       	subi	r18, 0xFF	; 255
    318c:	3f 4f       	sbci	r19, 0xFF	; 255
    318e:	a7 01       	movw	r20, r14
    3190:	80 91 45 04 	lds	r24, 0x0445
    3194:	90 91 46 04 	lds	r25, 0x0446
    3198:	0e 94 15 04 	call	0x82a	; 0x82a <dist_comp>

        //printf("Dist compare Completed\n");
        for(int p = 0; p<len; p++)
    319c:	29 81       	ldd	r18, Y+1	; 0x01
    319e:	3a 81       	ldd	r19, Y+2	; 0x02
    31a0:	12 16       	cp	r1, r18
    31a2:	13 06       	cpc	r1, r19
    31a4:	34 f4       	brge	.+12     	; 0x31b2 <main+0x362>
    31a6:	80 e0       	ldi	r24, 0x00	; 0
    31a8:	90 e0       	ldi	r25, 0x00	; 0
    31aa:	01 96       	adiw	r24, 0x01	; 1
    31ac:	82 17       	cp	r24, r18
    31ae:	93 07       	cpc	r25, r19
    31b0:	e1 f7       	brne	.-8      	; 0x31aa <main+0x35a>
        {
            //printf("%d\n",path[p]);
            //lcd_print(1,2*p,path[p],2);
        }
        traverse(path,u,&len);
    31b2:	60 91 fe 04 	lds	r22, 0x04FE
    31b6:	70 91 ff 04 	lds	r23, 0x04FF
    31ba:	ae 01       	movw	r20, r28
    31bc:	4f 5f       	subi	r20, 0xFF	; 255
    31be:	5f 4f       	sbci	r21, 0xFF	; 255
    31c0:	c7 01       	movw	r24, r14
    31c2:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <traverse>
        //printf("Traverse Completed\n");
        u = path[len-1];
    31c6:	e9 81       	ldd	r30, Y+1	; 0x01
    31c8:	fa 81       	ldd	r31, Y+2	; 0x02
    31ca:	e1 50       	subi	r30, 0x01	; 1
    31cc:	f0 48       	sbci	r31, 0x80	; 128
    31ce:	ee 0f       	add	r30, r30
    31d0:	ff 1f       	adc	r31, r31
    31d2:	ee 0d       	add	r30, r14
    31d4:	ff 1d       	adc	r31, r15
    31d6:	80 81       	ld	r24, Z
    31d8:	91 81       	ldd	r25, Z+1	; 0x01
    31da:	90 93 ff 04 	sts	0x04FF, r25
    31de:	80 93 fe 04 	sts	0x04FE, r24
        free(path);
    31e2:	c7 01       	movw	r24, r14
    31e4:	0e 94 80 2b 	call	0x5700	; 0x5700 <free>
        len = 0;
    31e8:	1a 82       	std	Y+2, r1	; 0x02
    31ea:	19 82       	std	Y+1, r1	; 0x01
    }
    if (u==7)
    31ec:	80 91 fe 04 	lds	r24, 0x04FE
    31f0:	90 91 ff 04 	lds	r25, 0x04FF
    31f4:	87 30       	cpi	r24, 0x07	; 7
    31f6:	91 05       	cpc	r25, r1
    31f8:	09 f0       	breq	.+2      	; 0x31fc <main+0x3ac>
    31fa:	51 c0       	rjmp	.+162    	; 0x329e <main+0x44e>
    {
        inv = 0;
    31fc:	10 92 e3 04 	sts	0x04E3, r1
    3200:	10 92 e2 04 	sts	0x04E2, r1
        right_turn_inv();
    3204:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <right_turn_inv>
        forward_wls(3,1);
    3208:	61 e0       	ldi	r22, 0x01	; 1
    320a:	70 e0       	ldi	r23, 0x00	; 0
    320c:	83 e0       	ldi	r24, 0x03	; 3
    320e:	90 e0       	ldi	r25, 0x00	; 0
    3210:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
        face = 'e';
    3214:	85 e6       	ldi	r24, 0x65	; 101
    3216:	80 93 86 04 	sts	0x0486, r24
        u = 8;
    321a:	88 e0       	ldi	r24, 0x08	; 8
    321c:	90 e0       	ldi	r25, 0x00	; 0
    321e:	90 93 ff 04 	sts	0x04FF, r25
    3222:	80 93 fe 04 	sts	0x04FE, r24
        is_block1 = check_block(11);
    3226:	8b e0       	ldi	r24, 0x0B	; 11
    3228:	90 e0       	ldi	r25, 0x00	; 0
    322a:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    322e:	8c 01       	movw	r16, r24
        is_block2 = check_block(12);
    3230:	8c e0       	ldi	r24, 0x0C	; 12
    3232:	90 e0       	ldi	r25, 0x00	; 0
    3234:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    3238:	6c 01       	movw	r12, r24
        is_block3 = check_block(7);
    323a:	87 e0       	ldi	r24, 0x07	; 7
    323c:	90 e0       	ldi	r25, 0x00	; 0
    323e:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    3242:	4c 01       	movw	r8, r24
        is_block4 = check_block(8);
    3244:	88 e0       	ldi	r24, 0x08	; 8
    3246:	90 e0       	ldi	r25, 0x00	; 0
    3248:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
        if (block_placed[10] == 0 && is_block1==1)
    324c:	20 91 fa 04 	lds	r18, 0x04FA
    3250:	30 91 fb 04 	lds	r19, 0x04FB
    3254:	23 2b       	or	r18, r19
    3256:	21 f4       	brne	.+8      	; 0x3260 <main+0x410>
    3258:	01 30       	cpi	r16, 0x01	; 1
    325a:	11 05       	cpc	r17, r1
    325c:	09 f4       	brne	.+2      	; 0x3260 <main+0x410>
    325e:	6f c0       	rjmp	.+222    	; 0x333e <main+0x4ee>
            block = 11;
        else if (block_placed[11] == 0 && is_block2==1)
    3260:	20 91 fc 04 	lds	r18, 0x04FC
    3264:	30 91 fd 04 	lds	r19, 0x04FD
    3268:	23 2b       	or	r18, r19
    326a:	21 f4       	brne	.+8      	; 0x3274 <main+0x424>
    326c:	ca 94       	dec	r12
    326e:	cd 28       	or	r12, r13
    3270:	09 f4       	brne	.+2      	; 0x3274 <main+0x424>
    3272:	6b c0       	rjmp	.+214    	; 0x334a <main+0x4fa>
            block = 12;
        else if (block_placed[6] == 0 && is_block3==1)
    3274:	20 91 f2 04 	lds	r18, 0x04F2
    3278:	30 91 f3 04 	lds	r19, 0x04F3
    327c:	23 2b       	or	r18, r19
    327e:	21 f4       	brne	.+8      	; 0x3288 <main+0x438>
    3280:	8a 94       	dec	r8
    3282:	89 28       	or	r8, r9
    3284:	09 f4       	brne	.+2      	; 0x3288 <main+0x438>
    3286:	67 c0       	rjmp	.+206    	; 0x3356 <main+0x506>
            block = 7;
        else if (block_placed[7] == 0 && is_block4==1)
    3288:	20 91 f4 04 	lds	r18, 0x04F4
    328c:	30 91 f5 04 	lds	r19, 0x04F5
    3290:	23 2b       	or	r18, r19
    3292:	09 f0       	breq	.+2      	; 0x3296 <main+0x446>
    3294:	82 c0       	rjmp	.+260    	; 0x339a <main+0x54a>
    3296:	01 97       	sbiw	r24, 0x01	; 1
    3298:	09 f0       	breq	.+2      	; 0x329c <main+0x44c>
    329a:	7f c0       	rjmp	.+254    	; 0x339a <main+0x54a>
    329c:	62 c0       	rjmp	.+196    	; 0x3362 <main+0x512>
            block = 8;
    }
    else if (u==8)
    329e:	08 97       	sbiw	r24, 0x08	; 8
    32a0:	09 f0       	breq	.+2      	; 0x32a4 <main+0x454>
    32a2:	7b c0       	rjmp	.+246    	; 0x339a <main+0x54a>
    {
        inv = 1;
    32a4:	81 e0       	ldi	r24, 0x01	; 1
    32a6:	90 e0       	ldi	r25, 0x00	; 0
    32a8:	90 93 e3 04 	sts	0x04E3, r25
    32ac:	80 93 e2 04 	sts	0x04E2, r24
        left_turn_inv();
    32b0:	7e dd       	rcall	.-1284   	; 0x2dae <left_turn_inv>
        forward_wls(3,1);
    32b2:	61 e0       	ldi	r22, 0x01	; 1
    32b4:	70 e0       	ldi	r23, 0x00	; 0
    32b6:	83 e0       	ldi	r24, 0x03	; 3
    32b8:	90 e0       	ldi	r25, 0x00	; 0
    32ba:	0e 94 cf 09 	call	0x139e	; 0x139e <forward_wls>
        face = 'w';
    32be:	87 e7       	ldi	r24, 0x77	; 119
    32c0:	80 93 86 04 	sts	0x0486, r24
        u = 7;
    32c4:	87 e0       	ldi	r24, 0x07	; 7
    32c6:	90 e0       	ldi	r25, 0x00	; 0
    32c8:	90 93 ff 04 	sts	0x04FF, r25
    32cc:	80 93 fe 04 	sts	0x04FE, r24
        is_block1 = check_block(9);
    32d0:	89 e0       	ldi	r24, 0x09	; 9
    32d2:	90 e0       	ldi	r25, 0x00	; 0
    32d4:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    32d8:	8c 01       	movw	r16, r24
        is_block2 = check_block(10);
    32da:	8a e0       	ldi	r24, 0x0A	; 10
    32dc:	90 e0       	ldi	r25, 0x00	; 0
    32de:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    32e2:	4c 01       	movw	r8, r24
        is_block3 = check_block(5);
    32e4:	85 e0       	ldi	r24, 0x05	; 5
    32e6:	90 e0       	ldi	r25, 0x00	; 0
    32e8:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    32ec:	6c 01       	movw	r12, r24
        is_block4 = check_block(6);
    32ee:	86 e0       	ldi	r24, 0x06	; 6
    32f0:	90 e0       	ldi	r25, 0x00	; 0
    32f2:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
        if (block_placed[8] == 0 && is_block1==1)
    32f6:	20 91 f6 04 	lds	r18, 0x04F6
    32fa:	30 91 f7 04 	lds	r19, 0x04F7
    32fe:	23 2b       	or	r18, r19
    3300:	19 f4       	brne	.+6      	; 0x3308 <main+0x4b8>
    3302:	01 30       	cpi	r16, 0x01	; 1
    3304:	11 05       	cpc	r17, r1
    3306:	91 f1       	breq	.+100    	; 0x336c <main+0x51c>
            block = 9;
        else if (block_placed[9] == 0 && is_block2==1)
    3308:	20 91 f8 04 	lds	r18, 0x04F8
    330c:	30 91 f9 04 	lds	r19, 0x04F9
    3310:	23 2b       	or	r18, r19
    3312:	19 f4       	brne	.+6      	; 0x331a <main+0x4ca>
    3314:	8a 94       	dec	r8
    3316:	89 28       	or	r8, r9
    3318:	79 f1       	breq	.+94     	; 0x3378 <main+0x528>
            block = 10;
        else if (block_placed[6] == 0 && is_block3==1)
    331a:	20 91 f2 04 	lds	r18, 0x04F2
    331e:	30 91 f3 04 	lds	r19, 0x04F3
    3322:	23 2b       	or	r18, r19
    3324:	19 f4       	brne	.+6      	; 0x332c <main+0x4dc>
    3326:	ca 94       	dec	r12
    3328:	cd 28       	or	r12, r13
    332a:	61 f1       	breq	.+88     	; 0x3384 <main+0x534>
            block = 5;
        else if (block_placed[7] == 0 && is_block4==1)
    332c:	20 91 f4 04 	lds	r18, 0x04F4
    3330:	30 91 f5 04 	lds	r19, 0x04F5
    3334:	23 2b       	or	r18, r19
    3336:	89 f5       	brne	.+98     	; 0x339a <main+0x54a>
    3338:	01 97       	sbiw	r24, 0x01	; 1
    333a:	79 f5       	brne	.+94     	; 0x339a <main+0x54a>
    333c:	29 c0       	rjmp	.+82     	; 0x3390 <main+0x540>
        is_block1 = check_block(11);
        is_block2 = check_block(12);
        is_block3 = check_block(7);
        is_block4 = check_block(8);
        if (block_placed[10] == 0 && is_block1==1)
            block = 11;
    333e:	0f 2e       	mov	r0, r31
    3340:	fb e0       	ldi	r31, 0x0B	; 11
    3342:	af 2e       	mov	r10, r31
    3344:	b1 2c       	mov	r11, r1
    3346:	f0 2d       	mov	r31, r0
    3348:	28 c0       	rjmp	.+80     	; 0x339a <main+0x54a>
        else if (block_placed[11] == 0 && is_block2==1)
            block = 12;
    334a:	0f 2e       	mov	r0, r31
    334c:	fc e0       	ldi	r31, 0x0C	; 12
    334e:	af 2e       	mov	r10, r31
    3350:	b1 2c       	mov	r11, r1
    3352:	f0 2d       	mov	r31, r0
    3354:	22 c0       	rjmp	.+68     	; 0x339a <main+0x54a>
        else if (block_placed[6] == 0 && is_block3==1)
            block = 7;
    3356:	0f 2e       	mov	r0, r31
    3358:	f7 e0       	ldi	r31, 0x07	; 7
    335a:	af 2e       	mov	r10, r31
    335c:	b1 2c       	mov	r11, r1
    335e:	f0 2d       	mov	r31, r0
    3360:	1c c0       	rjmp	.+56     	; 0x339a <main+0x54a>
        else if (block_placed[7] == 0 && is_block4==1)
            block = 8;
    3362:	68 94       	set
    3364:	aa 24       	eor	r10, r10
    3366:	a3 f8       	bld	r10, 3
    3368:	b1 2c       	mov	r11, r1
    336a:	17 c0       	rjmp	.+46     	; 0x339a <main+0x54a>
        is_block1 = check_block(9);
        is_block2 = check_block(10);
        is_block3 = check_block(5);
        is_block4 = check_block(6);
        if (block_placed[8] == 0 && is_block1==1)
            block = 9;
    336c:	0f 2e       	mov	r0, r31
    336e:	f9 e0       	ldi	r31, 0x09	; 9
    3370:	af 2e       	mov	r10, r31
    3372:	b1 2c       	mov	r11, r1
    3374:	f0 2d       	mov	r31, r0
    3376:	11 c0       	rjmp	.+34     	; 0x339a <main+0x54a>
        else if (block_placed[9] == 0 && is_block2==1)
            block = 10;
    3378:	0f 2e       	mov	r0, r31
    337a:	fa e0       	ldi	r31, 0x0A	; 10
    337c:	af 2e       	mov	r10, r31
    337e:	b1 2c       	mov	r11, r1
    3380:	f0 2d       	mov	r31, r0
    3382:	0b c0       	rjmp	.+22     	; 0x339a <main+0x54a>
        else if (block_placed[6] == 0 && is_block3==1)
            block = 5;
    3384:	0f 2e       	mov	r0, r31
    3386:	f5 e0       	ldi	r31, 0x05	; 5
    3388:	af 2e       	mov	r10, r31
    338a:	b1 2c       	mov	r11, r1
    338c:	f0 2d       	mov	r31, r0
    338e:	05 c0       	rjmp	.+10     	; 0x339a <main+0x54a>
        else if (block_placed[7] == 0 && is_block4==1)
            block = 6;
    3390:	0f 2e       	mov	r0, r31
    3392:	f6 e0       	ldi	r31, 0x06	; 6
    3394:	af 2e       	mov	r10, r31
    3396:	b1 2c       	mov	r11, r1
    3398:	f0 2d       	mov	r31, r0
    }

    bnode = which_node(block);
    339a:	c5 01       	movw	r24, r10
    339c:	0e 94 a6 04 	call	0x94c	; 0x94c <which_node>
    33a0:	8c 01       	movw	r16, r24
    dijkstra(G,n,u);
    33a2:	40 91 fe 04 	lds	r20, 0x04FE
    33a6:	50 91 ff 04 	lds	r21, 0x04FF
    33aa:	60 91 87 04 	lds	r22, 0x0487
    33ae:	70 91 88 04 	lds	r23, 0x0488
    33b2:	8e e7       	ldi	r24, 0x7E	; 126
    33b4:	92 e0       	ldi	r25, 0x02	; 2
    33b6:	0e 94 94 02 	call	0x528	; 0x528 <dijkstra>
    //printf("Dijkstra Completed\n");
    //printf("Block - %d\n",block);
    //printf("Node - %d\n",bnode);
    dist_comp(bnode,bnode,path,&len);
    33ba:	9e 01       	movw	r18, r28
    33bc:	2f 5f       	subi	r18, 0xFF	; 255
    33be:	3f 4f       	sbci	r19, 0xFF	; 255
    33c0:	a7 01       	movw	r20, r14
    33c2:	b8 01       	movw	r22, r16
    33c4:	c8 01       	movw	r24, r16
    33c6:	0e 94 15 04 	call	0x82a	; 0x82a <dist_comp>
    //printf("Dist compare Completed\n");
    for(int p = 0; p<len; p++)
    33ca:	49 81       	ldd	r20, Y+1	; 0x01
    33cc:	5a 81       	ldd	r21, Y+2	; 0x02
    33ce:	14 16       	cp	r1, r20
    33d0:	15 06       	cpc	r1, r21
    33d2:	3c f4       	brge	.+14     	; 0x33e2 <main+0x592>
    33d4:	20 e0       	ldi	r18, 0x00	; 0
    33d6:	30 e0       	ldi	r19, 0x00	; 0
    33d8:	2f 5f       	subi	r18, 0xFF	; 255
    33da:	3f 4f       	sbci	r19, 0xFF	; 255
    33dc:	24 17       	cp	r18, r20
    33de:	35 07       	cpc	r19, r21
    33e0:	d9 f7       	brne	.-10     	; 0x33d8 <main+0x588>
    {
        //printf("%d\n",path[p]);
        //lcd_print(1,2*p,path[p],2);
    }
    traverse(path,u,&len);
    33e2:	60 91 fe 04 	lds	r22, 0x04FE
    33e6:	70 91 ff 04 	lds	r23, 0x04FF
    33ea:	ae 01       	movw	r20, r28
    33ec:	4f 5f       	subi	r20, 0xFF	; 255
    33ee:	5f 4f       	sbci	r21, 0xFF	; 255
    33f0:	c7 01       	movw	r24, r14
    33f2:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <traverse>
    //printf("Traverse Completed\n");
    free(path);
    33f6:	c7 01       	movw	r24, r14
    33f8:	0e 94 80 2b 	call	0x5700	; 0x5700 <free>
    len = 0;
    33fc:	1a 82       	std	Y+2, r1	; 0x02
    33fe:	19 82       	std	Y+1, r1	; 0x01
    block_choose2(block,block_placed);
    3400:	66 ee       	ldi	r22, 0xE6	; 230
    3402:	74 e0       	ldi	r23, 0x04	; 4
    3404:	c5 01       	movw	r24, r10
    3406:	21 dc       	rcall	.-1982   	; 0x2c4a <block_choose2>
    //block_choose(bnode,block_placed);
    //printf("Block Choose Completed\n");
    u = bnode;
    3408:	10 93 ff 04 	sts	0x04FF, r17
    340c:	00 93 fe 04 	sts	0x04FE, r16
    3410:	e7 e6       	ldi	r30, 0x67	; 103
    3412:	f4 e0       	ldi	r31, 0x04	; 4
    for (int i = 0; i < 10; i++)
    3414:	80 e0       	ldi	r24, 0x00	; 0
    3416:	90 e0       	ldi	r25, 0x00	; 0
    int is_block2 = 0;
    int is_block3 = 0;
    int is_block4 = 0;
    int is_block5 = 0;
    int is_block6 = 0;
    int house_no = 0;
    3418:	00 e0       	ldi	r16, 0x00	; 0
    341a:	10 e0       	ldi	r17, 0x00	; 0
                break;
            }
        }
        else
        {
            house_no = -1;
    341c:	7f ef       	ldi	r23, 0xFF	; 255
    341e:	6f ef       	ldi	r22, 0xFF	; 255
    //block_choose(bnode,block_placed);
    //printf("Block Choose Completed\n");
    u = bnode;
    for (int i = 0; i < 10; i++)
    {
        if (which_material[i] == block)
    3420:	21 91       	ld	r18, Z+
    3422:	31 91       	ld	r19, Z+
    3424:	2a 15       	cp	r18, r10
    3426:	3b 05       	cpc	r19, r11
    3428:	e1 f4       	brne	.+56     	; 0x3462 <main+0x612>
    342a:	9c 01       	movw	r18, r24
        {
            if (i==0)
    342c:	82 30       	cpi	r24, 0x02	; 2
    342e:	91 05       	cpc	r25, r1
    3430:	10 f4       	brcc	.+4      	; 0x3436 <main+0x5e6>
    3432:	0c 94 03 29 	jmp	0x5206	; 0x5206 <main+0x23b6>
    3436:	ac 01       	movw	r20, r24
    3438:	42 50       	subi	r20, 0x02	; 2
    343a:	51 09       	sbc	r21, r1
            else if (i==1)
            {
                house_no = 1;
                break;
            }
            else if (i==2)
    343c:	42 30       	cpi	r20, 0x02	; 2
    343e:	51 05       	cpc	r21, r1
    3440:	10 f4       	brcc	.+4      	; 0x3446 <main+0x5f6>
    3442:	0c 94 07 29 	jmp	0x520e	; 0x520e <main+0x23be>
    3446:	42 50       	subi	r20, 0x02	; 2
    3448:	51 09       	sbc	r21, r1
            else if (i==3)
            {
                house_no = 2;
                break;
            }
            else if (i==4)
    344a:	42 30       	cpi	r20, 0x02	; 2
    344c:	51 05       	cpc	r21, r1
    344e:	10 f4       	brcc	.+4      	; 0x3454 <main+0x604>
    3450:	0c 94 0b 29 	jmp	0x5216	; 0x5216 <main+0x23c6>
    3454:	26 50       	subi	r18, 0x06	; 6
    3456:	31 09       	sbc	r19, r1
            else if (i==5)
            {
                house_no = 3;
                break;
            }
            else if (i==6)
    3458:	22 30       	cpi	r18, 0x02	; 2
    345a:	31 05       	cpc	r19, r1
    345c:	20 f4       	brcc	.+8      	; 0x3466 <main+0x616>
    345e:	0c 94 0f 29 	jmp	0x521e	; 0x521e <main+0x23ce>
                break;
            }
        }
        else
        {
            house_no = -1;
    3462:	07 2f       	mov	r16, r23
    3464:	16 2f       	mov	r17, r22
    len = 0;
    block_choose2(block,block_placed);
    //block_choose(bnode,block_placed);
    //printf("Block Choose Completed\n");
    u = bnode;
    for (int i = 0; i < 10; i++)
    3466:	01 96       	adiw	r24, 0x01	; 1
    3468:	8a 30       	cpi	r24, 0x0A	; 10
    346a:	91 05       	cpc	r25, r1
    346c:	c9 f6       	brne	.-78     	; 0x3420 <main+0x5d0>
        else
        {
            house_no = -1;
        }
    }
    if (house_no != -1)
    346e:	0f 3f       	cpi	r16, 0xFF	; 255
    3470:	2f ef       	ldi	r18, 0xFF	; 255
    3472:	12 07       	cpc	r17, r18
    3474:	79 f0       	breq	.+30     	; 0x3494 <main+0x644>
    {
        m_pick();
    3476:	0e 94 9e 06 	call	0xd3c	; 0xd3c <m_pick>
        forward();
    347a:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    347e:	8f ef       	ldi	r24, 0xFF	; 255
    3480:	9f eb       	ldi	r25, 0xBF	; 191
    3482:	e6 e0       	ldi	r30, 0x06	; 6
    3484:	81 50       	subi	r24, 0x01	; 1
    3486:	90 40       	sbci	r25, 0x00	; 0
    3488:	e0 40       	sbci	r30, 0x00	; 0
    348a:	e1 f7       	brne	.-8      	; 0x3484 <main+0x634>
    348c:	00 c0       	rjmp	.+0      	; 0x348e <main+0x63e>
    348e:	00 00       	nop
        _delay_ms(150);
        stop();
    3490:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    }
    if (block == which_material[2*house_no - 1])
    3494:	c8 01       	movw	r24, r16
    3496:	88 0f       	add	r24, r24
    3498:	99 1f       	adc	r25, r25
    349a:	fc 01       	movw	r30, r24
    349c:	ee 0f       	add	r30, r30
    349e:	ff 1f       	adc	r31, r31
    34a0:	eb 59       	subi	r30, 0x9B	; 155
    34a2:	fb 4f       	sbci	r31, 0xFB	; 251
    34a4:	c0 80       	ld	r12, Z
    34a6:	d1 80       	ldd	r13, Z+1	; 0x01
    34a8:	ca 14       	cp	r12, r10
    34aa:	db 04       	cpc	r13, r11
    34ac:	39 f4       	brne	.+14     	; 0x34bc <main+0x66c>
    {
        block = which_material[2*house_no - 2];
    34ae:	fc 01       	movw	r30, r24
    34b0:	ee 0f       	add	r30, r30
    34b2:	ff 1f       	adc	r31, r31
    34b4:	ed 59       	subi	r30, 0x9D	; 157
    34b6:	fb 4f       	sbci	r31, 0xFB	; 251
    34b8:	c0 80       	ld	r12, Z
    34ba:	d1 80       	ldd	r13, Z+1	; 0x01
    }
    else
    {
        block = which_material[2*house_no - 1];
    }
    if (block != 0)
    34bc:	c1 14       	cp	r12, r1
    34be:	d1 04       	cpc	r13, r1
    34c0:	09 f4       	brne	.+2      	; 0x34c4 <main+0x674>
    34c2:	43 c0       	rjmp	.+134    	; 0x354a <main+0x6fa>
    {
        dijkstra(G,n,u);
    34c4:	40 91 fe 04 	lds	r20, 0x04FE
    34c8:	50 91 ff 04 	lds	r21, 0x04FF
    34cc:	60 91 87 04 	lds	r22, 0x0487
    34d0:	70 91 88 04 	lds	r23, 0x0488
    34d4:	8e e7       	ldi	r24, 0x7E	; 126
    34d6:	92 e0       	ldi	r25, 0x02	; 2
    34d8:	0e 94 94 02 	call	0x528	; 0x528 <dijkstra>
        //printf("Dijkstra Completed\n");
        bnode = which_node(block);
    34dc:	c6 01       	movw	r24, r12
    34de:	0e 94 a6 04 	call	0x94c	; 0x94c <which_node>
        dist_comp(bnode,bnode,path,&len);
    34e2:	9e 01       	movw	r18, r28
    34e4:	2f 5f       	subi	r18, 0xFF	; 255
    34e6:	3f 4f       	sbci	r19, 0xFF	; 255
    34e8:	a7 01       	movw	r20, r14
    34ea:	bc 01       	movw	r22, r24
    34ec:	0e 94 15 04 	call	0x82a	; 0x82a <dist_comp>
        //printf("Dist compare Completed\n");
        //printf("Block - %d\n",block);
        //printf("Node - %d\n",bnode);
        for(int p = 0; p<len; p++)
    34f0:	29 81       	ldd	r18, Y+1	; 0x01
    34f2:	3a 81       	ldd	r19, Y+2	; 0x02
    34f4:	12 16       	cp	r1, r18
    34f6:	13 06       	cpc	r1, r19
    34f8:	34 f4       	brge	.+12     	; 0x3506 <main+0x6b6>
    34fa:	80 e0       	ldi	r24, 0x00	; 0
    34fc:	90 e0       	ldi	r25, 0x00	; 0
    34fe:	01 96       	adiw	r24, 0x01	; 1
    3500:	82 17       	cp	r24, r18
    3502:	93 07       	cpc	r25, r19
    3504:	e1 f7       	brne	.-8      	; 0x34fe <main+0x6ae>
        {
            //printf("%d\n",path[p]);
            //lcd_print(1,2*p,path[p],2);
        }
        bnode = path[len-1];
        traverse(path,u,&len);
    3506:	60 91 fe 04 	lds	r22, 0x04FE
    350a:	70 91 ff 04 	lds	r23, 0x04FF
    350e:	ae 01       	movw	r20, r28
    3510:	4f 5f       	subi	r20, 0xFF	; 255
    3512:	5f 4f       	sbci	r21, 0xFF	; 255
    3514:	c7 01       	movw	r24, r14
    3516:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <traverse>
        //printf("Traverse Completed\n");
        free(path);
    351a:	c7 01       	movw	r24, r14
    351c:	0e 94 80 2b 	call	0x5700	; 0x5700 <free>
        len = 0;
    3520:	1a 82       	std	Y+2, r1	; 0x02
    3522:	19 82       	std	Y+1, r1	; 0x01
        block_choose2(block,block_placed);
    3524:	66 ee       	ldi	r22, 0xE6	; 230
    3526:	74 e0       	ldi	r23, 0x04	; 4
    3528:	c6 01       	movw	r24, r12
    352a:	8f db       	rcall	.-2274   	; 0x2c4a <block_choose2>
        //printf("Block Choose Completed\n");
        s_pick();
    352c:	0e 94 0c 07 	call	0xe18	; 0xe18 <s_pick>
        forward();
    3530:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    3534:	ff ef       	ldi	r31, 0xFF	; 255
    3536:	2f eb       	ldi	r18, 0xBF	; 191
    3538:	86 e0       	ldi	r24, 0x06	; 6
    353a:	f1 50       	subi	r31, 0x01	; 1
    353c:	20 40       	sbci	r18, 0x00	; 0
    353e:	80 40       	sbci	r24, 0x00	; 0
    3540:	e1 f7       	brne	.-8      	; 0x353a <main+0x6ea>
    3542:	00 c0       	rjmp	.+0      	; 0x3544 <main+0x6f4>
    3544:	00 00       	nop
        _delay_ms(150);
        stop();
    3546:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    }

    dijkstra(G,n,u);
    354a:	40 91 fe 04 	lds	r20, 0x04FE
    354e:	50 91 ff 04 	lds	r21, 0x04FF
    3552:	60 91 87 04 	lds	r22, 0x0487
    3556:	70 91 88 04 	lds	r23, 0x0488
    355a:	8e e7       	ldi	r24, 0x7E	; 126
    355c:	92 e0       	ldi	r25, 0x02	; 2
    355e:	0e 94 94 02 	call	0x528	; 0x528 <dijkstra>
    //printf("Dijkstra Completed\n");
    int hnode = 0;
    hnode = which_house(house_no);
    3562:	c8 01       	movw	r24, r16
    3564:	0e 94 08 05 	call	0xa10	; 0xa10 <which_house>
    dist_comp(hnode,hnode,path,&len);
    3568:	9e 01       	movw	r18, r28
    356a:	2f 5f       	subi	r18, 0xFF	; 255
    356c:	3f 4f       	sbci	r19, 0xFF	; 255
    356e:	a7 01       	movw	r20, r14
    3570:	bc 01       	movw	r22, r24
    3572:	0e 94 15 04 	call	0x82a	; 0x82a <dist_comp>
    //printf("Dist compare Completed\n");
    for(int p = 0; p<len; p++)
    3576:	29 81       	ldd	r18, Y+1	; 0x01
    3578:	3a 81       	ldd	r19, Y+2	; 0x02
    357a:	12 16       	cp	r1, r18
    357c:	13 06       	cpc	r1, r19
    357e:	34 f4       	brge	.+12     	; 0x358c <main+0x73c>
    3580:	80 e0       	ldi	r24, 0x00	; 0
    3582:	90 e0       	ldi	r25, 0x00	; 0
    3584:	01 96       	adiw	r24, 0x01	; 1
    3586:	82 17       	cp	r24, r18
    3588:	93 07       	cpc	r25, r19
    358a:	e1 f7       	brne	.-8      	; 0x3584 <main+0x734>
    {
        //printf("%d\n",path[p]);
        //lcd_print(1,2*p,path[p],2);
    }
    traverse(path,u,&len);
    358c:	60 91 fe 04 	lds	r22, 0x04FE
    3590:	70 91 ff 04 	lds	r23, 0x04FF
    3594:	ae 01       	movw	r20, r28
    3596:	4f 5f       	subi	r20, 0xFF	; 255
    3598:	5f 4f       	sbci	r21, 0xFF	; 255
    359a:	c7 01       	movw	r24, r14
    359c:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <traverse>
    //printf("Traverse Completed\n");
    free(path);
    35a0:	c7 01       	movw	r24, r14
    35a2:	0e 94 80 2b 	call	0x5700	; 0x5700 <free>
    len = 0;
    35a6:	1a 82       	std	Y+2, r1	; 0x02
    35a8:	19 82       	std	Y+1, r1	; 0x01
    if (house_no == 1)
    35aa:	01 30       	cpi	r16, 0x01	; 1
    35ac:	11 05       	cpc	r17, r1
    35ae:	09 f0       	breq	.+2      	; 0x35b2 <main+0x762>
    35b0:	aa c0       	rjmp	.+340    	; 0x3706 <main+0x8b6>
    {
        fdir = 'w';
    35b2:	87 e7       	ldi	r24, 0x77	; 119
    35b4:	80 93 85 04 	sts	0x0485, r24
        block_traverse();
    35b8:	4a da       	rcall	.-2924   	; 0x2a4e <block_traverse>
        back();
    35ba:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    35be:	9f ef       	ldi	r25, 0xFF	; 255
    35c0:	ef e7       	ldi	r30, 0x7F	; 127
    35c2:	f4 e0       	ldi	r31, 0x04	; 4
    35c4:	91 50       	subi	r25, 0x01	; 1
    35c6:	e0 40       	sbci	r30, 0x00	; 0
    35c8:	f0 40       	sbci	r31, 0x00	; 0
    35ca:	e1 f7       	brne	.-8      	; 0x35c4 <main+0x774>
    35cc:	00 c0       	rjmp	.+0      	; 0x35ce <main+0x77e>
    35ce:	00 00       	nop
        _delay_ms(100);
        stop();
    35d0:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        if (house_config[house_no-1]==0)
    35d4:	80 91 7b 04 	lds	r24, 0x047B
    35d8:	90 91 7c 04 	lds	r25, 0x047C
    35dc:	89 2b       	or	r24, r25
    35de:	e9 f4       	brne	.+58     	; 0x361a <main+0x7ca>
        {
            back();
    35e0:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    35e4:	2f ef       	ldi	r18, 0xFF	; 255
    35e6:	8f e7       	ldi	r24, 0x7F	; 127
    35e8:	9d e0       	ldi	r25, 0x0D	; 13
    35ea:	21 50       	subi	r18, 0x01	; 1
    35ec:	80 40       	sbci	r24, 0x00	; 0
    35ee:	90 40       	sbci	r25, 0x00	; 0
    35f0:	e1 f7       	brne	.-8      	; 0x35ea <main+0x79a>
    35f2:	00 c0       	rjmp	.+0      	; 0x35f4 <main+0x7a4>
    35f4:	00 00       	nop
            _delay_ms(300);
            stop();
    35f6:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_lr();
    35fa:	0e 94 bf 08 	call	0x117e	; 0x117e <place_lr>
            forward();
    35fe:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    3602:	ef ef       	ldi	r30, 0xFF	; 255
    3604:	ff eb       	ldi	r31, 0xBF	; 191
    3606:	26 e0       	ldi	r18, 0x06	; 6
    3608:	e1 50       	subi	r30, 0x01	; 1
    360a:	f0 40       	sbci	r31, 0x00	; 0
    360c:	20 40       	sbci	r18, 0x00	; 0
    360e:	e1 f7       	brne	.-8      	; 0x3608 <main+0x7b8>
    3610:	00 c0       	rjmp	.+0      	; 0x3612 <main+0x7c2>
    3612:	00 00       	nop
            _delay_ms(150);
            stop();
    3614:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    3618:	1c c0       	rjmp	.+56     	; 0x3652 <main+0x802>
        }
        else
        {
            back();
    361a:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    361e:	8f ef       	ldi	r24, 0xFF	; 255
    3620:	9f e7       	ldi	r25, 0x7F	; 127
    3622:	ed e0       	ldi	r30, 0x0D	; 13
    3624:	81 50       	subi	r24, 0x01	; 1
    3626:	90 40       	sbci	r25, 0x00	; 0
    3628:	e0 40       	sbci	r30, 0x00	; 0
    362a:	e1 f7       	brne	.-8      	; 0x3624 <main+0x7d4>
    362c:	00 c0       	rjmp	.+0      	; 0x362e <main+0x7de>
    362e:	00 00       	nop
            _delay_ms(300);
            stop();
    3630:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_hr();
    3634:	0e 94 30 09 	call	0x1260	; 0x1260 <place_hr>
            forward();
    3638:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    363c:	ff ef       	ldi	r31, 0xFF	; 255
    363e:	2f eb       	ldi	r18, 0xBF	; 191
    3640:	86 e0       	ldi	r24, 0x06	; 6
    3642:	f1 50       	subi	r31, 0x01	; 1
    3644:	20 40       	sbci	r18, 0x00	; 0
    3646:	80 40       	sbci	r24, 0x00	; 0
    3648:	e1 f7       	brne	.-8      	; 0x3642 <main+0x7f2>
    364a:	00 c0       	rjmp	.+0      	; 0x364c <main+0x7fc>
    364c:	00 00       	nop
            _delay_ms(150);
            stop();
    364e:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        }
        is_block1 = check_block(1);
    3652:	81 e0       	ldi	r24, 0x01	; 1
    3654:	90 e0       	ldi	r25, 0x00	; 0
    3656:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    365a:	5c 01       	movw	r10, r24
        is_block2 = check_block(2);
    365c:	82 e0       	ldi	r24, 0x02	; 2
    365e:	90 e0       	ldi	r25, 0x00	; 0
    3660:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    3664:	4c 01       	movw	r8, r24
        is_block3 = check_block(5);
    3666:	85 e0       	ldi	r24, 0x05	; 5
    3668:	90 e0       	ldi	r25, 0x00	; 0
    366a:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    366e:	3c 01       	movw	r6, r24
        is_block4 = check_block(6);
    3670:	86 e0       	ldi	r24, 0x06	; 6
    3672:	90 e0       	ldi	r25, 0x00	; 0
    3674:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    3678:	2c 01       	movw	r4, r24
        is_block5 = check_block(9);
    367a:	89 e0       	ldi	r24, 0x09	; 9
    367c:	90 e0       	ldi	r25, 0x00	; 0
    367e:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    3682:	1c 01       	movw	r2, r24
        is_block6 = check_block(10);
    3684:	8a e0       	ldi	r24, 0x0A	; 10
    3686:	90 e0       	ldi	r25, 0x00	; 0
    3688:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
        if (block_placed[0] == 0 && is_block1==1)
    368c:	20 91 e6 04 	lds	r18, 0x04E6
    3690:	30 91 e7 04 	lds	r19, 0x04E7
    3694:	23 2b       	or	r18, r19
    3696:	21 f4       	brne	.+8      	; 0x36a0 <main+0x850>
    3698:	aa 94       	dec	r10
    369a:	ab 28       	or	r10, r11
    369c:	09 f4       	brne	.+2      	; 0x36a0 <main+0x850>
    369e:	3d c2       	rjmp	.+1146   	; 0x3b1a <main+0xcca>
            block = 1;
        else if (block_placed[1] == 0 && is_block2==1)
    36a0:	20 91 e8 04 	lds	r18, 0x04E8
    36a4:	30 91 e9 04 	lds	r19, 0x04E9
    36a8:	23 2b       	or	r18, r19
    36aa:	21 f4       	brne	.+8      	; 0x36b4 <main+0x864>
    36ac:	8a 94       	dec	r8
    36ae:	89 28       	or	r8, r9
    36b0:	09 f4       	brne	.+2      	; 0x36b4 <main+0x864>
    36b2:	37 c2       	rjmp	.+1134   	; 0x3b22 <main+0xcd2>
            block = 2;
        else if (block_placed[4] == 0 && is_block3==1)
    36b4:	20 91 ee 04 	lds	r18, 0x04EE
    36b8:	30 91 ef 04 	lds	r19, 0x04EF
    36bc:	23 2b       	or	r18, r19
    36be:	21 f4       	brne	.+8      	; 0x36c8 <main+0x878>
    36c0:	6a 94       	dec	r6
    36c2:	67 28       	or	r6, r7
    36c4:	09 f4       	brne	.+2      	; 0x36c8 <main+0x878>
    36c6:	32 c2       	rjmp	.+1124   	; 0x3b2c <main+0xcdc>
            block = 5;
        else if (block_placed[5] == 0 && is_block4==1)
    36c8:	20 91 f0 04 	lds	r18, 0x04F0
    36cc:	30 91 f1 04 	lds	r19, 0x04F1
    36d0:	23 2b       	or	r18, r19
    36d2:	21 f4       	brne	.+8      	; 0x36dc <main+0x88c>
    36d4:	4a 94       	dec	r4
    36d6:	45 28       	or	r4, r5
    36d8:	09 f4       	brne	.+2      	; 0x36dc <main+0x88c>
    36da:	2e c2       	rjmp	.+1116   	; 0x3b38 <main+0xce8>
            block = 6;
        else if (block_placed[8] == 0 && is_block5==1)
    36dc:	20 91 f6 04 	lds	r18, 0x04F6
    36e0:	30 91 f7 04 	lds	r19, 0x04F7
    36e4:	23 2b       	or	r18, r19
    36e6:	21 f4       	brne	.+8      	; 0x36f0 <main+0x8a0>
    36e8:	2a 94       	dec	r2
    36ea:	23 28       	or	r2, r3
    36ec:	09 f4       	brne	.+2      	; 0x36f0 <main+0x8a0>
    36ee:	2a c2       	rjmp	.+1108   	; 0x3b44 <main+0xcf4>
            block = 9;
        else if (block_placed[9] == 0 && is_block6==1)
    36f0:	20 91 f8 04 	lds	r18, 0x04F8
    36f4:	30 91 f9 04 	lds	r19, 0x04F9
    36f8:	23 2b       	or	r18, r19
    36fa:	09 f0       	breq	.+2      	; 0x36fe <main+0x8ae>
    36fc:	93 c2       	rjmp	.+1318   	; 0x3c24 <main+0xdd4>
    36fe:	01 97       	sbiw	r24, 0x01	; 1
    3700:	09 f0       	breq	.+2      	; 0x3704 <main+0x8b4>
    3702:	90 c2       	rjmp	.+1312   	; 0x3c24 <main+0xdd4>
    3704:	25 c2       	rjmp	.+1098   	; 0x3b50 <main+0xd00>
            block = 10;
    }
    else if (house_no == 2)
    3706:	02 30       	cpi	r16, 0x02	; 2
    3708:	11 05       	cpc	r17, r1
    370a:	09 f0       	breq	.+2      	; 0x370e <main+0x8be>
    370c:	aa c0       	rjmp	.+340    	; 0x3862 <main+0xa12>
    {
        fdir = 'e';
    370e:	85 e6       	ldi	r24, 0x65	; 101
    3710:	80 93 85 04 	sts	0x0485, r24
        block_traverse();
    3714:	9c d9       	rcall	.-3272   	; 0x2a4e <block_traverse>
        back();
    3716:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    371a:	2f ef       	ldi	r18, 0xFF	; 255
    371c:	8f e7       	ldi	r24, 0x7F	; 127
    371e:	94 e0       	ldi	r25, 0x04	; 4
    3720:	21 50       	subi	r18, 0x01	; 1
    3722:	80 40       	sbci	r24, 0x00	; 0
    3724:	90 40       	sbci	r25, 0x00	; 0
    3726:	e1 f7       	brne	.-8      	; 0x3720 <main+0x8d0>
    3728:	00 c0       	rjmp	.+0      	; 0x372a <main+0x8da>
    372a:	00 00       	nop
        _delay_ms(100);
        stop();
    372c:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        if (house_config[house_no-1]==0)
    3730:	80 91 7d 04 	lds	r24, 0x047D
    3734:	90 91 7e 04 	lds	r25, 0x047E
    3738:	89 2b       	or	r24, r25
    373a:	e9 f4       	brne	.+58     	; 0x3776 <main+0x926>
        {
            back();
    373c:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    3740:	ef ef       	ldi	r30, 0xFF	; 255
    3742:	ff e7       	ldi	r31, 0x7F	; 127
    3744:	2d e0       	ldi	r18, 0x0D	; 13
    3746:	e1 50       	subi	r30, 0x01	; 1
    3748:	f0 40       	sbci	r31, 0x00	; 0
    374a:	20 40       	sbci	r18, 0x00	; 0
    374c:	e1 f7       	brne	.-8      	; 0x3746 <main+0x8f6>
    374e:	00 c0       	rjmp	.+0      	; 0x3750 <main+0x900>
    3750:	00 00       	nop
            _delay_ms(300);
            stop();
    3752:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_lr();
    3756:	0e 94 bf 08 	call	0x117e	; 0x117e <place_lr>
            forward();
    375a:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    375e:	8f ef       	ldi	r24, 0xFF	; 255
    3760:	9f eb       	ldi	r25, 0xBF	; 191
    3762:	e6 e0       	ldi	r30, 0x06	; 6
    3764:	81 50       	subi	r24, 0x01	; 1
    3766:	90 40       	sbci	r25, 0x00	; 0
    3768:	e0 40       	sbci	r30, 0x00	; 0
    376a:	e1 f7       	brne	.-8      	; 0x3764 <main+0x914>
    376c:	00 c0       	rjmp	.+0      	; 0x376e <main+0x91e>
    376e:	00 00       	nop
            _delay_ms(150);
            stop();
    3770:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    3774:	1c c0       	rjmp	.+56     	; 0x37ae <main+0x95e>
        }
        else
        {
            back();
    3776:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    377a:	ff ef       	ldi	r31, 0xFF	; 255
    377c:	2f e7       	ldi	r18, 0x7F	; 127
    377e:	8d e0       	ldi	r24, 0x0D	; 13
    3780:	f1 50       	subi	r31, 0x01	; 1
    3782:	20 40       	sbci	r18, 0x00	; 0
    3784:	80 40       	sbci	r24, 0x00	; 0
    3786:	e1 f7       	brne	.-8      	; 0x3780 <main+0x930>
    3788:	00 c0       	rjmp	.+0      	; 0x378a <main+0x93a>
    378a:	00 00       	nop
            _delay_ms(300);
            stop();
    378c:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_hr();
    3790:	0e 94 30 09 	call	0x1260	; 0x1260 <place_hr>
            forward();
    3794:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    3798:	9f ef       	ldi	r25, 0xFF	; 255
    379a:	ef eb       	ldi	r30, 0xBF	; 191
    379c:	f6 e0       	ldi	r31, 0x06	; 6
    379e:	91 50       	subi	r25, 0x01	; 1
    37a0:	e0 40       	sbci	r30, 0x00	; 0
    37a2:	f0 40       	sbci	r31, 0x00	; 0
    37a4:	e1 f7       	brne	.-8      	; 0x379e <main+0x94e>
    37a6:	00 c0       	rjmp	.+0      	; 0x37a8 <main+0x958>
    37a8:	00 00       	nop
            _delay_ms(150);
            stop();
    37aa:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        }
        is_block1 = check_block(3);
    37ae:	83 e0       	ldi	r24, 0x03	; 3
    37b0:	90 e0       	ldi	r25, 0x00	; 0
    37b2:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    37b6:	5c 01       	movw	r10, r24
        is_block2 = check_block(4);
    37b8:	84 e0       	ldi	r24, 0x04	; 4
    37ba:	90 e0       	ldi	r25, 0x00	; 0
    37bc:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    37c0:	4c 01       	movw	r8, r24
        is_block3 = check_block(7);
    37c2:	87 e0       	ldi	r24, 0x07	; 7
    37c4:	90 e0       	ldi	r25, 0x00	; 0
    37c6:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    37ca:	3c 01       	movw	r6, r24
        is_block4 = check_block(8);
    37cc:	88 e0       	ldi	r24, 0x08	; 8
    37ce:	90 e0       	ldi	r25, 0x00	; 0
    37d0:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    37d4:	2c 01       	movw	r4, r24
        is_block5 = check_block(11);
    37d6:	8b e0       	ldi	r24, 0x0B	; 11
    37d8:	90 e0       	ldi	r25, 0x00	; 0
    37da:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    37de:	1c 01       	movw	r2, r24
        is_block6 = check_block(12);
    37e0:	8c e0       	ldi	r24, 0x0C	; 12
    37e2:	90 e0       	ldi	r25, 0x00	; 0
    37e4:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
        if (block_placed[2] == 0 && is_block1==1)
    37e8:	20 91 ea 04 	lds	r18, 0x04EA
    37ec:	30 91 eb 04 	lds	r19, 0x04EB
    37f0:	23 2b       	or	r18, r19
    37f2:	21 f4       	brne	.+8      	; 0x37fc <main+0x9ac>
    37f4:	aa 94       	dec	r10
    37f6:	ab 28       	or	r10, r11
    37f8:	09 f4       	brne	.+2      	; 0x37fc <main+0x9ac>
    37fa:	b0 c1       	rjmp	.+864    	; 0x3b5c <main+0xd0c>
            block = 3;
        else if (block_placed[3] == 0 && is_block2==1)
    37fc:	20 91 ec 04 	lds	r18, 0x04EC
    3800:	30 91 ed 04 	lds	r19, 0x04ED
    3804:	23 2b       	or	r18, r19
    3806:	21 f4       	brne	.+8      	; 0x3810 <main+0x9c0>
    3808:	8a 94       	dec	r8
    380a:	89 28       	or	r8, r9
    380c:	09 f4       	brne	.+2      	; 0x3810 <main+0x9c0>
    380e:	ac c1       	rjmp	.+856    	; 0x3b68 <main+0xd18>
            block = 4;
        else if (block_placed[6] == 0 && is_block3==1)
    3810:	20 91 f2 04 	lds	r18, 0x04F2
    3814:	30 91 f3 04 	lds	r19, 0x04F3
    3818:	23 2b       	or	r18, r19
    381a:	21 f4       	brne	.+8      	; 0x3824 <main+0x9d4>
    381c:	6a 94       	dec	r6
    381e:	67 28       	or	r6, r7
    3820:	09 f4       	brne	.+2      	; 0x3824 <main+0x9d4>
    3822:	a7 c1       	rjmp	.+846    	; 0x3b72 <main+0xd22>
            block = 7;
        else if (block_placed[7] == 0 && is_block4==1)
    3824:	20 91 f4 04 	lds	r18, 0x04F4
    3828:	30 91 f5 04 	lds	r19, 0x04F5
    382c:	23 2b       	or	r18, r19
    382e:	21 f4       	brne	.+8      	; 0x3838 <main+0x9e8>
    3830:	4a 94       	dec	r4
    3832:	45 28       	or	r4, r5
    3834:	09 f4       	brne	.+2      	; 0x3838 <main+0x9e8>
    3836:	a3 c1       	rjmp	.+838    	; 0x3b7e <main+0xd2e>
            block = 8;
        else if (block_placed[10] == 0 && is_block5==1)
    3838:	20 91 fa 04 	lds	r18, 0x04FA
    383c:	30 91 fb 04 	lds	r19, 0x04FB
    3840:	23 2b       	or	r18, r19
    3842:	21 f4       	brne	.+8      	; 0x384c <main+0x9fc>
    3844:	2a 94       	dec	r2
    3846:	23 28       	or	r2, r3
    3848:	09 f4       	brne	.+2      	; 0x384c <main+0x9fc>
    384a:	9e c1       	rjmp	.+828    	; 0x3b88 <main+0xd38>
            block = 11;
        else if (block_placed[11] == 0 && is_block6==1)
    384c:	20 91 fc 04 	lds	r18, 0x04FC
    3850:	30 91 fd 04 	lds	r19, 0x04FD
    3854:	23 2b       	or	r18, r19
    3856:	09 f0       	breq	.+2      	; 0x385a <main+0xa0a>
    3858:	e5 c1       	rjmp	.+970    	; 0x3c24 <main+0xdd4>
    385a:	01 97       	sbiw	r24, 0x01	; 1
    385c:	09 f0       	breq	.+2      	; 0x3860 <main+0xa10>
    385e:	e2 c1       	rjmp	.+964    	; 0x3c24 <main+0xdd4>
    3860:	99 c1       	rjmp	.+818    	; 0x3b94 <main+0xd44>
            block = 12;
    }
    else if (house_no == 3)
    3862:	03 30       	cpi	r16, 0x03	; 3
    3864:	11 05       	cpc	r17, r1
    3866:	09 f0       	breq	.+2      	; 0x386a <main+0xa1a>
    3868:	aa c0       	rjmp	.+340    	; 0x39be <main+0xb6e>
    {
        fdir = 'w';
    386a:	87 e7       	ldi	r24, 0x77	; 119
    386c:	80 93 85 04 	sts	0x0485, r24
        block_traverse();
    3870:	ee d8       	rcall	.-3620   	; 0x2a4e <block_traverse>
        back();
    3872:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    3876:	ff ef       	ldi	r31, 0xFF	; 255
    3878:	2f e7       	ldi	r18, 0x7F	; 127
    387a:	84 e0       	ldi	r24, 0x04	; 4
    387c:	f1 50       	subi	r31, 0x01	; 1
    387e:	20 40       	sbci	r18, 0x00	; 0
    3880:	80 40       	sbci	r24, 0x00	; 0
    3882:	e1 f7       	brne	.-8      	; 0x387c <main+0xa2c>
    3884:	00 c0       	rjmp	.+0      	; 0x3886 <main+0xa36>
    3886:	00 00       	nop
        _delay_ms(100);
        stop();
    3888:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        if (house_config[house_no-1]==0)
    388c:	80 91 7f 04 	lds	r24, 0x047F
    3890:	90 91 80 04 	lds	r25, 0x0480
    3894:	89 2b       	or	r24, r25
    3896:	e9 f4       	brne	.+58     	; 0x38d2 <main+0xa82>
        {
            back();
    3898:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    389c:	9f ef       	ldi	r25, 0xFF	; 255
    389e:	ef e7       	ldi	r30, 0x7F	; 127
    38a0:	fd e0       	ldi	r31, 0x0D	; 13
    38a2:	91 50       	subi	r25, 0x01	; 1
    38a4:	e0 40       	sbci	r30, 0x00	; 0
    38a6:	f0 40       	sbci	r31, 0x00	; 0
    38a8:	e1 f7       	brne	.-8      	; 0x38a2 <main+0xa52>
    38aa:	00 c0       	rjmp	.+0      	; 0x38ac <main+0xa5c>
    38ac:	00 00       	nop
            _delay_ms(300);
            stop();
    38ae:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_lr();
    38b2:	0e 94 bf 08 	call	0x117e	; 0x117e <place_lr>
            forward();
    38b6:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    38ba:	2f ef       	ldi	r18, 0xFF	; 255
    38bc:	8f eb       	ldi	r24, 0xBF	; 191
    38be:	96 e0       	ldi	r25, 0x06	; 6
    38c0:	21 50       	subi	r18, 0x01	; 1
    38c2:	80 40       	sbci	r24, 0x00	; 0
    38c4:	90 40       	sbci	r25, 0x00	; 0
    38c6:	e1 f7       	brne	.-8      	; 0x38c0 <main+0xa70>
    38c8:	00 c0       	rjmp	.+0      	; 0x38ca <main+0xa7a>
    38ca:	00 00       	nop
            _delay_ms(150);
            stop();
    38cc:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    38d0:	1c c0       	rjmp	.+56     	; 0x390a <main+0xaba>
        }
        else
        {
            back();
    38d2:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    38d6:	ef ef       	ldi	r30, 0xFF	; 255
    38d8:	ff e7       	ldi	r31, 0x7F	; 127
    38da:	2d e0       	ldi	r18, 0x0D	; 13
    38dc:	e1 50       	subi	r30, 0x01	; 1
    38de:	f0 40       	sbci	r31, 0x00	; 0
    38e0:	20 40       	sbci	r18, 0x00	; 0
    38e2:	e1 f7       	brne	.-8      	; 0x38dc <main+0xa8c>
    38e4:	00 c0       	rjmp	.+0      	; 0x38e6 <main+0xa96>
    38e6:	00 00       	nop
            _delay_ms(300);
            stop();
    38e8:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_hr();
    38ec:	0e 94 30 09 	call	0x1260	; 0x1260 <place_hr>
            forward();
    38f0:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    38f4:	8f ef       	ldi	r24, 0xFF	; 255
    38f6:	9f eb       	ldi	r25, 0xBF	; 191
    38f8:	e6 e0       	ldi	r30, 0x06	; 6
    38fa:	81 50       	subi	r24, 0x01	; 1
    38fc:	90 40       	sbci	r25, 0x00	; 0
    38fe:	e0 40       	sbci	r30, 0x00	; 0
    3900:	e1 f7       	brne	.-8      	; 0x38fa <main+0xaaa>
    3902:	00 c0       	rjmp	.+0      	; 0x3904 <main+0xab4>
    3904:	00 00       	nop
            _delay_ms(150);
            stop();
    3906:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        }
        is_block1 = check_block(5);
    390a:	85 e0       	ldi	r24, 0x05	; 5
    390c:	90 e0       	ldi	r25, 0x00	; 0
    390e:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    3912:	4c 01       	movw	r8, r24
        is_block2 = check_block(6);
    3914:	86 e0       	ldi	r24, 0x06	; 6
    3916:	90 e0       	ldi	r25, 0x00	; 0
    3918:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    391c:	5c 01       	movw	r10, r24
        is_block3 = check_block(9);
    391e:	89 e0       	ldi	r24, 0x09	; 9
    3920:	90 e0       	ldi	r25, 0x00	; 0
    3922:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    3926:	3c 01       	movw	r6, r24
        is_block4 = check_block(10);
    3928:	8a e0       	ldi	r24, 0x0A	; 10
    392a:	90 e0       	ldi	r25, 0x00	; 0
    392c:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    3930:	2c 01       	movw	r4, r24
        is_block5 = check_block(1);
    3932:	81 e0       	ldi	r24, 0x01	; 1
    3934:	90 e0       	ldi	r25, 0x00	; 0
    3936:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    393a:	1c 01       	movw	r2, r24
        is_block6 = check_block(2);
    393c:	82 e0       	ldi	r24, 0x02	; 2
    393e:	90 e0       	ldi	r25, 0x00	; 0
    3940:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
        if (block_placed[4] == 0 && is_block1==1)
    3944:	20 91 ee 04 	lds	r18, 0x04EE
    3948:	30 91 ef 04 	lds	r19, 0x04EF
    394c:	23 2b       	or	r18, r19
    394e:	21 f4       	brne	.+8      	; 0x3958 <main+0xb08>
    3950:	8a 94       	dec	r8
    3952:	89 28       	or	r8, r9
    3954:	09 f4       	brne	.+2      	; 0x3958 <main+0xb08>
    3956:	24 c1       	rjmp	.+584    	; 0x3ba0 <main+0xd50>
            block = 5;
        else if (block_placed[5] == 0 && is_block2==1)
    3958:	20 91 f0 04 	lds	r18, 0x04F0
    395c:	30 91 f1 04 	lds	r19, 0x04F1
    3960:	23 2b       	or	r18, r19
    3962:	21 f4       	brne	.+8      	; 0x396c <main+0xb1c>
    3964:	aa 94       	dec	r10
    3966:	ab 28       	or	r10, r11
    3968:	09 f4       	brne	.+2      	; 0x396c <main+0xb1c>
    396a:	20 c1       	rjmp	.+576    	; 0x3bac <main+0xd5c>
            block = 6;
        else if (block_placed[8] == 0 && is_block3==1)
    396c:	20 91 f6 04 	lds	r18, 0x04F6
    3970:	30 91 f7 04 	lds	r19, 0x04F7
    3974:	23 2b       	or	r18, r19
    3976:	21 f4       	brne	.+8      	; 0x3980 <main+0xb30>
    3978:	6a 94       	dec	r6
    397a:	67 28       	or	r6, r7
    397c:	09 f4       	brne	.+2      	; 0x3980 <main+0xb30>
    397e:	1c c1       	rjmp	.+568    	; 0x3bb8 <main+0xd68>
            block = 9;
        else if (block_placed[9] == 0 && is_block4==1)
    3980:	20 91 f8 04 	lds	r18, 0x04F8
    3984:	30 91 f9 04 	lds	r19, 0x04F9
    3988:	23 2b       	or	r18, r19
    398a:	21 f4       	brne	.+8      	; 0x3994 <main+0xb44>
    398c:	4a 94       	dec	r4
    398e:	45 28       	or	r4, r5
    3990:	09 f4       	brne	.+2      	; 0x3994 <main+0xb44>
    3992:	18 c1       	rjmp	.+560    	; 0x3bc4 <main+0xd74>
            block = 10;
        else if (block_placed[0] == 0 && is_block5==1)
    3994:	20 91 e6 04 	lds	r18, 0x04E6
    3998:	30 91 e7 04 	lds	r19, 0x04E7
    399c:	23 2b       	or	r18, r19
    399e:	21 f4       	brne	.+8      	; 0x39a8 <main+0xb58>
    39a0:	2a 94       	dec	r2
    39a2:	23 28       	or	r2, r3
    39a4:	09 f4       	brne	.+2      	; 0x39a8 <main+0xb58>
    39a6:	14 c1       	rjmp	.+552    	; 0x3bd0 <main+0xd80>
            block = 1;
        else if (block_placed[1] == 0 && is_block6==1)
    39a8:	20 91 e8 04 	lds	r18, 0x04E8
    39ac:	30 91 e9 04 	lds	r19, 0x04E9
    39b0:	23 2b       	or	r18, r19
    39b2:	09 f0       	breq	.+2      	; 0x39b6 <main+0xb66>
    39b4:	37 c1       	rjmp	.+622    	; 0x3c24 <main+0xdd4>
    39b6:	01 97       	sbiw	r24, 0x01	; 1
    39b8:	09 f0       	breq	.+2      	; 0x39bc <main+0xb6c>
    39ba:	34 c1       	rjmp	.+616    	; 0x3c24 <main+0xdd4>
    39bc:	0d c1       	rjmp	.+538    	; 0x3bd8 <main+0xd88>
            block = 2;
    }
    else if (house_no == 4)
    39be:	04 30       	cpi	r16, 0x04	; 4
    39c0:	11 05       	cpc	r17, r1
    39c2:	09 f0       	breq	.+2      	; 0x39c6 <main+0xb76>
    39c4:	2f c1       	rjmp	.+606    	; 0x3c24 <main+0xdd4>
    {
        fdir = 'e';
    39c6:	85 e6       	ldi	r24, 0x65	; 101
    39c8:	80 93 85 04 	sts	0x0485, r24
        block_traverse();
    39cc:	40 d8       	rcall	.-3968   	; 0x2a4e <block_traverse>
        back();
    39ce:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    39d2:	8f ef       	ldi	r24, 0xFF	; 255
    39d4:	9f e7       	ldi	r25, 0x7F	; 127
    39d6:	e4 e0       	ldi	r30, 0x04	; 4
    39d8:	81 50       	subi	r24, 0x01	; 1
    39da:	90 40       	sbci	r25, 0x00	; 0
    39dc:	e0 40       	sbci	r30, 0x00	; 0
    39de:	e1 f7       	brne	.-8      	; 0x39d8 <main+0xb88>
    39e0:	00 c0       	rjmp	.+0      	; 0x39e2 <main+0xb92>
    39e2:	00 00       	nop
        _delay_ms(100);
        stop();
    39e4:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        if (house_config[house_no-1]==0)
    39e8:	80 91 81 04 	lds	r24, 0x0481
    39ec:	90 91 82 04 	lds	r25, 0x0482
    39f0:	89 2b       	or	r24, r25
    39f2:	e9 f4       	brne	.+58     	; 0x3a2e <main+0xbde>
        {
            back();
    39f4:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    39f8:	ff ef       	ldi	r31, 0xFF	; 255
    39fa:	2f e7       	ldi	r18, 0x7F	; 127
    39fc:	8d e0       	ldi	r24, 0x0D	; 13
    39fe:	f1 50       	subi	r31, 0x01	; 1
    3a00:	20 40       	sbci	r18, 0x00	; 0
    3a02:	80 40       	sbci	r24, 0x00	; 0
    3a04:	e1 f7       	brne	.-8      	; 0x39fe <main+0xbae>
    3a06:	00 c0       	rjmp	.+0      	; 0x3a08 <main+0xbb8>
    3a08:	00 00       	nop
            _delay_ms(300);
            stop();
    3a0a:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_lr();
    3a0e:	0e 94 bf 08 	call	0x117e	; 0x117e <place_lr>
            forward();
    3a12:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    3a16:	9f ef       	ldi	r25, 0xFF	; 255
    3a18:	ef eb       	ldi	r30, 0xBF	; 191
    3a1a:	f6 e0       	ldi	r31, 0x06	; 6
    3a1c:	91 50       	subi	r25, 0x01	; 1
    3a1e:	e0 40       	sbci	r30, 0x00	; 0
    3a20:	f0 40       	sbci	r31, 0x00	; 0
    3a22:	e1 f7       	brne	.-8      	; 0x3a1c <main+0xbcc>
    3a24:	00 c0       	rjmp	.+0      	; 0x3a26 <main+0xbd6>
    3a26:	00 00       	nop
            _delay_ms(150);
            stop();
    3a28:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    3a2c:	1c c0       	rjmp	.+56     	; 0x3a66 <main+0xc16>
        }
        else
        {
            back();
    3a2e:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    3a32:	2f ef       	ldi	r18, 0xFF	; 255
    3a34:	8f e7       	ldi	r24, 0x7F	; 127
    3a36:	9d e0       	ldi	r25, 0x0D	; 13
    3a38:	21 50       	subi	r18, 0x01	; 1
    3a3a:	80 40       	sbci	r24, 0x00	; 0
    3a3c:	90 40       	sbci	r25, 0x00	; 0
    3a3e:	e1 f7       	brne	.-8      	; 0x3a38 <main+0xbe8>
    3a40:	00 c0       	rjmp	.+0      	; 0x3a42 <main+0xbf2>
    3a42:	00 00       	nop
            _delay_ms(300);
            stop();
    3a44:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_hr();
    3a48:	0e 94 30 09 	call	0x1260	; 0x1260 <place_hr>
            forward();
    3a4c:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    3a50:	ef ef       	ldi	r30, 0xFF	; 255
    3a52:	ff eb       	ldi	r31, 0xBF	; 191
    3a54:	26 e0       	ldi	r18, 0x06	; 6
    3a56:	e1 50       	subi	r30, 0x01	; 1
    3a58:	f0 40       	sbci	r31, 0x00	; 0
    3a5a:	20 40       	sbci	r18, 0x00	; 0
    3a5c:	e1 f7       	brne	.-8      	; 0x3a56 <main+0xc06>
    3a5e:	00 c0       	rjmp	.+0      	; 0x3a60 <main+0xc10>
    3a60:	00 00       	nop
            _delay_ms(150);
            stop();
    3a62:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        }
        is_block1 = check_block(7);
    3a66:	87 e0       	ldi	r24, 0x07	; 7
    3a68:	90 e0       	ldi	r25, 0x00	; 0
    3a6a:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    3a6e:	5c 01       	movw	r10, r24
        is_block2 = check_block(8);
    3a70:	88 e0       	ldi	r24, 0x08	; 8
    3a72:	90 e0       	ldi	r25, 0x00	; 0
    3a74:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    3a78:	4c 01       	movw	r8, r24
        is_block3 = check_block(11);
    3a7a:	8b e0       	ldi	r24, 0x0B	; 11
    3a7c:	90 e0       	ldi	r25, 0x00	; 0
    3a7e:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    3a82:	3c 01       	movw	r6, r24
        is_block4 = check_block(12);
    3a84:	8c e0       	ldi	r24, 0x0C	; 12
    3a86:	90 e0       	ldi	r25, 0x00	; 0
    3a88:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    3a8c:	2c 01       	movw	r4, r24
        is_block5 = check_block(3);
    3a8e:	83 e0       	ldi	r24, 0x03	; 3
    3a90:	90 e0       	ldi	r25, 0x00	; 0
    3a92:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    3a96:	1c 01       	movw	r2, r24
        is_block6 = check_block(4);
    3a98:	84 e0       	ldi	r24, 0x04	; 4
    3a9a:	90 e0       	ldi	r25, 0x00	; 0
    3a9c:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
        if (block_placed[6] == 0 && is_block1==1)
    3aa0:	20 91 f2 04 	lds	r18, 0x04F2
    3aa4:	30 91 f3 04 	lds	r19, 0x04F3
    3aa8:	23 2b       	or	r18, r19
    3aaa:	21 f4       	brne	.+8      	; 0x3ab4 <main+0xc64>
    3aac:	aa 94       	dec	r10
    3aae:	ab 28       	or	r10, r11
    3ab0:	09 f4       	brne	.+2      	; 0x3ab4 <main+0xc64>
    3ab2:	97 c0       	rjmp	.+302    	; 0x3be2 <main+0xd92>
            block = 7;
        else if (block_placed[7] == 0 && is_block2==1)
    3ab4:	20 91 f4 04 	lds	r18, 0x04F4
    3ab8:	30 91 f5 04 	lds	r19, 0x04F5
    3abc:	23 2b       	or	r18, r19
    3abe:	21 f4       	brne	.+8      	; 0x3ac8 <main+0xc78>
    3ac0:	8a 94       	dec	r8
    3ac2:	89 28       	or	r8, r9
    3ac4:	09 f4       	brne	.+2      	; 0x3ac8 <main+0xc78>
    3ac6:	93 c0       	rjmp	.+294    	; 0x3bee <main+0xd9e>
            block = 8;
        else if (block_placed[10] == 0 && is_block3==1)
    3ac8:	20 91 fa 04 	lds	r18, 0x04FA
    3acc:	30 91 fb 04 	lds	r19, 0x04FB
    3ad0:	23 2b       	or	r18, r19
    3ad2:	21 f4       	brne	.+8      	; 0x3adc <main+0xc8c>
    3ad4:	6a 94       	dec	r6
    3ad6:	67 28       	or	r6, r7
    3ad8:	09 f4       	brne	.+2      	; 0x3adc <main+0xc8c>
    3ada:	8e c0       	rjmp	.+284    	; 0x3bf8 <main+0xda8>
            block = 11;
        else if (block_placed[11] == 0 && is_block4==1)
    3adc:	20 91 fc 04 	lds	r18, 0x04FC
    3ae0:	30 91 fd 04 	lds	r19, 0x04FD
    3ae4:	23 2b       	or	r18, r19
    3ae6:	21 f4       	brne	.+8      	; 0x3af0 <main+0xca0>
    3ae8:	4a 94       	dec	r4
    3aea:	45 28       	or	r4, r5
    3aec:	09 f4       	brne	.+2      	; 0x3af0 <main+0xca0>
    3aee:	8a c0       	rjmp	.+276    	; 0x3c04 <main+0xdb4>
            block = 12;
        else if (block_placed[2] == 0 && is_block5==1)
    3af0:	20 91 ea 04 	lds	r18, 0x04EA
    3af4:	30 91 eb 04 	lds	r19, 0x04EB
    3af8:	23 2b       	or	r18, r19
    3afa:	21 f4       	brne	.+8      	; 0x3b04 <main+0xcb4>
    3afc:	2a 94       	dec	r2
    3afe:	23 28       	or	r2, r3
    3b00:	09 f4       	brne	.+2      	; 0x3b04 <main+0xcb4>
    3b02:	86 c0       	rjmp	.+268    	; 0x3c10 <main+0xdc0>
            block = 3;
        else if (block_placed[3] == 0 && is_block6==1)
    3b04:	20 91 ec 04 	lds	r18, 0x04EC
    3b08:	30 91 ed 04 	lds	r19, 0x04ED
    3b0c:	23 2b       	or	r18, r19
    3b0e:	09 f0       	breq	.+2      	; 0x3b12 <main+0xcc2>
    3b10:	89 c0       	rjmp	.+274    	; 0x3c24 <main+0xdd4>
    3b12:	01 97       	sbiw	r24, 0x01	; 1
    3b14:	09 f0       	breq	.+2      	; 0x3b18 <main+0xcc8>
    3b16:	86 c0       	rjmp	.+268    	; 0x3c24 <main+0xdd4>
    3b18:	81 c0       	rjmp	.+258    	; 0x3c1c <main+0xdcc>
        is_block3 = check_block(5);
        is_block4 = check_block(6);
        is_block5 = check_block(9);
        is_block6 = check_block(10);
        if (block_placed[0] == 0 && is_block1==1)
            block = 1;
    3b1a:	cc 24       	eor	r12, r12
    3b1c:	c3 94       	inc	r12
    3b1e:	d1 2c       	mov	r13, r1
    3b20:	81 c0       	rjmp	.+258    	; 0x3c24 <main+0xdd4>
        else if (block_placed[1] == 0 && is_block2==1)
            block = 2;
    3b22:	68 94       	set
    3b24:	cc 24       	eor	r12, r12
    3b26:	c1 f8       	bld	r12, 1
    3b28:	d1 2c       	mov	r13, r1
    3b2a:	7c c0       	rjmp	.+248    	; 0x3c24 <main+0xdd4>
        else if (block_placed[4] == 0 && is_block3==1)
            block = 5;
    3b2c:	0f 2e       	mov	r0, r31
    3b2e:	f5 e0       	ldi	r31, 0x05	; 5
    3b30:	cf 2e       	mov	r12, r31
    3b32:	d1 2c       	mov	r13, r1
    3b34:	f0 2d       	mov	r31, r0
    3b36:	76 c0       	rjmp	.+236    	; 0x3c24 <main+0xdd4>
        else if (block_placed[5] == 0 && is_block4==1)
            block = 6;
    3b38:	0f 2e       	mov	r0, r31
    3b3a:	f6 e0       	ldi	r31, 0x06	; 6
    3b3c:	cf 2e       	mov	r12, r31
    3b3e:	d1 2c       	mov	r13, r1
    3b40:	f0 2d       	mov	r31, r0
    3b42:	70 c0       	rjmp	.+224    	; 0x3c24 <main+0xdd4>
        else if (block_placed[8] == 0 && is_block5==1)
            block = 9;
    3b44:	0f 2e       	mov	r0, r31
    3b46:	f9 e0       	ldi	r31, 0x09	; 9
    3b48:	cf 2e       	mov	r12, r31
    3b4a:	d1 2c       	mov	r13, r1
    3b4c:	f0 2d       	mov	r31, r0
    3b4e:	6a c0       	rjmp	.+212    	; 0x3c24 <main+0xdd4>
        else if (block_placed[9] == 0 && is_block6==1)
            block = 10;
    3b50:	0f 2e       	mov	r0, r31
    3b52:	fa e0       	ldi	r31, 0x0A	; 10
    3b54:	cf 2e       	mov	r12, r31
    3b56:	d1 2c       	mov	r13, r1
    3b58:	f0 2d       	mov	r31, r0
    3b5a:	64 c0       	rjmp	.+200    	; 0x3c24 <main+0xdd4>
        is_block3 = check_block(7);
        is_block4 = check_block(8);
        is_block5 = check_block(11);
        is_block6 = check_block(12);
        if (block_placed[2] == 0 && is_block1==1)
            block = 3;
    3b5c:	0f 2e       	mov	r0, r31
    3b5e:	f3 e0       	ldi	r31, 0x03	; 3
    3b60:	cf 2e       	mov	r12, r31
    3b62:	d1 2c       	mov	r13, r1
    3b64:	f0 2d       	mov	r31, r0
    3b66:	5e c0       	rjmp	.+188    	; 0x3c24 <main+0xdd4>
        else if (block_placed[3] == 0 && is_block2==1)
            block = 4;
    3b68:	68 94       	set
    3b6a:	cc 24       	eor	r12, r12
    3b6c:	c2 f8       	bld	r12, 2
    3b6e:	d1 2c       	mov	r13, r1
    3b70:	59 c0       	rjmp	.+178    	; 0x3c24 <main+0xdd4>
        else if (block_placed[6] == 0 && is_block3==1)
            block = 7;
    3b72:	0f 2e       	mov	r0, r31
    3b74:	f7 e0       	ldi	r31, 0x07	; 7
    3b76:	cf 2e       	mov	r12, r31
    3b78:	d1 2c       	mov	r13, r1
    3b7a:	f0 2d       	mov	r31, r0
    3b7c:	53 c0       	rjmp	.+166    	; 0x3c24 <main+0xdd4>
        else if (block_placed[7] == 0 && is_block4==1)
            block = 8;
    3b7e:	68 94       	set
    3b80:	cc 24       	eor	r12, r12
    3b82:	c3 f8       	bld	r12, 3
    3b84:	d1 2c       	mov	r13, r1
    3b86:	4e c0       	rjmp	.+156    	; 0x3c24 <main+0xdd4>
        else if (block_placed[10] == 0 && is_block5==1)
            block = 11;
    3b88:	0f 2e       	mov	r0, r31
    3b8a:	fb e0       	ldi	r31, 0x0B	; 11
    3b8c:	cf 2e       	mov	r12, r31
    3b8e:	d1 2c       	mov	r13, r1
    3b90:	f0 2d       	mov	r31, r0
    3b92:	48 c0       	rjmp	.+144    	; 0x3c24 <main+0xdd4>
        else if (block_placed[11] == 0 && is_block6==1)
            block = 12;
    3b94:	0f 2e       	mov	r0, r31
    3b96:	fc e0       	ldi	r31, 0x0C	; 12
    3b98:	cf 2e       	mov	r12, r31
    3b9a:	d1 2c       	mov	r13, r1
    3b9c:	f0 2d       	mov	r31, r0
    3b9e:	42 c0       	rjmp	.+132    	; 0x3c24 <main+0xdd4>
        is_block3 = check_block(9);
        is_block4 = check_block(10);
        is_block5 = check_block(1);
        is_block6 = check_block(2);
        if (block_placed[4] == 0 && is_block1==1)
            block = 5;
    3ba0:	0f 2e       	mov	r0, r31
    3ba2:	f5 e0       	ldi	r31, 0x05	; 5
    3ba4:	cf 2e       	mov	r12, r31
    3ba6:	d1 2c       	mov	r13, r1
    3ba8:	f0 2d       	mov	r31, r0
    3baa:	3c c0       	rjmp	.+120    	; 0x3c24 <main+0xdd4>
        else if (block_placed[5] == 0 && is_block2==1)
            block = 6;
    3bac:	0f 2e       	mov	r0, r31
    3bae:	f6 e0       	ldi	r31, 0x06	; 6
    3bb0:	cf 2e       	mov	r12, r31
    3bb2:	d1 2c       	mov	r13, r1
    3bb4:	f0 2d       	mov	r31, r0
    3bb6:	36 c0       	rjmp	.+108    	; 0x3c24 <main+0xdd4>
        else if (block_placed[8] == 0 && is_block3==1)
            block = 9;
    3bb8:	0f 2e       	mov	r0, r31
    3bba:	f9 e0       	ldi	r31, 0x09	; 9
    3bbc:	cf 2e       	mov	r12, r31
    3bbe:	d1 2c       	mov	r13, r1
    3bc0:	f0 2d       	mov	r31, r0
    3bc2:	30 c0       	rjmp	.+96     	; 0x3c24 <main+0xdd4>
        else if (block_placed[9] == 0 && is_block4==1)
            block = 10;
    3bc4:	0f 2e       	mov	r0, r31
    3bc6:	fa e0       	ldi	r31, 0x0A	; 10
    3bc8:	cf 2e       	mov	r12, r31
    3bca:	d1 2c       	mov	r13, r1
    3bcc:	f0 2d       	mov	r31, r0
    3bce:	2a c0       	rjmp	.+84     	; 0x3c24 <main+0xdd4>
        else if (block_placed[0] == 0 && is_block5==1)
            block = 1;
    3bd0:	cc 24       	eor	r12, r12
    3bd2:	c3 94       	inc	r12
    3bd4:	d1 2c       	mov	r13, r1
    3bd6:	26 c0       	rjmp	.+76     	; 0x3c24 <main+0xdd4>
        else if (block_placed[1] == 0 && is_block6==1)
            block = 2;
    3bd8:	68 94       	set
    3bda:	cc 24       	eor	r12, r12
    3bdc:	c1 f8       	bld	r12, 1
    3bde:	d1 2c       	mov	r13, r1
    3be0:	21 c0       	rjmp	.+66     	; 0x3c24 <main+0xdd4>
        is_block3 = check_block(11);
        is_block4 = check_block(12);
        is_block5 = check_block(3);
        is_block6 = check_block(4);
        if (block_placed[6] == 0 && is_block1==1)
            block = 7;
    3be2:	0f 2e       	mov	r0, r31
    3be4:	f7 e0       	ldi	r31, 0x07	; 7
    3be6:	cf 2e       	mov	r12, r31
    3be8:	d1 2c       	mov	r13, r1
    3bea:	f0 2d       	mov	r31, r0
    3bec:	1b c0       	rjmp	.+54     	; 0x3c24 <main+0xdd4>
        else if (block_placed[7] == 0 && is_block2==1)
            block = 8;
    3bee:	68 94       	set
    3bf0:	cc 24       	eor	r12, r12
    3bf2:	c3 f8       	bld	r12, 3
    3bf4:	d1 2c       	mov	r13, r1
    3bf6:	16 c0       	rjmp	.+44     	; 0x3c24 <main+0xdd4>
        else if (block_placed[10] == 0 && is_block3==1)
            block = 11;
    3bf8:	0f 2e       	mov	r0, r31
    3bfa:	fb e0       	ldi	r31, 0x0B	; 11
    3bfc:	cf 2e       	mov	r12, r31
    3bfe:	d1 2c       	mov	r13, r1
    3c00:	f0 2d       	mov	r31, r0
    3c02:	10 c0       	rjmp	.+32     	; 0x3c24 <main+0xdd4>
        else if (block_placed[11] == 0 && is_block4==1)
            block = 12;
    3c04:	0f 2e       	mov	r0, r31
    3c06:	fc e0       	ldi	r31, 0x0C	; 12
    3c08:	cf 2e       	mov	r12, r31
    3c0a:	d1 2c       	mov	r13, r1
    3c0c:	f0 2d       	mov	r31, r0
    3c0e:	0a c0       	rjmp	.+20     	; 0x3c24 <main+0xdd4>
        else if (block_placed[2] == 0 && is_block5==1)
            block = 3;
    3c10:	0f 2e       	mov	r0, r31
    3c12:	f3 e0       	ldi	r31, 0x03	; 3
    3c14:	cf 2e       	mov	r12, r31
    3c16:	d1 2c       	mov	r13, r1
    3c18:	f0 2d       	mov	r31, r0
    3c1a:	04 c0       	rjmp	.+8      	; 0x3c24 <main+0xdd4>
        else if (block_placed[3] == 0 && is_block6==1)
            block = 4;
    3c1c:	68 94       	set
    3c1e:	cc 24       	eor	r12, r12
    3c20:	c2 f8       	bld	r12, 2
    3c22:	d1 2c       	mov	r13, r1
    }

    bnode = which_node(block);
    3c24:	c6 01       	movw	r24, r12
    3c26:	0e 94 a6 04 	call	0x94c	; 0x94c <which_node>
    3c2a:	5c 01       	movw	r10, r24
    dijkstra(G,n,u);
    3c2c:	40 91 fe 04 	lds	r20, 0x04FE
    3c30:	50 91 ff 04 	lds	r21, 0x04FF
    3c34:	60 91 87 04 	lds	r22, 0x0487
    3c38:	70 91 88 04 	lds	r23, 0x0488
    3c3c:	8e e7       	ldi	r24, 0x7E	; 126
    3c3e:	92 e0       	ldi	r25, 0x02	; 2
    3c40:	0e 94 94 02 	call	0x528	; 0x528 <dijkstra>
    //printf("Dijkstra Completed\n");
    //printf("Block - %d\n",block);
    //printf("Node - %d\n",bnode);
    dist_comp(bnode,bnode,path,&len);
    3c44:	9e 01       	movw	r18, r28
    3c46:	2f 5f       	subi	r18, 0xFF	; 255
    3c48:	3f 4f       	sbci	r19, 0xFF	; 255
    3c4a:	a7 01       	movw	r20, r14
    3c4c:	b5 01       	movw	r22, r10
    3c4e:	c5 01       	movw	r24, r10
    3c50:	0e 94 15 04 	call	0x82a	; 0x82a <dist_comp>
    //printf("Dist compare Completed\n");
    for(int p = 0; p<len; p++)
    3c54:	89 81       	ldd	r24, Y+1	; 0x01
    3c56:	9a 81       	ldd	r25, Y+2	; 0x02
    3c58:	18 16       	cp	r1, r24
    3c5a:	19 06       	cpc	r1, r25
    3c5c:	3c f4       	brge	.+14     	; 0x3c6c <main+0xe1c>
    3c5e:	20 e0       	ldi	r18, 0x00	; 0
    3c60:	30 e0       	ldi	r19, 0x00	; 0
    3c62:	2f 5f       	subi	r18, 0xFF	; 255
    3c64:	3f 4f       	sbci	r19, 0xFF	; 255
    3c66:	28 17       	cp	r18, r24
    3c68:	39 07       	cpc	r19, r25
    3c6a:	d9 f7       	brne	.-10     	; 0x3c62 <main+0xe12>
    {
        //printf("%d\n",path[p]);
        //lcd_print(1,2*p,path[p],2);
    }
    traverse(path,u,&len);
    3c6c:	60 91 fe 04 	lds	r22, 0x04FE
    3c70:	70 91 ff 04 	lds	r23, 0x04FF
    3c74:	ae 01       	movw	r20, r28
    3c76:	4f 5f       	subi	r20, 0xFF	; 255
    3c78:	5f 4f       	sbci	r21, 0xFF	; 255
    3c7a:	c7 01       	movw	r24, r14
    3c7c:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <traverse>
    //printf("Traverse Completed\n");
    free(path);
    3c80:	c7 01       	movw	r24, r14
    3c82:	0e 94 80 2b 	call	0x5700	; 0x5700 <free>
    len = 0;
    3c86:	1a 82       	std	Y+2, r1	; 0x02
    3c88:	19 82       	std	Y+1, r1	; 0x01
    block_choose2(block,block_placed);
    3c8a:	66 ee       	ldi	r22, 0xE6	; 230
    3c8c:	74 e0       	ldi	r23, 0x04	; 4
    3c8e:	c6 01       	movw	r24, r12
    3c90:	0e 94 25 16 	call	0x2c4a	; 0x2c4a <block_choose2>
    //block_choose(bnode,block_placed);
    //printf("Block Choose Completed\n");
    u = bnode;
    3c94:	b0 92 ff 04 	sts	0x04FF, r11
    3c98:	a0 92 fe 04 	sts	0x04FE, r10
    3c9c:	e7 e6       	ldi	r30, 0x67	; 103
    3c9e:	f4 e0       	ldi	r31, 0x04	; 4
    for (int i = 0; i < 10; i++)
    3ca0:	80 e0       	ldi	r24, 0x00	; 0
    3ca2:	90 e0       	ldi	r25, 0x00	; 0
                break;
            }
        }
        else
        {
            house_no = -1;
    3ca4:	7f ef       	ldi	r23, 0xFF	; 255
    3ca6:	6f ef       	ldi	r22, 0xFF	; 255
    //block_choose(bnode,block_placed);
    //printf("Block Choose Completed\n");
    u = bnode;
    for (int i = 0; i < 10; i++)
    {
        if (which_material[i] == block)
    3ca8:	21 91       	ld	r18, Z+
    3caa:	31 91       	ld	r19, Z+
    3cac:	2c 15       	cp	r18, r12
    3cae:	3d 05       	cpc	r19, r13
    3cb0:	e1 f4       	brne	.+56     	; 0x3cea <main+0xe9a>
    3cb2:	9c 01       	movw	r18, r24
        {
            if (i==0)
    3cb4:	82 30       	cpi	r24, 0x02	; 2
    3cb6:	91 05       	cpc	r25, r1
    3cb8:	10 f4       	brcc	.+4      	; 0x3cbe <main+0xe6e>
    3cba:	0c 94 13 29 	jmp	0x5226	; 0x5226 <main+0x23d6>
    3cbe:	ac 01       	movw	r20, r24
    3cc0:	42 50       	subi	r20, 0x02	; 2
    3cc2:	51 09       	sbc	r21, r1
            else if (i==1)
            {
                house_no = 1;
                break;
            }
            else if (i==2)
    3cc4:	42 30       	cpi	r20, 0x02	; 2
    3cc6:	51 05       	cpc	r21, r1
    3cc8:	10 f4       	brcc	.+4      	; 0x3cce <main+0xe7e>
    3cca:	0c 94 17 29 	jmp	0x522e	; 0x522e <main+0x23de>
    3cce:	42 50       	subi	r20, 0x02	; 2
    3cd0:	51 09       	sbc	r21, r1
            else if (i==3)
            {
                house_no = 2;
                break;
            }
            else if (i==4)
    3cd2:	42 30       	cpi	r20, 0x02	; 2
    3cd4:	51 05       	cpc	r21, r1
    3cd6:	10 f4       	brcc	.+4      	; 0x3cdc <main+0xe8c>
    3cd8:	0c 94 1b 29 	jmp	0x5236	; 0x5236 <main+0x23e6>
    3cdc:	26 50       	subi	r18, 0x06	; 6
    3cde:	31 09       	sbc	r19, r1
            else if (i==5)
            {
                house_no = 3;
                break;
            }
            else if (i==6)
    3ce0:	22 30       	cpi	r18, 0x02	; 2
    3ce2:	31 05       	cpc	r19, r1
    3ce4:	20 f4       	brcc	.+8      	; 0x3cee <main+0xe9e>
    3ce6:	0c 94 1f 29 	jmp	0x523e	; 0x523e <main+0x23ee>
                break;
            }
        }
        else
        {
            house_no = -1;
    3cea:	07 2f       	mov	r16, r23
    3cec:	16 2f       	mov	r17, r22
    len = 0;
    block_choose2(block,block_placed);
    //block_choose(bnode,block_placed);
    //printf("Block Choose Completed\n");
    u = bnode;
    for (int i = 0; i < 10; i++)
    3cee:	01 96       	adiw	r24, 0x01	; 1
    3cf0:	8a 30       	cpi	r24, 0x0A	; 10
    3cf2:	91 05       	cpc	r25, r1
    3cf4:	c9 f6       	brne	.-78     	; 0x3ca8 <main+0xe58>
        else
        {
            house_no = -1;
        }
    }
    if (house_no != -1)
    3cf6:	0f 3f       	cpi	r16, 0xFF	; 255
    3cf8:	2f ef       	ldi	r18, 0xFF	; 255
    3cfa:	12 07       	cpc	r17, r18
    3cfc:	79 f0       	breq	.+30     	; 0x3d1c <main+0xecc>
    {
        m_pick();
    3cfe:	0e 94 9e 06 	call	0xd3c	; 0xd3c <m_pick>
        forward();
    3d02:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    3d06:	8f ef       	ldi	r24, 0xFF	; 255
    3d08:	9f eb       	ldi	r25, 0xBF	; 191
    3d0a:	e6 e0       	ldi	r30, 0x06	; 6
    3d0c:	81 50       	subi	r24, 0x01	; 1
    3d0e:	90 40       	sbci	r25, 0x00	; 0
    3d10:	e0 40       	sbci	r30, 0x00	; 0
    3d12:	e1 f7       	brne	.-8      	; 0x3d0c <main+0xebc>
    3d14:	00 c0       	rjmp	.+0      	; 0x3d16 <main+0xec6>
    3d16:	00 00       	nop
        _delay_ms(150);
        stop();
    3d18:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    }
    if (block == which_material[2*house_no - 1])
    3d1c:	c8 01       	movw	r24, r16
    3d1e:	88 0f       	add	r24, r24
    3d20:	99 1f       	adc	r25, r25
    3d22:	fc 01       	movw	r30, r24
    3d24:	ee 0f       	add	r30, r30
    3d26:	ff 1f       	adc	r31, r31
    3d28:	eb 59       	subi	r30, 0x9B	; 155
    3d2a:	fb 4f       	sbci	r31, 0xFB	; 251
    3d2c:	a0 80       	ld	r10, Z
    3d2e:	b1 80       	ldd	r11, Z+1	; 0x01
    3d30:	ac 14       	cp	r10, r12
    3d32:	bd 04       	cpc	r11, r13
    3d34:	39 f4       	brne	.+14     	; 0x3d44 <main+0xef4>
    {
        block = which_material[2*house_no - 2];
    3d36:	fc 01       	movw	r30, r24
    3d38:	ee 0f       	add	r30, r30
    3d3a:	ff 1f       	adc	r31, r31
    3d3c:	ed 59       	subi	r30, 0x9D	; 157
    3d3e:	fb 4f       	sbci	r31, 0xFB	; 251
    3d40:	a0 80       	ld	r10, Z
    3d42:	b1 80       	ldd	r11, Z+1	; 0x01
    }
    else
    {
        block = which_material[2*house_no - 1];
    }
    if (block != 0)
    3d44:	a1 14       	cp	r10, r1
    3d46:	b1 04       	cpc	r11, r1
    3d48:	09 f4       	brne	.+2      	; 0x3d4c <main+0xefc>
    3d4a:	44 c0       	rjmp	.+136    	; 0x3dd4 <main+0xf84>
    {
        dijkstra(G,n,u);
    3d4c:	40 91 fe 04 	lds	r20, 0x04FE
    3d50:	50 91 ff 04 	lds	r21, 0x04FF
    3d54:	60 91 87 04 	lds	r22, 0x0487
    3d58:	70 91 88 04 	lds	r23, 0x0488
    3d5c:	8e e7       	ldi	r24, 0x7E	; 126
    3d5e:	92 e0       	ldi	r25, 0x02	; 2
    3d60:	0e 94 94 02 	call	0x528	; 0x528 <dijkstra>
        //printf("Dijkstra Completed\n");
        bnode = which_node(block);
    3d64:	c5 01       	movw	r24, r10
    3d66:	0e 94 a6 04 	call	0x94c	; 0x94c <which_node>
        dist_comp(bnode,bnode,path,&len);
    3d6a:	9e 01       	movw	r18, r28
    3d6c:	2f 5f       	subi	r18, 0xFF	; 255
    3d6e:	3f 4f       	sbci	r19, 0xFF	; 255
    3d70:	a7 01       	movw	r20, r14
    3d72:	bc 01       	movw	r22, r24
    3d74:	0e 94 15 04 	call	0x82a	; 0x82a <dist_comp>
        //printf("Dist compare Completed\n");
        //printf("Block - %d\n",block);
        //printf("Node - %d\n",bnode);
        for(int p = 0; p<len; p++)
    3d78:	29 81       	ldd	r18, Y+1	; 0x01
    3d7a:	3a 81       	ldd	r19, Y+2	; 0x02
    3d7c:	12 16       	cp	r1, r18
    3d7e:	13 06       	cpc	r1, r19
    3d80:	34 f4       	brge	.+12     	; 0x3d8e <main+0xf3e>
    3d82:	80 e0       	ldi	r24, 0x00	; 0
    3d84:	90 e0       	ldi	r25, 0x00	; 0
    3d86:	01 96       	adiw	r24, 0x01	; 1
    3d88:	82 17       	cp	r24, r18
    3d8a:	93 07       	cpc	r25, r19
    3d8c:	e1 f7       	brne	.-8      	; 0x3d86 <main+0xf36>
        {
            //printf("%d\n",path[p]);
            //lcd_print(1,2*p,path[p],2);
        }
        bnode = path[len-1];
        traverse(path,u,&len);
    3d8e:	60 91 fe 04 	lds	r22, 0x04FE
    3d92:	70 91 ff 04 	lds	r23, 0x04FF
    3d96:	ae 01       	movw	r20, r28
    3d98:	4f 5f       	subi	r20, 0xFF	; 255
    3d9a:	5f 4f       	sbci	r21, 0xFF	; 255
    3d9c:	c7 01       	movw	r24, r14
    3d9e:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <traverse>
        //printf("Traverse Completed\n");
        free(path);
    3da2:	c7 01       	movw	r24, r14
    3da4:	0e 94 80 2b 	call	0x5700	; 0x5700 <free>
        len = 0;
    3da8:	1a 82       	std	Y+2, r1	; 0x02
    3daa:	19 82       	std	Y+1, r1	; 0x01
        block_choose2(block,block_placed);
    3dac:	66 ee       	ldi	r22, 0xE6	; 230
    3dae:	74 e0       	ldi	r23, 0x04	; 4
    3db0:	c5 01       	movw	r24, r10
    3db2:	0e 94 25 16 	call	0x2c4a	; 0x2c4a <block_choose2>
        //printf("Block Choose Completed\n");
        s_pick();
    3db6:	0e 94 0c 07 	call	0xe18	; 0xe18 <s_pick>
        forward();
    3dba:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    3dbe:	ff ef       	ldi	r31, 0xFF	; 255
    3dc0:	2f eb       	ldi	r18, 0xBF	; 191
    3dc2:	86 e0       	ldi	r24, 0x06	; 6
    3dc4:	f1 50       	subi	r31, 0x01	; 1
    3dc6:	20 40       	sbci	r18, 0x00	; 0
    3dc8:	80 40       	sbci	r24, 0x00	; 0
    3dca:	e1 f7       	brne	.-8      	; 0x3dc4 <main+0xf74>
    3dcc:	00 c0       	rjmp	.+0      	; 0x3dce <main+0xf7e>
    3dce:	00 00       	nop
        _delay_ms(150);
        stop();
    3dd0:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    }

    dijkstra(G,n,u);
    3dd4:	40 91 fe 04 	lds	r20, 0x04FE
    3dd8:	50 91 ff 04 	lds	r21, 0x04FF
    3ddc:	60 91 87 04 	lds	r22, 0x0487
    3de0:	70 91 88 04 	lds	r23, 0x0488
    3de4:	8e e7       	ldi	r24, 0x7E	; 126
    3de6:	92 e0       	ldi	r25, 0x02	; 2
    3de8:	0e 94 94 02 	call	0x528	; 0x528 <dijkstra>
    //printf("Dijkstra Completed\n");
    hnode = 0;
    hnode = which_house(house_no);
    3dec:	c8 01       	movw	r24, r16
    3dee:	0e 94 08 05 	call	0xa10	; 0xa10 <which_house>
    dist_comp(hnode,hnode,path,&len);
    3df2:	9e 01       	movw	r18, r28
    3df4:	2f 5f       	subi	r18, 0xFF	; 255
    3df6:	3f 4f       	sbci	r19, 0xFF	; 255
    3df8:	a7 01       	movw	r20, r14
    3dfa:	bc 01       	movw	r22, r24
    3dfc:	0e 94 15 04 	call	0x82a	; 0x82a <dist_comp>
    //printf("Dist compare Completed\n");
    for(int p = 0; p<len; p++)
    3e00:	29 81       	ldd	r18, Y+1	; 0x01
    3e02:	3a 81       	ldd	r19, Y+2	; 0x02
    3e04:	12 16       	cp	r1, r18
    3e06:	13 06       	cpc	r1, r19
    3e08:	34 f4       	brge	.+12     	; 0x3e16 <main+0xfc6>
    3e0a:	80 e0       	ldi	r24, 0x00	; 0
    3e0c:	90 e0       	ldi	r25, 0x00	; 0
    3e0e:	01 96       	adiw	r24, 0x01	; 1
    3e10:	82 17       	cp	r24, r18
    3e12:	93 07       	cpc	r25, r19
    3e14:	e1 f7       	brne	.-8      	; 0x3e0e <main+0xfbe>
    {
        //printf("%d\n",path[p]);
        //lcd_print(1,2*p,path[p],2);
    }
    traverse(path,u,&len);
    3e16:	60 91 fe 04 	lds	r22, 0x04FE
    3e1a:	70 91 ff 04 	lds	r23, 0x04FF
    3e1e:	ae 01       	movw	r20, r28
    3e20:	4f 5f       	subi	r20, 0xFF	; 255
    3e22:	5f 4f       	sbci	r21, 0xFF	; 255
    3e24:	c7 01       	movw	r24, r14
    3e26:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <traverse>
    //printf("Traverse Completed\n");
    free(path);
    3e2a:	c7 01       	movw	r24, r14
    3e2c:	0e 94 80 2b 	call	0x5700	; 0x5700 <free>
    len = 0;
    3e30:	1a 82       	std	Y+2, r1	; 0x02
    3e32:	19 82       	std	Y+1, r1	; 0x01
    if (house_no == 1)
    3e34:	01 30       	cpi	r16, 0x01	; 1
    3e36:	11 05       	cpc	r17, r1
    3e38:	09 f0       	breq	.+2      	; 0x3e3c <main+0xfec>
    3e3a:	ab c0       	rjmp	.+342    	; 0x3f92 <main+0x1142>
    {
        fdir = 'w';
    3e3c:	87 e7       	ldi	r24, 0x77	; 119
    3e3e:	80 93 85 04 	sts	0x0485, r24
        block_traverse();
    3e42:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <block_traverse>
        back();
    3e46:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    3e4a:	9f ef       	ldi	r25, 0xFF	; 255
    3e4c:	ef e7       	ldi	r30, 0x7F	; 127
    3e4e:	f4 e0       	ldi	r31, 0x04	; 4
    3e50:	91 50       	subi	r25, 0x01	; 1
    3e52:	e0 40       	sbci	r30, 0x00	; 0
    3e54:	f0 40       	sbci	r31, 0x00	; 0
    3e56:	e1 f7       	brne	.-8      	; 0x3e50 <main+0x1000>
    3e58:	00 c0       	rjmp	.+0      	; 0x3e5a <main+0x100a>
    3e5a:	00 00       	nop
        _delay_ms(100);
        stop();
    3e5c:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        if (house_config[house_no-1]==0)
    3e60:	80 91 7b 04 	lds	r24, 0x047B
    3e64:	90 91 7c 04 	lds	r25, 0x047C
    3e68:	89 2b       	or	r24, r25
    3e6a:	e9 f4       	brne	.+58     	; 0x3ea6 <main+0x1056>
        {
            back();
    3e6c:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    3e70:	2f ef       	ldi	r18, 0xFF	; 255
    3e72:	8f e7       	ldi	r24, 0x7F	; 127
    3e74:	9d e0       	ldi	r25, 0x0D	; 13
    3e76:	21 50       	subi	r18, 0x01	; 1
    3e78:	80 40       	sbci	r24, 0x00	; 0
    3e7a:	90 40       	sbci	r25, 0x00	; 0
    3e7c:	e1 f7       	brne	.-8      	; 0x3e76 <main+0x1026>
    3e7e:	00 c0       	rjmp	.+0      	; 0x3e80 <main+0x1030>
    3e80:	00 00       	nop
            _delay_ms(300);
            stop();
    3e82:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_lr();
    3e86:	0e 94 bf 08 	call	0x117e	; 0x117e <place_lr>
            forward();
    3e8a:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    3e8e:	ef ef       	ldi	r30, 0xFF	; 255
    3e90:	ff eb       	ldi	r31, 0xBF	; 191
    3e92:	26 e0       	ldi	r18, 0x06	; 6
    3e94:	e1 50       	subi	r30, 0x01	; 1
    3e96:	f0 40       	sbci	r31, 0x00	; 0
    3e98:	20 40       	sbci	r18, 0x00	; 0
    3e9a:	e1 f7       	brne	.-8      	; 0x3e94 <main+0x1044>
    3e9c:	00 c0       	rjmp	.+0      	; 0x3e9e <main+0x104e>
    3e9e:	00 00       	nop
            _delay_ms(150);
            stop();
    3ea0:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    3ea4:	1c c0       	rjmp	.+56     	; 0x3ede <main+0x108e>
        }
        else
        {
            back();
    3ea6:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    3eaa:	8f ef       	ldi	r24, 0xFF	; 255
    3eac:	9f e7       	ldi	r25, 0x7F	; 127
    3eae:	ed e0       	ldi	r30, 0x0D	; 13
    3eb0:	81 50       	subi	r24, 0x01	; 1
    3eb2:	90 40       	sbci	r25, 0x00	; 0
    3eb4:	e0 40       	sbci	r30, 0x00	; 0
    3eb6:	e1 f7       	brne	.-8      	; 0x3eb0 <main+0x1060>
    3eb8:	00 c0       	rjmp	.+0      	; 0x3eba <main+0x106a>
    3eba:	00 00       	nop
            _delay_ms(300);
            stop();
    3ebc:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_hr();
    3ec0:	0e 94 30 09 	call	0x1260	; 0x1260 <place_hr>
            forward();
    3ec4:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    3ec8:	ff ef       	ldi	r31, 0xFF	; 255
    3eca:	2f eb       	ldi	r18, 0xBF	; 191
    3ecc:	86 e0       	ldi	r24, 0x06	; 6
    3ece:	f1 50       	subi	r31, 0x01	; 1
    3ed0:	20 40       	sbci	r18, 0x00	; 0
    3ed2:	80 40       	sbci	r24, 0x00	; 0
    3ed4:	e1 f7       	brne	.-8      	; 0x3ece <main+0x107e>
    3ed6:	00 c0       	rjmp	.+0      	; 0x3ed8 <main+0x1088>
    3ed8:	00 00       	nop
            _delay_ms(150);
            stop();
    3eda:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        }
        is_block1 = check_block(1);
    3ede:	81 e0       	ldi	r24, 0x01	; 1
    3ee0:	90 e0       	ldi	r25, 0x00	; 0
    3ee2:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    3ee6:	6c 01       	movw	r12, r24
        is_block2 = check_block(2);
    3ee8:	82 e0       	ldi	r24, 0x02	; 2
    3eea:	90 e0       	ldi	r25, 0x00	; 0
    3eec:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    3ef0:	4c 01       	movw	r8, r24
        is_block3 = check_block(5);
    3ef2:	85 e0       	ldi	r24, 0x05	; 5
    3ef4:	90 e0       	ldi	r25, 0x00	; 0
    3ef6:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    3efa:	3c 01       	movw	r6, r24
        is_block4 = check_block(6);
    3efc:	86 e0       	ldi	r24, 0x06	; 6
    3efe:	90 e0       	ldi	r25, 0x00	; 0
    3f00:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    3f04:	2c 01       	movw	r4, r24
        is_block5 = check_block(9);
    3f06:	89 e0       	ldi	r24, 0x09	; 9
    3f08:	90 e0       	ldi	r25, 0x00	; 0
    3f0a:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    3f0e:	1c 01       	movw	r2, r24
        is_block6 = check_block(10);
    3f10:	8a e0       	ldi	r24, 0x0A	; 10
    3f12:	90 e0       	ldi	r25, 0x00	; 0
    3f14:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
        if (block_placed[0] == 0 && is_block1==1)
    3f18:	20 91 e6 04 	lds	r18, 0x04E6
    3f1c:	30 91 e7 04 	lds	r19, 0x04E7
    3f20:	23 2b       	or	r18, r19
    3f22:	21 f4       	brne	.+8      	; 0x3f2c <main+0x10dc>
    3f24:	ca 94       	dec	r12
    3f26:	cd 28       	or	r12, r13
    3f28:	09 f4       	brne	.+2      	; 0x3f2c <main+0x10dc>
    3f2a:	40 c2       	rjmp	.+1152   	; 0x43ac <main+0x155c>
            block = 1;
        else if (block_placed[1] == 0 && is_block2==1)
    3f2c:	20 91 e8 04 	lds	r18, 0x04E8
    3f30:	30 91 e9 04 	lds	r19, 0x04E9
    3f34:	23 2b       	or	r18, r19
    3f36:	21 f4       	brne	.+8      	; 0x3f40 <main+0x10f0>
    3f38:	8a 94       	dec	r8
    3f3a:	89 28       	or	r8, r9
    3f3c:	09 f4       	brne	.+2      	; 0x3f40 <main+0x10f0>
    3f3e:	3a c2       	rjmp	.+1140   	; 0x43b4 <main+0x1564>
            block = 2;
        else if (block_placed[4] == 0 && is_block3==1)
    3f40:	20 91 ee 04 	lds	r18, 0x04EE
    3f44:	30 91 ef 04 	lds	r19, 0x04EF
    3f48:	23 2b       	or	r18, r19
    3f4a:	21 f4       	brne	.+8      	; 0x3f54 <main+0x1104>
    3f4c:	6a 94       	dec	r6
    3f4e:	67 28       	or	r6, r7
    3f50:	09 f4       	brne	.+2      	; 0x3f54 <main+0x1104>
    3f52:	35 c2       	rjmp	.+1130   	; 0x43be <main+0x156e>
            block = 5;
        else if (block_placed[5] == 0 && is_block4==1)
    3f54:	20 91 f0 04 	lds	r18, 0x04F0
    3f58:	30 91 f1 04 	lds	r19, 0x04F1
    3f5c:	23 2b       	or	r18, r19
    3f5e:	21 f4       	brne	.+8      	; 0x3f68 <main+0x1118>
    3f60:	4a 94       	dec	r4
    3f62:	45 28       	or	r4, r5
    3f64:	09 f4       	brne	.+2      	; 0x3f68 <main+0x1118>
    3f66:	31 c2       	rjmp	.+1122   	; 0x43ca <main+0x157a>
            block = 6;
        else if (block_placed[8] == 0 && is_block5==1)
    3f68:	20 91 f6 04 	lds	r18, 0x04F6
    3f6c:	30 91 f7 04 	lds	r19, 0x04F7
    3f70:	23 2b       	or	r18, r19
    3f72:	21 f4       	brne	.+8      	; 0x3f7c <main+0x112c>
    3f74:	2a 94       	dec	r2
    3f76:	23 28       	or	r2, r3
    3f78:	09 f4       	brne	.+2      	; 0x3f7c <main+0x112c>
    3f7a:	2d c2       	rjmp	.+1114   	; 0x43d6 <main+0x1586>
            block = 9;
        else if (block_placed[9] == 0 && is_block6==1)
    3f7c:	20 91 f8 04 	lds	r18, 0x04F8
    3f80:	30 91 f9 04 	lds	r19, 0x04F9
    3f84:	23 2b       	or	r18, r19
    3f86:	09 f0       	breq	.+2      	; 0x3f8a <main+0x113a>
    3f88:	96 c2       	rjmp	.+1324   	; 0x44b6 <main+0x1666>
    3f8a:	01 97       	sbiw	r24, 0x01	; 1
    3f8c:	09 f0       	breq	.+2      	; 0x3f90 <main+0x1140>
    3f8e:	93 c2       	rjmp	.+1318   	; 0x44b6 <main+0x1666>
    3f90:	28 c2       	rjmp	.+1104   	; 0x43e2 <main+0x1592>
            block = 10;
    }
    else if (house_no == 2)
    3f92:	02 30       	cpi	r16, 0x02	; 2
    3f94:	11 05       	cpc	r17, r1
    3f96:	09 f0       	breq	.+2      	; 0x3f9a <main+0x114a>
    3f98:	ab c0       	rjmp	.+342    	; 0x40f0 <main+0x12a0>
    {
        fdir = 'e';
    3f9a:	85 e6       	ldi	r24, 0x65	; 101
    3f9c:	80 93 85 04 	sts	0x0485, r24
        block_traverse();
    3fa0:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <block_traverse>
        back();
    3fa4:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    3fa8:	2f ef       	ldi	r18, 0xFF	; 255
    3faa:	8f e7       	ldi	r24, 0x7F	; 127
    3fac:	94 e0       	ldi	r25, 0x04	; 4
    3fae:	21 50       	subi	r18, 0x01	; 1
    3fb0:	80 40       	sbci	r24, 0x00	; 0
    3fb2:	90 40       	sbci	r25, 0x00	; 0
    3fb4:	e1 f7       	brne	.-8      	; 0x3fae <main+0x115e>
    3fb6:	00 c0       	rjmp	.+0      	; 0x3fb8 <main+0x1168>
    3fb8:	00 00       	nop
        _delay_ms(100);
        stop();
    3fba:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        if (house_config[house_no-1]==0)
    3fbe:	80 91 7d 04 	lds	r24, 0x047D
    3fc2:	90 91 7e 04 	lds	r25, 0x047E
    3fc6:	89 2b       	or	r24, r25
    3fc8:	e9 f4       	brne	.+58     	; 0x4004 <main+0x11b4>
        {
            back();
    3fca:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    3fce:	ef ef       	ldi	r30, 0xFF	; 255
    3fd0:	ff e7       	ldi	r31, 0x7F	; 127
    3fd2:	2d e0       	ldi	r18, 0x0D	; 13
    3fd4:	e1 50       	subi	r30, 0x01	; 1
    3fd6:	f0 40       	sbci	r31, 0x00	; 0
    3fd8:	20 40       	sbci	r18, 0x00	; 0
    3fda:	e1 f7       	brne	.-8      	; 0x3fd4 <main+0x1184>
    3fdc:	00 c0       	rjmp	.+0      	; 0x3fde <main+0x118e>
    3fde:	00 00       	nop
            _delay_ms(300);
            stop();
    3fe0:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_lr();
    3fe4:	0e 94 bf 08 	call	0x117e	; 0x117e <place_lr>
            forward();
    3fe8:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    3fec:	8f ef       	ldi	r24, 0xFF	; 255
    3fee:	9f eb       	ldi	r25, 0xBF	; 191
    3ff0:	e6 e0       	ldi	r30, 0x06	; 6
    3ff2:	81 50       	subi	r24, 0x01	; 1
    3ff4:	90 40       	sbci	r25, 0x00	; 0
    3ff6:	e0 40       	sbci	r30, 0x00	; 0
    3ff8:	e1 f7       	brne	.-8      	; 0x3ff2 <main+0x11a2>
    3ffa:	00 c0       	rjmp	.+0      	; 0x3ffc <main+0x11ac>
    3ffc:	00 00       	nop
            _delay_ms(150);
            stop();
    3ffe:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    4002:	1c c0       	rjmp	.+56     	; 0x403c <main+0x11ec>
        }
        else
        {
            back();
    4004:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    4008:	ff ef       	ldi	r31, 0xFF	; 255
    400a:	2f e7       	ldi	r18, 0x7F	; 127
    400c:	8d e0       	ldi	r24, 0x0D	; 13
    400e:	f1 50       	subi	r31, 0x01	; 1
    4010:	20 40       	sbci	r18, 0x00	; 0
    4012:	80 40       	sbci	r24, 0x00	; 0
    4014:	e1 f7       	brne	.-8      	; 0x400e <main+0x11be>
    4016:	00 c0       	rjmp	.+0      	; 0x4018 <main+0x11c8>
    4018:	00 00       	nop
            _delay_ms(300);
            stop();
    401a:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_hr();
    401e:	0e 94 30 09 	call	0x1260	; 0x1260 <place_hr>
            forward();
    4022:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    4026:	9f ef       	ldi	r25, 0xFF	; 255
    4028:	ef eb       	ldi	r30, 0xBF	; 191
    402a:	f6 e0       	ldi	r31, 0x06	; 6
    402c:	91 50       	subi	r25, 0x01	; 1
    402e:	e0 40       	sbci	r30, 0x00	; 0
    4030:	f0 40       	sbci	r31, 0x00	; 0
    4032:	e1 f7       	brne	.-8      	; 0x402c <main+0x11dc>
    4034:	00 c0       	rjmp	.+0      	; 0x4036 <main+0x11e6>
    4036:	00 00       	nop
            _delay_ms(150);
            stop();
    4038:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        }
        is_block1 = check_block(3);
    403c:	83 e0       	ldi	r24, 0x03	; 3
    403e:	90 e0       	ldi	r25, 0x00	; 0
    4040:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4044:	6c 01       	movw	r12, r24
        is_block2 = check_block(4);
    4046:	84 e0       	ldi	r24, 0x04	; 4
    4048:	90 e0       	ldi	r25, 0x00	; 0
    404a:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    404e:	4c 01       	movw	r8, r24
        is_block3 = check_block(7);
    4050:	87 e0       	ldi	r24, 0x07	; 7
    4052:	90 e0       	ldi	r25, 0x00	; 0
    4054:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4058:	3c 01       	movw	r6, r24
        is_block4 = check_block(8);
    405a:	88 e0       	ldi	r24, 0x08	; 8
    405c:	90 e0       	ldi	r25, 0x00	; 0
    405e:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4062:	2c 01       	movw	r4, r24
        is_block5 = check_block(11);
    4064:	8b e0       	ldi	r24, 0x0B	; 11
    4066:	90 e0       	ldi	r25, 0x00	; 0
    4068:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    406c:	1c 01       	movw	r2, r24
        is_block6 = check_block(12);
    406e:	8c e0       	ldi	r24, 0x0C	; 12
    4070:	90 e0       	ldi	r25, 0x00	; 0
    4072:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
        if (block_placed[2] == 0 && is_block1==1)
    4076:	20 91 ea 04 	lds	r18, 0x04EA
    407a:	30 91 eb 04 	lds	r19, 0x04EB
    407e:	23 2b       	or	r18, r19
    4080:	21 f4       	brne	.+8      	; 0x408a <main+0x123a>
    4082:	ca 94       	dec	r12
    4084:	cd 28       	or	r12, r13
    4086:	09 f4       	brne	.+2      	; 0x408a <main+0x123a>
    4088:	b2 c1       	rjmp	.+868    	; 0x43ee <main+0x159e>
            block = 3;
        else if (block_placed[3] == 0 && is_block2==1)
    408a:	20 91 ec 04 	lds	r18, 0x04EC
    408e:	30 91 ed 04 	lds	r19, 0x04ED
    4092:	23 2b       	or	r18, r19
    4094:	21 f4       	brne	.+8      	; 0x409e <main+0x124e>
    4096:	8a 94       	dec	r8
    4098:	89 28       	or	r8, r9
    409a:	09 f4       	brne	.+2      	; 0x409e <main+0x124e>
    409c:	ae c1       	rjmp	.+860    	; 0x43fa <main+0x15aa>
            block = 4;
        else if (block_placed[6] == 0 && is_block3==1)
    409e:	20 91 f2 04 	lds	r18, 0x04F2
    40a2:	30 91 f3 04 	lds	r19, 0x04F3
    40a6:	23 2b       	or	r18, r19
    40a8:	21 f4       	brne	.+8      	; 0x40b2 <main+0x1262>
    40aa:	6a 94       	dec	r6
    40ac:	67 28       	or	r6, r7
    40ae:	09 f4       	brne	.+2      	; 0x40b2 <main+0x1262>
    40b0:	a9 c1       	rjmp	.+850    	; 0x4404 <main+0x15b4>
            block = 7;
        else if (block_placed[7] == 0 && is_block4==1)
    40b2:	20 91 f4 04 	lds	r18, 0x04F4
    40b6:	30 91 f5 04 	lds	r19, 0x04F5
    40ba:	23 2b       	or	r18, r19
    40bc:	21 f4       	brne	.+8      	; 0x40c6 <main+0x1276>
    40be:	4a 94       	dec	r4
    40c0:	45 28       	or	r4, r5
    40c2:	09 f4       	brne	.+2      	; 0x40c6 <main+0x1276>
    40c4:	a5 c1       	rjmp	.+842    	; 0x4410 <main+0x15c0>
            block = 8;
        else if (block_placed[10] == 0 && is_block5==1)
    40c6:	20 91 fa 04 	lds	r18, 0x04FA
    40ca:	30 91 fb 04 	lds	r19, 0x04FB
    40ce:	23 2b       	or	r18, r19
    40d0:	21 f4       	brne	.+8      	; 0x40da <main+0x128a>
    40d2:	2a 94       	dec	r2
    40d4:	23 28       	or	r2, r3
    40d6:	09 f4       	brne	.+2      	; 0x40da <main+0x128a>
    40d8:	a0 c1       	rjmp	.+832    	; 0x441a <main+0x15ca>
            block = 11;
        else if (block_placed[11] == 0 && is_block6==1)
    40da:	20 91 fc 04 	lds	r18, 0x04FC
    40de:	30 91 fd 04 	lds	r19, 0x04FD
    40e2:	23 2b       	or	r18, r19
    40e4:	09 f0       	breq	.+2      	; 0x40e8 <main+0x1298>
    40e6:	e7 c1       	rjmp	.+974    	; 0x44b6 <main+0x1666>
    40e8:	01 97       	sbiw	r24, 0x01	; 1
    40ea:	09 f0       	breq	.+2      	; 0x40ee <main+0x129e>
    40ec:	e4 c1       	rjmp	.+968    	; 0x44b6 <main+0x1666>
    40ee:	9b c1       	rjmp	.+822    	; 0x4426 <main+0x15d6>
            block = 12;
    }
    else if (house_no == 3)
    40f0:	03 30       	cpi	r16, 0x03	; 3
    40f2:	11 05       	cpc	r17, r1
    40f4:	09 f0       	breq	.+2      	; 0x40f8 <main+0x12a8>
    40f6:	ab c0       	rjmp	.+342    	; 0x424e <main+0x13fe>
    {
        fdir = 'w';
    40f8:	87 e7       	ldi	r24, 0x77	; 119
    40fa:	80 93 85 04 	sts	0x0485, r24
        block_traverse();
    40fe:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <block_traverse>
        back();
    4102:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    4106:	ff ef       	ldi	r31, 0xFF	; 255
    4108:	2f e7       	ldi	r18, 0x7F	; 127
    410a:	84 e0       	ldi	r24, 0x04	; 4
    410c:	f1 50       	subi	r31, 0x01	; 1
    410e:	20 40       	sbci	r18, 0x00	; 0
    4110:	80 40       	sbci	r24, 0x00	; 0
    4112:	e1 f7       	brne	.-8      	; 0x410c <main+0x12bc>
    4114:	00 c0       	rjmp	.+0      	; 0x4116 <main+0x12c6>
    4116:	00 00       	nop
        _delay_ms(100);
        stop();
    4118:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        if (house_config[house_no-1]==0)
    411c:	80 91 7f 04 	lds	r24, 0x047F
    4120:	90 91 80 04 	lds	r25, 0x0480
    4124:	89 2b       	or	r24, r25
    4126:	e9 f4       	brne	.+58     	; 0x4162 <main+0x1312>
        {
            back();
    4128:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    412c:	9f ef       	ldi	r25, 0xFF	; 255
    412e:	ef e7       	ldi	r30, 0x7F	; 127
    4130:	fd e0       	ldi	r31, 0x0D	; 13
    4132:	91 50       	subi	r25, 0x01	; 1
    4134:	e0 40       	sbci	r30, 0x00	; 0
    4136:	f0 40       	sbci	r31, 0x00	; 0
    4138:	e1 f7       	brne	.-8      	; 0x4132 <main+0x12e2>
    413a:	00 c0       	rjmp	.+0      	; 0x413c <main+0x12ec>
    413c:	00 00       	nop
            _delay_ms(300);
            stop();
    413e:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_lr();
    4142:	0e 94 bf 08 	call	0x117e	; 0x117e <place_lr>
            forward();
    4146:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    414a:	2f ef       	ldi	r18, 0xFF	; 255
    414c:	8f eb       	ldi	r24, 0xBF	; 191
    414e:	96 e0       	ldi	r25, 0x06	; 6
    4150:	21 50       	subi	r18, 0x01	; 1
    4152:	80 40       	sbci	r24, 0x00	; 0
    4154:	90 40       	sbci	r25, 0x00	; 0
    4156:	e1 f7       	brne	.-8      	; 0x4150 <main+0x1300>
    4158:	00 c0       	rjmp	.+0      	; 0x415a <main+0x130a>
    415a:	00 00       	nop
            _delay_ms(150);
            stop();
    415c:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    4160:	1c c0       	rjmp	.+56     	; 0x419a <main+0x134a>
        }
        else
        {
            back();
    4162:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    4166:	ef ef       	ldi	r30, 0xFF	; 255
    4168:	ff e7       	ldi	r31, 0x7F	; 127
    416a:	2d e0       	ldi	r18, 0x0D	; 13
    416c:	e1 50       	subi	r30, 0x01	; 1
    416e:	f0 40       	sbci	r31, 0x00	; 0
    4170:	20 40       	sbci	r18, 0x00	; 0
    4172:	e1 f7       	brne	.-8      	; 0x416c <main+0x131c>
    4174:	00 c0       	rjmp	.+0      	; 0x4176 <main+0x1326>
    4176:	00 00       	nop
            _delay_ms(300);
            stop();
    4178:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_hr();
    417c:	0e 94 30 09 	call	0x1260	; 0x1260 <place_hr>
            forward();
    4180:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    4184:	8f ef       	ldi	r24, 0xFF	; 255
    4186:	9f eb       	ldi	r25, 0xBF	; 191
    4188:	e6 e0       	ldi	r30, 0x06	; 6
    418a:	81 50       	subi	r24, 0x01	; 1
    418c:	90 40       	sbci	r25, 0x00	; 0
    418e:	e0 40       	sbci	r30, 0x00	; 0
    4190:	e1 f7       	brne	.-8      	; 0x418a <main+0x133a>
    4192:	00 c0       	rjmp	.+0      	; 0x4194 <main+0x1344>
    4194:	00 00       	nop
            _delay_ms(150);
            stop();
    4196:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        }
        is_block1 = check_block(5);
    419a:	85 e0       	ldi	r24, 0x05	; 5
    419c:	90 e0       	ldi	r25, 0x00	; 0
    419e:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    41a2:	4c 01       	movw	r8, r24
        is_block2 = check_block(6);
    41a4:	86 e0       	ldi	r24, 0x06	; 6
    41a6:	90 e0       	ldi	r25, 0x00	; 0
    41a8:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    41ac:	6c 01       	movw	r12, r24
        is_block3 = check_block(9);
    41ae:	89 e0       	ldi	r24, 0x09	; 9
    41b0:	90 e0       	ldi	r25, 0x00	; 0
    41b2:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    41b6:	3c 01       	movw	r6, r24
        is_block4 = check_block(10);
    41b8:	8a e0       	ldi	r24, 0x0A	; 10
    41ba:	90 e0       	ldi	r25, 0x00	; 0
    41bc:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    41c0:	2c 01       	movw	r4, r24
        is_block5 = check_block(1);
    41c2:	81 e0       	ldi	r24, 0x01	; 1
    41c4:	90 e0       	ldi	r25, 0x00	; 0
    41c6:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    41ca:	1c 01       	movw	r2, r24
        is_block6 = check_block(2);
    41cc:	82 e0       	ldi	r24, 0x02	; 2
    41ce:	90 e0       	ldi	r25, 0x00	; 0
    41d0:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
        if (block_placed[4] == 0 && is_block1==1)
    41d4:	20 91 ee 04 	lds	r18, 0x04EE
    41d8:	30 91 ef 04 	lds	r19, 0x04EF
    41dc:	23 2b       	or	r18, r19
    41de:	21 f4       	brne	.+8      	; 0x41e8 <main+0x1398>
    41e0:	8a 94       	dec	r8
    41e2:	89 28       	or	r8, r9
    41e4:	09 f4       	brne	.+2      	; 0x41e8 <main+0x1398>
    41e6:	25 c1       	rjmp	.+586    	; 0x4432 <main+0x15e2>
            block = 5;
        else if (block_placed[5] == 0 && is_block2==1)
    41e8:	20 91 f0 04 	lds	r18, 0x04F0
    41ec:	30 91 f1 04 	lds	r19, 0x04F1
    41f0:	23 2b       	or	r18, r19
    41f2:	21 f4       	brne	.+8      	; 0x41fc <main+0x13ac>
    41f4:	ca 94       	dec	r12
    41f6:	cd 28       	or	r12, r13
    41f8:	09 f4       	brne	.+2      	; 0x41fc <main+0x13ac>
    41fa:	21 c1       	rjmp	.+578    	; 0x443e <main+0x15ee>
            block = 6;
        else if (block_placed[8] == 0 && is_block3==1)
    41fc:	20 91 f6 04 	lds	r18, 0x04F6
    4200:	30 91 f7 04 	lds	r19, 0x04F7
    4204:	23 2b       	or	r18, r19
    4206:	21 f4       	brne	.+8      	; 0x4210 <main+0x13c0>
    4208:	6a 94       	dec	r6
    420a:	67 28       	or	r6, r7
    420c:	09 f4       	brne	.+2      	; 0x4210 <main+0x13c0>
    420e:	1d c1       	rjmp	.+570    	; 0x444a <main+0x15fa>
            block = 9;
        else if (block_placed[9] == 0 && is_block4==1)
    4210:	20 91 f8 04 	lds	r18, 0x04F8
    4214:	30 91 f9 04 	lds	r19, 0x04F9
    4218:	23 2b       	or	r18, r19
    421a:	21 f4       	brne	.+8      	; 0x4224 <main+0x13d4>
    421c:	4a 94       	dec	r4
    421e:	45 28       	or	r4, r5
    4220:	09 f4       	brne	.+2      	; 0x4224 <main+0x13d4>
    4222:	19 c1       	rjmp	.+562    	; 0x4456 <main+0x1606>
            block = 10;
        else if (block_placed[0] == 0 && is_block5==1)
    4224:	20 91 e6 04 	lds	r18, 0x04E6
    4228:	30 91 e7 04 	lds	r19, 0x04E7
    422c:	23 2b       	or	r18, r19
    422e:	21 f4       	brne	.+8      	; 0x4238 <main+0x13e8>
    4230:	2a 94       	dec	r2
    4232:	23 28       	or	r2, r3
    4234:	09 f4       	brne	.+2      	; 0x4238 <main+0x13e8>
    4236:	15 c1       	rjmp	.+554    	; 0x4462 <main+0x1612>
            block = 1;
        else if (block_placed[1] == 0 && is_block6==1)
    4238:	20 91 e8 04 	lds	r18, 0x04E8
    423c:	30 91 e9 04 	lds	r19, 0x04E9
    4240:	23 2b       	or	r18, r19
    4242:	09 f0       	breq	.+2      	; 0x4246 <main+0x13f6>
    4244:	38 c1       	rjmp	.+624    	; 0x44b6 <main+0x1666>
    4246:	01 97       	sbiw	r24, 0x01	; 1
    4248:	09 f0       	breq	.+2      	; 0x424c <main+0x13fc>
    424a:	35 c1       	rjmp	.+618    	; 0x44b6 <main+0x1666>
    424c:	0e c1       	rjmp	.+540    	; 0x446a <main+0x161a>
            block = 2;
    }
    else if (house_no == 4)
    424e:	04 30       	cpi	r16, 0x04	; 4
    4250:	11 05       	cpc	r17, r1
    4252:	09 f0       	breq	.+2      	; 0x4256 <main+0x1406>
    4254:	30 c1       	rjmp	.+608    	; 0x44b6 <main+0x1666>
    {
        fdir = 'e';
    4256:	85 e6       	ldi	r24, 0x65	; 101
    4258:	80 93 85 04 	sts	0x0485, r24
        block_traverse();
    425c:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <block_traverse>
        back();
    4260:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    4264:	8f ef       	ldi	r24, 0xFF	; 255
    4266:	9f e7       	ldi	r25, 0x7F	; 127
    4268:	e4 e0       	ldi	r30, 0x04	; 4
    426a:	81 50       	subi	r24, 0x01	; 1
    426c:	90 40       	sbci	r25, 0x00	; 0
    426e:	e0 40       	sbci	r30, 0x00	; 0
    4270:	e1 f7       	brne	.-8      	; 0x426a <main+0x141a>
    4272:	00 c0       	rjmp	.+0      	; 0x4274 <main+0x1424>
    4274:	00 00       	nop
        _delay_ms(100);
        stop();
    4276:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        if (house_config[house_no-1]==0)
    427a:	80 91 81 04 	lds	r24, 0x0481
    427e:	90 91 82 04 	lds	r25, 0x0482
    4282:	89 2b       	or	r24, r25
    4284:	e9 f4       	brne	.+58     	; 0x42c0 <main+0x1470>
        {
            back();
    4286:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    428a:	ff ef       	ldi	r31, 0xFF	; 255
    428c:	2f e7       	ldi	r18, 0x7F	; 127
    428e:	8d e0       	ldi	r24, 0x0D	; 13
    4290:	f1 50       	subi	r31, 0x01	; 1
    4292:	20 40       	sbci	r18, 0x00	; 0
    4294:	80 40       	sbci	r24, 0x00	; 0
    4296:	e1 f7       	brne	.-8      	; 0x4290 <main+0x1440>
    4298:	00 c0       	rjmp	.+0      	; 0x429a <main+0x144a>
    429a:	00 00       	nop
            _delay_ms(300);
            stop();
    429c:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_lr();
    42a0:	0e 94 bf 08 	call	0x117e	; 0x117e <place_lr>
            forward();
    42a4:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    42a8:	9f ef       	ldi	r25, 0xFF	; 255
    42aa:	ef eb       	ldi	r30, 0xBF	; 191
    42ac:	f6 e0       	ldi	r31, 0x06	; 6
    42ae:	91 50       	subi	r25, 0x01	; 1
    42b0:	e0 40       	sbci	r30, 0x00	; 0
    42b2:	f0 40       	sbci	r31, 0x00	; 0
    42b4:	e1 f7       	brne	.-8      	; 0x42ae <main+0x145e>
    42b6:	00 c0       	rjmp	.+0      	; 0x42b8 <main+0x1468>
    42b8:	00 00       	nop
            _delay_ms(150);
            stop();
    42ba:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    42be:	1c c0       	rjmp	.+56     	; 0x42f8 <main+0x14a8>
        }
        else
        {
            back();
    42c0:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    42c4:	2f ef       	ldi	r18, 0xFF	; 255
    42c6:	8f e7       	ldi	r24, 0x7F	; 127
    42c8:	9d e0       	ldi	r25, 0x0D	; 13
    42ca:	21 50       	subi	r18, 0x01	; 1
    42cc:	80 40       	sbci	r24, 0x00	; 0
    42ce:	90 40       	sbci	r25, 0x00	; 0
    42d0:	e1 f7       	brne	.-8      	; 0x42ca <main+0x147a>
    42d2:	00 c0       	rjmp	.+0      	; 0x42d4 <main+0x1484>
    42d4:	00 00       	nop
            _delay_ms(300);
            stop();
    42d6:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_hr();
    42da:	0e 94 30 09 	call	0x1260	; 0x1260 <place_hr>
            forward();
    42de:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    42e2:	ef ef       	ldi	r30, 0xFF	; 255
    42e4:	ff eb       	ldi	r31, 0xBF	; 191
    42e6:	26 e0       	ldi	r18, 0x06	; 6
    42e8:	e1 50       	subi	r30, 0x01	; 1
    42ea:	f0 40       	sbci	r31, 0x00	; 0
    42ec:	20 40       	sbci	r18, 0x00	; 0
    42ee:	e1 f7       	brne	.-8      	; 0x42e8 <main+0x1498>
    42f0:	00 c0       	rjmp	.+0      	; 0x42f2 <main+0x14a2>
    42f2:	00 00       	nop
            _delay_ms(150);
            stop();
    42f4:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        }
        is_block1 = check_block(7);
    42f8:	87 e0       	ldi	r24, 0x07	; 7
    42fa:	90 e0       	ldi	r25, 0x00	; 0
    42fc:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4300:	6c 01       	movw	r12, r24
        is_block2 = check_block(8);
    4302:	88 e0       	ldi	r24, 0x08	; 8
    4304:	90 e0       	ldi	r25, 0x00	; 0
    4306:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    430a:	4c 01       	movw	r8, r24
        is_block3 = check_block(11);
    430c:	8b e0       	ldi	r24, 0x0B	; 11
    430e:	90 e0       	ldi	r25, 0x00	; 0
    4310:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4314:	3c 01       	movw	r6, r24
        is_block4 = check_block(12);
    4316:	8c e0       	ldi	r24, 0x0C	; 12
    4318:	90 e0       	ldi	r25, 0x00	; 0
    431a:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    431e:	2c 01       	movw	r4, r24
        is_block5 = check_block(3);
    4320:	83 e0       	ldi	r24, 0x03	; 3
    4322:	90 e0       	ldi	r25, 0x00	; 0
    4324:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4328:	1c 01       	movw	r2, r24
        is_block6 = check_block(4);
    432a:	84 e0       	ldi	r24, 0x04	; 4
    432c:	90 e0       	ldi	r25, 0x00	; 0
    432e:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
        if (block_placed[6] == 0 && is_block1==1)
    4332:	20 91 f2 04 	lds	r18, 0x04F2
    4336:	30 91 f3 04 	lds	r19, 0x04F3
    433a:	23 2b       	or	r18, r19
    433c:	21 f4       	brne	.+8      	; 0x4346 <main+0x14f6>
    433e:	ca 94       	dec	r12
    4340:	cd 28       	or	r12, r13
    4342:	09 f4       	brne	.+2      	; 0x4346 <main+0x14f6>
    4344:	97 c0       	rjmp	.+302    	; 0x4474 <main+0x1624>
            block = 7;
        else if (block_placed[7] == 0 && is_block2==1)
    4346:	20 91 f4 04 	lds	r18, 0x04F4
    434a:	30 91 f5 04 	lds	r19, 0x04F5
    434e:	23 2b       	or	r18, r19
    4350:	21 f4       	brne	.+8      	; 0x435a <main+0x150a>
    4352:	8a 94       	dec	r8
    4354:	89 28       	or	r8, r9
    4356:	09 f4       	brne	.+2      	; 0x435a <main+0x150a>
    4358:	93 c0       	rjmp	.+294    	; 0x4480 <main+0x1630>
            block = 8;
        else if (block_placed[10] == 0 && is_block3==1)
    435a:	20 91 fa 04 	lds	r18, 0x04FA
    435e:	30 91 fb 04 	lds	r19, 0x04FB
    4362:	23 2b       	or	r18, r19
    4364:	21 f4       	brne	.+8      	; 0x436e <main+0x151e>
    4366:	6a 94       	dec	r6
    4368:	67 28       	or	r6, r7
    436a:	09 f4       	brne	.+2      	; 0x436e <main+0x151e>
    436c:	8e c0       	rjmp	.+284    	; 0x448a <main+0x163a>
            block = 11;
        else if (block_placed[11] == 0 && is_block4==1)
    436e:	20 91 fc 04 	lds	r18, 0x04FC
    4372:	30 91 fd 04 	lds	r19, 0x04FD
    4376:	23 2b       	or	r18, r19
    4378:	21 f4       	brne	.+8      	; 0x4382 <main+0x1532>
    437a:	4a 94       	dec	r4
    437c:	45 28       	or	r4, r5
    437e:	09 f4       	brne	.+2      	; 0x4382 <main+0x1532>
    4380:	8a c0       	rjmp	.+276    	; 0x4496 <main+0x1646>
            block = 12;
        else if (block_placed[2] == 0 && is_block5==1)
    4382:	20 91 ea 04 	lds	r18, 0x04EA
    4386:	30 91 eb 04 	lds	r19, 0x04EB
    438a:	23 2b       	or	r18, r19
    438c:	21 f4       	brne	.+8      	; 0x4396 <main+0x1546>
    438e:	2a 94       	dec	r2
    4390:	23 28       	or	r2, r3
    4392:	09 f4       	brne	.+2      	; 0x4396 <main+0x1546>
    4394:	86 c0       	rjmp	.+268    	; 0x44a2 <main+0x1652>
            block = 3;
        else if (block_placed[3] == 0 && is_block6==1)
    4396:	20 91 ec 04 	lds	r18, 0x04EC
    439a:	30 91 ed 04 	lds	r19, 0x04ED
    439e:	23 2b       	or	r18, r19
    43a0:	09 f0       	breq	.+2      	; 0x43a4 <main+0x1554>
    43a2:	89 c0       	rjmp	.+274    	; 0x44b6 <main+0x1666>
    43a4:	01 97       	sbiw	r24, 0x01	; 1
    43a6:	09 f0       	breq	.+2      	; 0x43aa <main+0x155a>
    43a8:	86 c0       	rjmp	.+268    	; 0x44b6 <main+0x1666>
    43aa:	81 c0       	rjmp	.+258    	; 0x44ae <main+0x165e>
        is_block3 = check_block(5);
        is_block4 = check_block(6);
        is_block5 = check_block(9);
        is_block6 = check_block(10);
        if (block_placed[0] == 0 && is_block1==1)
            block = 1;
    43ac:	aa 24       	eor	r10, r10
    43ae:	a3 94       	inc	r10
    43b0:	b1 2c       	mov	r11, r1
    43b2:	81 c0       	rjmp	.+258    	; 0x44b6 <main+0x1666>
        else if (block_placed[1] == 0 && is_block2==1)
            block = 2;
    43b4:	68 94       	set
    43b6:	aa 24       	eor	r10, r10
    43b8:	a1 f8       	bld	r10, 1
    43ba:	b1 2c       	mov	r11, r1
    43bc:	7c c0       	rjmp	.+248    	; 0x44b6 <main+0x1666>
        else if (block_placed[4] == 0 && is_block3==1)
            block = 5;
    43be:	0f 2e       	mov	r0, r31
    43c0:	f5 e0       	ldi	r31, 0x05	; 5
    43c2:	af 2e       	mov	r10, r31
    43c4:	b1 2c       	mov	r11, r1
    43c6:	f0 2d       	mov	r31, r0
    43c8:	76 c0       	rjmp	.+236    	; 0x44b6 <main+0x1666>
        else if (block_placed[5] == 0 && is_block4==1)
            block = 6;
    43ca:	0f 2e       	mov	r0, r31
    43cc:	f6 e0       	ldi	r31, 0x06	; 6
    43ce:	af 2e       	mov	r10, r31
    43d0:	b1 2c       	mov	r11, r1
    43d2:	f0 2d       	mov	r31, r0
    43d4:	70 c0       	rjmp	.+224    	; 0x44b6 <main+0x1666>
        else if (block_placed[8] == 0 && is_block5==1)
            block = 9;
    43d6:	0f 2e       	mov	r0, r31
    43d8:	f9 e0       	ldi	r31, 0x09	; 9
    43da:	af 2e       	mov	r10, r31
    43dc:	b1 2c       	mov	r11, r1
    43de:	f0 2d       	mov	r31, r0
    43e0:	6a c0       	rjmp	.+212    	; 0x44b6 <main+0x1666>
        else if (block_placed[9] == 0 && is_block6==1)
            block = 10;
    43e2:	0f 2e       	mov	r0, r31
    43e4:	fa e0       	ldi	r31, 0x0A	; 10
    43e6:	af 2e       	mov	r10, r31
    43e8:	b1 2c       	mov	r11, r1
    43ea:	f0 2d       	mov	r31, r0
    43ec:	64 c0       	rjmp	.+200    	; 0x44b6 <main+0x1666>
        is_block3 = check_block(7);
        is_block4 = check_block(8);
        is_block5 = check_block(11);
        is_block6 = check_block(12);
        if (block_placed[2] == 0 && is_block1==1)
            block = 3;
    43ee:	0f 2e       	mov	r0, r31
    43f0:	f3 e0       	ldi	r31, 0x03	; 3
    43f2:	af 2e       	mov	r10, r31
    43f4:	b1 2c       	mov	r11, r1
    43f6:	f0 2d       	mov	r31, r0
    43f8:	5e c0       	rjmp	.+188    	; 0x44b6 <main+0x1666>
        else if (block_placed[3] == 0 && is_block2==1)
            block = 4;
    43fa:	68 94       	set
    43fc:	aa 24       	eor	r10, r10
    43fe:	a2 f8       	bld	r10, 2
    4400:	b1 2c       	mov	r11, r1
    4402:	59 c0       	rjmp	.+178    	; 0x44b6 <main+0x1666>
        else if (block_placed[6] == 0 && is_block3==1)
            block = 7;
    4404:	0f 2e       	mov	r0, r31
    4406:	f7 e0       	ldi	r31, 0x07	; 7
    4408:	af 2e       	mov	r10, r31
    440a:	b1 2c       	mov	r11, r1
    440c:	f0 2d       	mov	r31, r0
    440e:	53 c0       	rjmp	.+166    	; 0x44b6 <main+0x1666>
        else if (block_placed[7] == 0 && is_block4==1)
            block = 8;
    4410:	68 94       	set
    4412:	aa 24       	eor	r10, r10
    4414:	a3 f8       	bld	r10, 3
    4416:	b1 2c       	mov	r11, r1
    4418:	4e c0       	rjmp	.+156    	; 0x44b6 <main+0x1666>
        else if (block_placed[10] == 0 && is_block5==1)
            block = 11;
    441a:	0f 2e       	mov	r0, r31
    441c:	fb e0       	ldi	r31, 0x0B	; 11
    441e:	af 2e       	mov	r10, r31
    4420:	b1 2c       	mov	r11, r1
    4422:	f0 2d       	mov	r31, r0
    4424:	48 c0       	rjmp	.+144    	; 0x44b6 <main+0x1666>
        else if (block_placed[11] == 0 && is_block6==1)
            block = 12;
    4426:	0f 2e       	mov	r0, r31
    4428:	fc e0       	ldi	r31, 0x0C	; 12
    442a:	af 2e       	mov	r10, r31
    442c:	b1 2c       	mov	r11, r1
    442e:	f0 2d       	mov	r31, r0
    4430:	42 c0       	rjmp	.+132    	; 0x44b6 <main+0x1666>
        is_block3 = check_block(9);
        is_block4 = check_block(10);
        is_block5 = check_block(1);
        is_block6 = check_block(2);
        if (block_placed[4] == 0 && is_block1==1)
            block = 5;
    4432:	0f 2e       	mov	r0, r31
    4434:	f5 e0       	ldi	r31, 0x05	; 5
    4436:	af 2e       	mov	r10, r31
    4438:	b1 2c       	mov	r11, r1
    443a:	f0 2d       	mov	r31, r0
    443c:	3c c0       	rjmp	.+120    	; 0x44b6 <main+0x1666>
        else if (block_placed[5] == 0 && is_block2==1)
            block = 6;
    443e:	0f 2e       	mov	r0, r31
    4440:	f6 e0       	ldi	r31, 0x06	; 6
    4442:	af 2e       	mov	r10, r31
    4444:	b1 2c       	mov	r11, r1
    4446:	f0 2d       	mov	r31, r0
    4448:	36 c0       	rjmp	.+108    	; 0x44b6 <main+0x1666>
        else if (block_placed[8] == 0 && is_block3==1)
            block = 9;
    444a:	0f 2e       	mov	r0, r31
    444c:	f9 e0       	ldi	r31, 0x09	; 9
    444e:	af 2e       	mov	r10, r31
    4450:	b1 2c       	mov	r11, r1
    4452:	f0 2d       	mov	r31, r0
    4454:	30 c0       	rjmp	.+96     	; 0x44b6 <main+0x1666>
        else if (block_placed[9] == 0 && is_block4==1)
            block = 10;
    4456:	0f 2e       	mov	r0, r31
    4458:	fa e0       	ldi	r31, 0x0A	; 10
    445a:	af 2e       	mov	r10, r31
    445c:	b1 2c       	mov	r11, r1
    445e:	f0 2d       	mov	r31, r0
    4460:	2a c0       	rjmp	.+84     	; 0x44b6 <main+0x1666>
        else if (block_placed[0] == 0 && is_block5==1)
            block = 1;
    4462:	aa 24       	eor	r10, r10
    4464:	a3 94       	inc	r10
    4466:	b1 2c       	mov	r11, r1
    4468:	26 c0       	rjmp	.+76     	; 0x44b6 <main+0x1666>
        else if (block_placed[1] == 0 && is_block6==1)
            block = 2;
    446a:	68 94       	set
    446c:	aa 24       	eor	r10, r10
    446e:	a1 f8       	bld	r10, 1
    4470:	b1 2c       	mov	r11, r1
    4472:	21 c0       	rjmp	.+66     	; 0x44b6 <main+0x1666>
        is_block3 = check_block(11);
        is_block4 = check_block(12);
        is_block5 = check_block(3);
        is_block6 = check_block(4);
        if (block_placed[6] == 0 && is_block1==1)
            block = 7;
    4474:	0f 2e       	mov	r0, r31
    4476:	f7 e0       	ldi	r31, 0x07	; 7
    4478:	af 2e       	mov	r10, r31
    447a:	b1 2c       	mov	r11, r1
    447c:	f0 2d       	mov	r31, r0
    447e:	1b c0       	rjmp	.+54     	; 0x44b6 <main+0x1666>
        else if (block_placed[7] == 0 && is_block2==1)
            block = 8;
    4480:	68 94       	set
    4482:	aa 24       	eor	r10, r10
    4484:	a3 f8       	bld	r10, 3
    4486:	b1 2c       	mov	r11, r1
    4488:	16 c0       	rjmp	.+44     	; 0x44b6 <main+0x1666>
        else if (block_placed[10] == 0 && is_block3==1)
            block = 11;
    448a:	0f 2e       	mov	r0, r31
    448c:	fb e0       	ldi	r31, 0x0B	; 11
    448e:	af 2e       	mov	r10, r31
    4490:	b1 2c       	mov	r11, r1
    4492:	f0 2d       	mov	r31, r0
    4494:	10 c0       	rjmp	.+32     	; 0x44b6 <main+0x1666>
        else if (block_placed[11] == 0 && is_block4==1)
            block = 12;
    4496:	0f 2e       	mov	r0, r31
    4498:	fc e0       	ldi	r31, 0x0C	; 12
    449a:	af 2e       	mov	r10, r31
    449c:	b1 2c       	mov	r11, r1
    449e:	f0 2d       	mov	r31, r0
    44a0:	0a c0       	rjmp	.+20     	; 0x44b6 <main+0x1666>
        else if (block_placed[2] == 0 && is_block5==1)
            block = 3;
    44a2:	0f 2e       	mov	r0, r31
    44a4:	f3 e0       	ldi	r31, 0x03	; 3
    44a6:	af 2e       	mov	r10, r31
    44a8:	b1 2c       	mov	r11, r1
    44aa:	f0 2d       	mov	r31, r0
    44ac:	04 c0       	rjmp	.+8      	; 0x44b6 <main+0x1666>
        else if (block_placed[3] == 0 && is_block6==1)
            block = 4;
    44ae:	68 94       	set
    44b0:	aa 24       	eor	r10, r10
    44b2:	a2 f8       	bld	r10, 2
    44b4:	b1 2c       	mov	r11, r1
    }
    free(path);
    44b6:	c7 01       	movw	r24, r14
    44b8:	0e 94 80 2b 	call	0x5700	; 0x5700 <free>
    len = 0;
    44bc:	1a 82       	std	Y+2, r1	; 0x02
    44be:	19 82       	std	Y+1, r1	; 0x01
    bnode = which_node(block);
    44c0:	c5 01       	movw	r24, r10
    44c2:	0e 94 a6 04 	call	0x94c	; 0x94c <which_node>
    44c6:	6c 01       	movw	r12, r24
    dijkstra(G,n,u);
    44c8:	40 91 fe 04 	lds	r20, 0x04FE
    44cc:	50 91 ff 04 	lds	r21, 0x04FF
    44d0:	60 91 87 04 	lds	r22, 0x0487
    44d4:	70 91 88 04 	lds	r23, 0x0488
    44d8:	8e e7       	ldi	r24, 0x7E	; 126
    44da:	92 e0       	ldi	r25, 0x02	; 2
    44dc:	0e 94 94 02 	call	0x528	; 0x528 <dijkstra>
    //printf("Dijkstra Completed\n");
    //printf("Block - %d\n", block);
    //printf("Node - %d\n", bnode);
    dist_comp(bnode,bnode,path,&len);
    44e0:	9e 01       	movw	r18, r28
    44e2:	2f 5f       	subi	r18, 0xFF	; 255
    44e4:	3f 4f       	sbci	r19, 0xFF	; 255
    44e6:	a7 01       	movw	r20, r14
    44e8:	b6 01       	movw	r22, r12
    44ea:	c6 01       	movw	r24, r12
    44ec:	0e 94 15 04 	call	0x82a	; 0x82a <dist_comp>
    //printf("Dist compare Completed\n");
    for(int p = 0; p<len; p++)
    44f0:	89 81       	ldd	r24, Y+1	; 0x01
    44f2:	9a 81       	ldd	r25, Y+2	; 0x02
    44f4:	18 16       	cp	r1, r24
    44f6:	19 06       	cpc	r1, r25
    44f8:	3c f4       	brge	.+14     	; 0x4508 <main+0x16b8>
    44fa:	20 e0       	ldi	r18, 0x00	; 0
    44fc:	30 e0       	ldi	r19, 0x00	; 0
    44fe:	2f 5f       	subi	r18, 0xFF	; 255
    4500:	3f 4f       	sbci	r19, 0xFF	; 255
    4502:	28 17       	cp	r18, r24
    4504:	39 07       	cpc	r19, r25
    4506:	d9 f7       	brne	.-10     	; 0x44fe <main+0x16ae>
    {
        //printf("%d\n",path[p]);
        //lcd_print(1,2*p,path[p],2);
    }
    traverse(path,u,&len);
    4508:	60 91 fe 04 	lds	r22, 0x04FE
    450c:	70 91 ff 04 	lds	r23, 0x04FF
    4510:	ae 01       	movw	r20, r28
    4512:	4f 5f       	subi	r20, 0xFF	; 255
    4514:	5f 4f       	sbci	r21, 0xFF	; 255
    4516:	c7 01       	movw	r24, r14
    4518:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <traverse>
    //printf("Traverse Completed\n");
    free(path);
    451c:	c7 01       	movw	r24, r14
    451e:	0e 94 80 2b 	call	0x5700	; 0x5700 <free>
    len = 0;
    4522:	1a 82       	std	Y+2, r1	; 0x02
    4524:	19 82       	std	Y+1, r1	; 0x01
    block_choose2(block,block_placed);
    4526:	66 ee       	ldi	r22, 0xE6	; 230
    4528:	74 e0       	ldi	r23, 0x04	; 4
    452a:	c5 01       	movw	r24, r10
    452c:	0e 94 25 16 	call	0x2c4a	; 0x2c4a <block_choose2>
    //printf("Block Choose Completed\n");
    u = bnode;
    4530:	d0 92 ff 04 	sts	0x04FF, r13
    4534:	c0 92 fe 04 	sts	0x04FE, r12
    4538:	e7 e6       	ldi	r30, 0x67	; 103
    453a:	f4 e0       	ldi	r31, 0x04	; 4
    for (int i = 0; i < 10; i++)
    453c:	80 e0       	ldi	r24, 0x00	; 0
    453e:	90 e0       	ldi	r25, 0x00	; 0
                break;
            }
        }
        else
        {
            house_no = -1;
    4540:	7f ef       	ldi	r23, 0xFF	; 255
    4542:	6f ef       	ldi	r22, 0xFF	; 255
    block_choose2(block,block_placed);
    //printf("Block Choose Completed\n");
    u = bnode;
    for (int i = 0; i < 10; i++)
    {
        if (which_material[i] == block)
    4544:	21 91       	ld	r18, Z+
    4546:	31 91       	ld	r19, Z+
    4548:	2a 15       	cp	r18, r10
    454a:	3b 05       	cpc	r19, r11
    454c:	c1 f4       	brne	.+48     	; 0x457e <main+0x172e>
    454e:	9c 01       	movw	r18, r24
        {
            if (i==0)
    4550:	82 30       	cpi	r24, 0x02	; 2
    4552:	91 05       	cpc	r25, r1
    4554:	08 f4       	brcc	.+2      	; 0x4558 <main+0x1708>
    4556:	77 c6       	rjmp	.+3310   	; 0x5246 <main+0x23f6>
    4558:	ac 01       	movw	r20, r24
    455a:	42 50       	subi	r20, 0x02	; 2
    455c:	51 09       	sbc	r21, r1
            else if (i==1)
            {
                house_no = 1;
                break;
            }
            else if (i==2)
    455e:	42 30       	cpi	r20, 0x02	; 2
    4560:	51 05       	cpc	r21, r1
    4562:	08 f4       	brcc	.+2      	; 0x4566 <main+0x1716>
    4564:	73 c6       	rjmp	.+3302   	; 0x524c <main+0x23fc>
    4566:	42 50       	subi	r20, 0x02	; 2
    4568:	51 09       	sbc	r21, r1
            else if (i==3)
            {
                house_no = 2;
                break;
            }
            else if (i==4)
    456a:	42 30       	cpi	r20, 0x02	; 2
    456c:	51 05       	cpc	r21, r1
    456e:	08 f4       	brcc	.+2      	; 0x4572 <main+0x1722>
    4570:	70 c6       	rjmp	.+3296   	; 0x5252 <main+0x2402>
    4572:	26 50       	subi	r18, 0x06	; 6
    4574:	31 09       	sbc	r19, r1
            else if (i==5)
            {
                house_no = 3;
                break;
            }
            else if (i==6)
    4576:	22 30       	cpi	r18, 0x02	; 2
    4578:	31 05       	cpc	r19, r1
    457a:	18 f4       	brcc	.+6      	; 0x4582 <main+0x1732>
    457c:	6d c6       	rjmp	.+3290   	; 0x5258 <main+0x2408>
                break;
            }
        }
        else
        {
            house_no = -1;
    457e:	07 2f       	mov	r16, r23
    4580:	16 2f       	mov	r17, r22
    free(path);
    len = 0;
    block_choose2(block,block_placed);
    //printf("Block Choose Completed\n");
    u = bnode;
    for (int i = 0; i < 10; i++)
    4582:	01 96       	adiw	r24, 0x01	; 1
    4584:	8a 30       	cpi	r24, 0x0A	; 10
    4586:	91 05       	cpc	r25, r1
    4588:	e9 f6       	brne	.-70     	; 0x4544 <main+0x16f4>
        else
        {
            house_no = -1;
        }
    }
    if (house_no != -1)
    458a:	0f 3f       	cpi	r16, 0xFF	; 255
    458c:	2f ef       	ldi	r18, 0xFF	; 255
    458e:	12 07       	cpc	r17, r18
    4590:	79 f0       	breq	.+30     	; 0x45b0 <main+0x1760>
    {
        m_pick();
    4592:	0e 94 9e 06 	call	0xd3c	; 0xd3c <m_pick>
        forward();
    4596:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    459a:	8f ef       	ldi	r24, 0xFF	; 255
    459c:	9f eb       	ldi	r25, 0xBF	; 191
    459e:	e6 e0       	ldi	r30, 0x06	; 6
    45a0:	81 50       	subi	r24, 0x01	; 1
    45a2:	90 40       	sbci	r25, 0x00	; 0
    45a4:	e0 40       	sbci	r30, 0x00	; 0
    45a6:	e1 f7       	brne	.-8      	; 0x45a0 <main+0x1750>
    45a8:	00 c0       	rjmp	.+0      	; 0x45aa <main+0x175a>
    45aa:	00 00       	nop
        _delay_ms(150);
        stop();
    45ac:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    }
    if (block == which_material[2*house_no - 1])
    45b0:	c8 01       	movw	r24, r16
    45b2:	88 0f       	add	r24, r24
    45b4:	99 1f       	adc	r25, r25
    45b6:	fc 01       	movw	r30, r24
    45b8:	ee 0f       	add	r30, r30
    45ba:	ff 1f       	adc	r31, r31
    45bc:	eb 59       	subi	r30, 0x9B	; 155
    45be:	fb 4f       	sbci	r31, 0xFB	; 251
    45c0:	c0 80       	ld	r12, Z
    45c2:	d1 80       	ldd	r13, Z+1	; 0x01
    45c4:	ca 14       	cp	r12, r10
    45c6:	db 04       	cpc	r13, r11
    45c8:	39 f4       	brne	.+14     	; 0x45d8 <main+0x1788>
    {
        block = which_material[2*house_no - 2];
    45ca:	fc 01       	movw	r30, r24
    45cc:	ee 0f       	add	r30, r30
    45ce:	ff 1f       	adc	r31, r31
    45d0:	ed 59       	subi	r30, 0x9D	; 157
    45d2:	fb 4f       	sbci	r31, 0xFB	; 251
    45d4:	c0 80       	ld	r12, Z
    45d6:	d1 80       	ldd	r13, Z+1	; 0x01
    }
    else
    {
        block = which_material[2*house_no - 1];
    }
    if (block != 0)
    45d8:	c1 14       	cp	r12, r1
    45da:	d1 04       	cpc	r13, r1
    45dc:	09 f4       	brne	.+2      	; 0x45e0 <main+0x1790>
    45de:	44 c0       	rjmp	.+136    	; 0x4668 <main+0x1818>
    {
        dijkstra(G,n,u);
    45e0:	40 91 fe 04 	lds	r20, 0x04FE
    45e4:	50 91 ff 04 	lds	r21, 0x04FF
    45e8:	60 91 87 04 	lds	r22, 0x0487
    45ec:	70 91 88 04 	lds	r23, 0x0488
    45f0:	8e e7       	ldi	r24, 0x7E	; 126
    45f2:	92 e0       	ldi	r25, 0x02	; 2
    45f4:	0e 94 94 02 	call	0x528	; 0x528 <dijkstra>
        //printf("Dijkstra Completed\n");
        bnode = which_node(block);
    45f8:	c6 01       	movw	r24, r12
    45fa:	0e 94 a6 04 	call	0x94c	; 0x94c <which_node>
        dist_comp(bnode,bnode,path,&len);
    45fe:	9e 01       	movw	r18, r28
    4600:	2f 5f       	subi	r18, 0xFF	; 255
    4602:	3f 4f       	sbci	r19, 0xFF	; 255
    4604:	a7 01       	movw	r20, r14
    4606:	bc 01       	movw	r22, r24
    4608:	0e 94 15 04 	call	0x82a	; 0x82a <dist_comp>
        //printf("Dist compare Completed\n");
        //printf("Block - %d\n",block);
        //printf("Node - %d\n",bnode);
        for(int p = 0; p<len; p++)
    460c:	29 81       	ldd	r18, Y+1	; 0x01
    460e:	3a 81       	ldd	r19, Y+2	; 0x02
    4610:	12 16       	cp	r1, r18
    4612:	13 06       	cpc	r1, r19
    4614:	34 f4       	brge	.+12     	; 0x4622 <main+0x17d2>
    4616:	80 e0       	ldi	r24, 0x00	; 0
    4618:	90 e0       	ldi	r25, 0x00	; 0
    461a:	01 96       	adiw	r24, 0x01	; 1
    461c:	82 17       	cp	r24, r18
    461e:	93 07       	cpc	r25, r19
    4620:	e1 f7       	brne	.-8      	; 0x461a <main+0x17ca>
        {
            //printf("%d\n",path[p]);
            //lcd_print(1,2*p,path[p],2);
        }
        bnode = path[len-1];
        traverse(path,u,&len);
    4622:	60 91 fe 04 	lds	r22, 0x04FE
    4626:	70 91 ff 04 	lds	r23, 0x04FF
    462a:	ae 01       	movw	r20, r28
    462c:	4f 5f       	subi	r20, 0xFF	; 255
    462e:	5f 4f       	sbci	r21, 0xFF	; 255
    4630:	c7 01       	movw	r24, r14
    4632:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <traverse>
        //printf("Traverse Completed\n");
        free(path);
    4636:	c7 01       	movw	r24, r14
    4638:	0e 94 80 2b 	call	0x5700	; 0x5700 <free>
        len = 0;
    463c:	1a 82       	std	Y+2, r1	; 0x02
    463e:	19 82       	std	Y+1, r1	; 0x01
        block_choose2(block,block_placed);
    4640:	66 ee       	ldi	r22, 0xE6	; 230
    4642:	74 e0       	ldi	r23, 0x04	; 4
    4644:	c6 01       	movw	r24, r12
    4646:	0e 94 25 16 	call	0x2c4a	; 0x2c4a <block_choose2>
        //printf("Block Choose Completed\n");
        s_pick();
    464a:	0e 94 0c 07 	call	0xe18	; 0xe18 <s_pick>
        forward();
    464e:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    4652:	ff ef       	ldi	r31, 0xFF	; 255
    4654:	2f eb       	ldi	r18, 0xBF	; 191
    4656:	86 e0       	ldi	r24, 0x06	; 6
    4658:	f1 50       	subi	r31, 0x01	; 1
    465a:	20 40       	sbci	r18, 0x00	; 0
    465c:	80 40       	sbci	r24, 0x00	; 0
    465e:	e1 f7       	brne	.-8      	; 0x4658 <main+0x1808>
    4660:	00 c0       	rjmp	.+0      	; 0x4662 <main+0x1812>
    4662:	00 00       	nop
        _delay_ms(150);
        stop();
    4664:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    }
    dijkstra(G,n,u);
    4668:	40 91 fe 04 	lds	r20, 0x04FE
    466c:	50 91 ff 04 	lds	r21, 0x04FF
    4670:	60 91 87 04 	lds	r22, 0x0487
    4674:	70 91 88 04 	lds	r23, 0x0488
    4678:	8e e7       	ldi	r24, 0x7E	; 126
    467a:	92 e0       	ldi	r25, 0x02	; 2
    467c:	0e 94 94 02 	call	0x528	; 0x528 <dijkstra>
    //printf("Dijkstra Completed\n");
    hnode = 0;
    hnode = which_house(house_no);
    4680:	c8 01       	movw	r24, r16
    4682:	0e 94 08 05 	call	0xa10	; 0xa10 <which_house>
    dist_comp(hnode,hnode,path,&len);
    4686:	9e 01       	movw	r18, r28
    4688:	2f 5f       	subi	r18, 0xFF	; 255
    468a:	3f 4f       	sbci	r19, 0xFF	; 255
    468c:	a7 01       	movw	r20, r14
    468e:	bc 01       	movw	r22, r24
    4690:	0e 94 15 04 	call	0x82a	; 0x82a <dist_comp>
    //printf("Dist compare Completed\n");
    for(int p = 0; p<len; p++)
    4694:	29 81       	ldd	r18, Y+1	; 0x01
    4696:	3a 81       	ldd	r19, Y+2	; 0x02
    4698:	12 16       	cp	r1, r18
    469a:	13 06       	cpc	r1, r19
    469c:	34 f4       	brge	.+12     	; 0x46aa <main+0x185a>
    469e:	80 e0       	ldi	r24, 0x00	; 0
    46a0:	90 e0       	ldi	r25, 0x00	; 0
    46a2:	01 96       	adiw	r24, 0x01	; 1
    46a4:	82 17       	cp	r24, r18
    46a6:	93 07       	cpc	r25, r19
    46a8:	e1 f7       	brne	.-8      	; 0x46a2 <main+0x1852>
    {
        //printf("%d\n",path[p]);
        //lcd_print(1,2*p,path[p],2);
    }
    traverse(path,u,&len);
    46aa:	60 91 fe 04 	lds	r22, 0x04FE
    46ae:	70 91 ff 04 	lds	r23, 0x04FF
    46b2:	ae 01       	movw	r20, r28
    46b4:	4f 5f       	subi	r20, 0xFF	; 255
    46b6:	5f 4f       	sbci	r21, 0xFF	; 255
    46b8:	c7 01       	movw	r24, r14
    46ba:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <traverse>
    //printf("Traverse Completed\n");
    free(path);
    46be:	c7 01       	movw	r24, r14
    46c0:	0e 94 80 2b 	call	0x5700	; 0x5700 <free>
    len = 0;
    46c4:	1a 82       	std	Y+2, r1	; 0x02
    46c6:	19 82       	std	Y+1, r1	; 0x01
    if (house_no == 1)
    46c8:	01 30       	cpi	r16, 0x01	; 1
    46ca:	11 05       	cpc	r17, r1
    46cc:	09 f0       	breq	.+2      	; 0x46d0 <main+0x1880>
    46ce:	ab c0       	rjmp	.+342    	; 0x4826 <main+0x19d6>
    {
        fdir = 'w';
    46d0:	87 e7       	ldi	r24, 0x77	; 119
    46d2:	80 93 85 04 	sts	0x0485, r24
        block_traverse();
    46d6:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <block_traverse>
        back();
    46da:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    46de:	9f ef       	ldi	r25, 0xFF	; 255
    46e0:	ef e7       	ldi	r30, 0x7F	; 127
    46e2:	f4 e0       	ldi	r31, 0x04	; 4
    46e4:	91 50       	subi	r25, 0x01	; 1
    46e6:	e0 40       	sbci	r30, 0x00	; 0
    46e8:	f0 40       	sbci	r31, 0x00	; 0
    46ea:	e1 f7       	brne	.-8      	; 0x46e4 <main+0x1894>
    46ec:	00 c0       	rjmp	.+0      	; 0x46ee <main+0x189e>
    46ee:	00 00       	nop
        _delay_ms(100);
        stop();
    46f0:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        if (house_config[house_no-1]==0)
    46f4:	80 91 7b 04 	lds	r24, 0x047B
    46f8:	90 91 7c 04 	lds	r25, 0x047C
    46fc:	89 2b       	or	r24, r25
    46fe:	e9 f4       	brne	.+58     	; 0x473a <main+0x18ea>
        {
            back();
    4700:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    4704:	2f ef       	ldi	r18, 0xFF	; 255
    4706:	8f e7       	ldi	r24, 0x7F	; 127
    4708:	9d e0       	ldi	r25, 0x0D	; 13
    470a:	21 50       	subi	r18, 0x01	; 1
    470c:	80 40       	sbci	r24, 0x00	; 0
    470e:	90 40       	sbci	r25, 0x00	; 0
    4710:	e1 f7       	brne	.-8      	; 0x470a <main+0x18ba>
    4712:	00 c0       	rjmp	.+0      	; 0x4714 <main+0x18c4>
    4714:	00 00       	nop
            _delay_ms(300);
            stop();
    4716:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_lr();
    471a:	0e 94 bf 08 	call	0x117e	; 0x117e <place_lr>
            forward();
    471e:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    4722:	ef ef       	ldi	r30, 0xFF	; 255
    4724:	ff eb       	ldi	r31, 0xBF	; 191
    4726:	26 e0       	ldi	r18, 0x06	; 6
    4728:	e1 50       	subi	r30, 0x01	; 1
    472a:	f0 40       	sbci	r31, 0x00	; 0
    472c:	20 40       	sbci	r18, 0x00	; 0
    472e:	e1 f7       	brne	.-8      	; 0x4728 <main+0x18d8>
    4730:	00 c0       	rjmp	.+0      	; 0x4732 <main+0x18e2>
    4732:	00 00       	nop
            _delay_ms(150);
            stop();
    4734:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    4738:	1c c0       	rjmp	.+56     	; 0x4772 <main+0x1922>
        }
        else
        {
            back();
    473a:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    473e:	8f ef       	ldi	r24, 0xFF	; 255
    4740:	9f e7       	ldi	r25, 0x7F	; 127
    4742:	ed e0       	ldi	r30, 0x0D	; 13
    4744:	81 50       	subi	r24, 0x01	; 1
    4746:	90 40       	sbci	r25, 0x00	; 0
    4748:	e0 40       	sbci	r30, 0x00	; 0
    474a:	e1 f7       	brne	.-8      	; 0x4744 <main+0x18f4>
    474c:	00 c0       	rjmp	.+0      	; 0x474e <main+0x18fe>
    474e:	00 00       	nop
            _delay_ms(300);
            stop();
    4750:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_hr();
    4754:	0e 94 30 09 	call	0x1260	; 0x1260 <place_hr>
            forward();
    4758:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    475c:	ff ef       	ldi	r31, 0xFF	; 255
    475e:	2f eb       	ldi	r18, 0xBF	; 191
    4760:	86 e0       	ldi	r24, 0x06	; 6
    4762:	f1 50       	subi	r31, 0x01	; 1
    4764:	20 40       	sbci	r18, 0x00	; 0
    4766:	80 40       	sbci	r24, 0x00	; 0
    4768:	e1 f7       	brne	.-8      	; 0x4762 <main+0x1912>
    476a:	00 c0       	rjmp	.+0      	; 0x476c <main+0x191c>
    476c:	00 00       	nop
            _delay_ms(150);
            stop();
    476e:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        }
        is_block1 = check_block(1);
    4772:	81 e0       	ldi	r24, 0x01	; 1
    4774:	90 e0       	ldi	r25, 0x00	; 0
    4776:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    477a:	5c 01       	movw	r10, r24
        is_block2 = check_block(2);
    477c:	82 e0       	ldi	r24, 0x02	; 2
    477e:	90 e0       	ldi	r25, 0x00	; 0
    4780:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4784:	4c 01       	movw	r8, r24
        is_block3 = check_block(5);
    4786:	85 e0       	ldi	r24, 0x05	; 5
    4788:	90 e0       	ldi	r25, 0x00	; 0
    478a:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    478e:	3c 01       	movw	r6, r24
        is_block4 = check_block(6);
    4790:	86 e0       	ldi	r24, 0x06	; 6
    4792:	90 e0       	ldi	r25, 0x00	; 0
    4794:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4798:	2c 01       	movw	r4, r24
        is_block5 = check_block(9);
    479a:	89 e0       	ldi	r24, 0x09	; 9
    479c:	90 e0       	ldi	r25, 0x00	; 0
    479e:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    47a2:	1c 01       	movw	r2, r24
        is_block6 = check_block(10);
    47a4:	8a e0       	ldi	r24, 0x0A	; 10
    47a6:	90 e0       	ldi	r25, 0x00	; 0
    47a8:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
        if (block_placed[0] == 0 && is_block1==1)
    47ac:	20 91 e6 04 	lds	r18, 0x04E6
    47b0:	30 91 e7 04 	lds	r19, 0x04E7
    47b4:	23 2b       	or	r18, r19
    47b6:	21 f4       	brne	.+8      	; 0x47c0 <main+0x1970>
    47b8:	aa 94       	dec	r10
    47ba:	ab 28       	or	r10, r11
    47bc:	09 f4       	brne	.+2      	; 0x47c0 <main+0x1970>
    47be:	40 c2       	rjmp	.+1152   	; 0x4c40 <main+0x1df0>
            block = 1;
        else if (block_placed[1] == 0 && is_block2==1)
    47c0:	20 91 e8 04 	lds	r18, 0x04E8
    47c4:	30 91 e9 04 	lds	r19, 0x04E9
    47c8:	23 2b       	or	r18, r19
    47ca:	21 f4       	brne	.+8      	; 0x47d4 <main+0x1984>
    47cc:	8a 94       	dec	r8
    47ce:	89 28       	or	r8, r9
    47d0:	09 f4       	brne	.+2      	; 0x47d4 <main+0x1984>
    47d2:	3a c2       	rjmp	.+1140   	; 0x4c48 <main+0x1df8>
            block = 2;
        else if (block_placed[4] == 0 && is_block3==1)
    47d4:	20 91 ee 04 	lds	r18, 0x04EE
    47d8:	30 91 ef 04 	lds	r19, 0x04EF
    47dc:	23 2b       	or	r18, r19
    47de:	21 f4       	brne	.+8      	; 0x47e8 <main+0x1998>
    47e0:	6a 94       	dec	r6
    47e2:	67 28       	or	r6, r7
    47e4:	09 f4       	brne	.+2      	; 0x47e8 <main+0x1998>
    47e6:	35 c2       	rjmp	.+1130   	; 0x4c52 <main+0x1e02>
            block = 5;
        else if (block_placed[5] == 0 && is_block4==1)
    47e8:	20 91 f0 04 	lds	r18, 0x04F0
    47ec:	30 91 f1 04 	lds	r19, 0x04F1
    47f0:	23 2b       	or	r18, r19
    47f2:	21 f4       	brne	.+8      	; 0x47fc <main+0x19ac>
    47f4:	4a 94       	dec	r4
    47f6:	45 28       	or	r4, r5
    47f8:	09 f4       	brne	.+2      	; 0x47fc <main+0x19ac>
    47fa:	31 c2       	rjmp	.+1122   	; 0x4c5e <main+0x1e0e>
            block = 6;
        else if (block_placed[8] == 0 && is_block5==1)
    47fc:	20 91 f6 04 	lds	r18, 0x04F6
    4800:	30 91 f7 04 	lds	r19, 0x04F7
    4804:	23 2b       	or	r18, r19
    4806:	21 f4       	brne	.+8      	; 0x4810 <main+0x19c0>
    4808:	2a 94       	dec	r2
    480a:	23 28       	or	r2, r3
    480c:	09 f4       	brne	.+2      	; 0x4810 <main+0x19c0>
    480e:	2d c2       	rjmp	.+1114   	; 0x4c6a <main+0x1e1a>
            block = 9;
        else if (block_placed[9] == 0 && is_block6==1)
    4810:	20 91 f8 04 	lds	r18, 0x04F8
    4814:	30 91 f9 04 	lds	r19, 0x04F9
    4818:	23 2b       	or	r18, r19
    481a:	09 f0       	breq	.+2      	; 0x481e <main+0x19ce>
    481c:	96 c2       	rjmp	.+1324   	; 0x4d4a <main+0x1efa>
    481e:	01 97       	sbiw	r24, 0x01	; 1
    4820:	09 f0       	breq	.+2      	; 0x4824 <main+0x19d4>
    4822:	93 c2       	rjmp	.+1318   	; 0x4d4a <main+0x1efa>
    4824:	28 c2       	rjmp	.+1104   	; 0x4c76 <main+0x1e26>
            block = 10;
    }
    else if (house_no == 2)
    4826:	02 30       	cpi	r16, 0x02	; 2
    4828:	11 05       	cpc	r17, r1
    482a:	09 f0       	breq	.+2      	; 0x482e <main+0x19de>
    482c:	ab c0       	rjmp	.+342    	; 0x4984 <main+0x1b34>
    {
        fdir = 'e';
    482e:	85 e6       	ldi	r24, 0x65	; 101
    4830:	80 93 85 04 	sts	0x0485, r24
        block_traverse();
    4834:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <block_traverse>
        back();
    4838:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    483c:	2f ef       	ldi	r18, 0xFF	; 255
    483e:	8f e7       	ldi	r24, 0x7F	; 127
    4840:	94 e0       	ldi	r25, 0x04	; 4
    4842:	21 50       	subi	r18, 0x01	; 1
    4844:	80 40       	sbci	r24, 0x00	; 0
    4846:	90 40       	sbci	r25, 0x00	; 0
    4848:	e1 f7       	brne	.-8      	; 0x4842 <main+0x19f2>
    484a:	00 c0       	rjmp	.+0      	; 0x484c <main+0x19fc>
    484c:	00 00       	nop
        _delay_ms(100);
        stop();
    484e:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        if (house_config[house_no-1]==0)
    4852:	80 91 7d 04 	lds	r24, 0x047D
    4856:	90 91 7e 04 	lds	r25, 0x047E
    485a:	89 2b       	or	r24, r25
    485c:	e9 f4       	brne	.+58     	; 0x4898 <main+0x1a48>
        {
            back();
    485e:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    4862:	ef ef       	ldi	r30, 0xFF	; 255
    4864:	ff e7       	ldi	r31, 0x7F	; 127
    4866:	2d e0       	ldi	r18, 0x0D	; 13
    4868:	e1 50       	subi	r30, 0x01	; 1
    486a:	f0 40       	sbci	r31, 0x00	; 0
    486c:	20 40       	sbci	r18, 0x00	; 0
    486e:	e1 f7       	brne	.-8      	; 0x4868 <main+0x1a18>
    4870:	00 c0       	rjmp	.+0      	; 0x4872 <main+0x1a22>
    4872:	00 00       	nop
            _delay_ms(300);
            stop();
    4874:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_lr();
    4878:	0e 94 bf 08 	call	0x117e	; 0x117e <place_lr>
            forward();
    487c:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    4880:	8f ef       	ldi	r24, 0xFF	; 255
    4882:	9f eb       	ldi	r25, 0xBF	; 191
    4884:	e6 e0       	ldi	r30, 0x06	; 6
    4886:	81 50       	subi	r24, 0x01	; 1
    4888:	90 40       	sbci	r25, 0x00	; 0
    488a:	e0 40       	sbci	r30, 0x00	; 0
    488c:	e1 f7       	brne	.-8      	; 0x4886 <main+0x1a36>
    488e:	00 c0       	rjmp	.+0      	; 0x4890 <main+0x1a40>
    4890:	00 00       	nop
            _delay_ms(150);
            stop();
    4892:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    4896:	1c c0       	rjmp	.+56     	; 0x48d0 <main+0x1a80>
        }
        else
        {
            back();
    4898:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    489c:	ff ef       	ldi	r31, 0xFF	; 255
    489e:	2f e7       	ldi	r18, 0x7F	; 127
    48a0:	8d e0       	ldi	r24, 0x0D	; 13
    48a2:	f1 50       	subi	r31, 0x01	; 1
    48a4:	20 40       	sbci	r18, 0x00	; 0
    48a6:	80 40       	sbci	r24, 0x00	; 0
    48a8:	e1 f7       	brne	.-8      	; 0x48a2 <main+0x1a52>
    48aa:	00 c0       	rjmp	.+0      	; 0x48ac <main+0x1a5c>
    48ac:	00 00       	nop
            _delay_ms(300);
            stop();
    48ae:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_hr();
    48b2:	0e 94 30 09 	call	0x1260	; 0x1260 <place_hr>
            forward();
    48b6:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    48ba:	9f ef       	ldi	r25, 0xFF	; 255
    48bc:	ef eb       	ldi	r30, 0xBF	; 191
    48be:	f6 e0       	ldi	r31, 0x06	; 6
    48c0:	91 50       	subi	r25, 0x01	; 1
    48c2:	e0 40       	sbci	r30, 0x00	; 0
    48c4:	f0 40       	sbci	r31, 0x00	; 0
    48c6:	e1 f7       	brne	.-8      	; 0x48c0 <main+0x1a70>
    48c8:	00 c0       	rjmp	.+0      	; 0x48ca <main+0x1a7a>
    48ca:	00 00       	nop
            _delay_ms(150);
            stop();
    48cc:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        }
        is_block1 = check_block(3);
    48d0:	83 e0       	ldi	r24, 0x03	; 3
    48d2:	90 e0       	ldi	r25, 0x00	; 0
    48d4:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    48d8:	5c 01       	movw	r10, r24
        is_block2 = check_block(4);
    48da:	84 e0       	ldi	r24, 0x04	; 4
    48dc:	90 e0       	ldi	r25, 0x00	; 0
    48de:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    48e2:	4c 01       	movw	r8, r24
        is_block3 = check_block(7);
    48e4:	87 e0       	ldi	r24, 0x07	; 7
    48e6:	90 e0       	ldi	r25, 0x00	; 0
    48e8:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    48ec:	3c 01       	movw	r6, r24
        is_block4 = check_block(8);
    48ee:	88 e0       	ldi	r24, 0x08	; 8
    48f0:	90 e0       	ldi	r25, 0x00	; 0
    48f2:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    48f6:	2c 01       	movw	r4, r24
        is_block5 = check_block(11);
    48f8:	8b e0       	ldi	r24, 0x0B	; 11
    48fa:	90 e0       	ldi	r25, 0x00	; 0
    48fc:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4900:	1c 01       	movw	r2, r24
        is_block6 = check_block(12);
    4902:	8c e0       	ldi	r24, 0x0C	; 12
    4904:	90 e0       	ldi	r25, 0x00	; 0
    4906:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
        if (block_placed[2] == 0 && is_block1==1)
    490a:	20 91 ea 04 	lds	r18, 0x04EA
    490e:	30 91 eb 04 	lds	r19, 0x04EB
    4912:	23 2b       	or	r18, r19
    4914:	21 f4       	brne	.+8      	; 0x491e <main+0x1ace>
    4916:	aa 94       	dec	r10
    4918:	ab 28       	or	r10, r11
    491a:	09 f4       	brne	.+2      	; 0x491e <main+0x1ace>
    491c:	b2 c1       	rjmp	.+868    	; 0x4c82 <main+0x1e32>
            block = 3;
        else if (block_placed[3] == 0 && is_block2==1)
    491e:	20 91 ec 04 	lds	r18, 0x04EC
    4922:	30 91 ed 04 	lds	r19, 0x04ED
    4926:	23 2b       	or	r18, r19
    4928:	21 f4       	brne	.+8      	; 0x4932 <main+0x1ae2>
    492a:	8a 94       	dec	r8
    492c:	89 28       	or	r8, r9
    492e:	09 f4       	brne	.+2      	; 0x4932 <main+0x1ae2>
    4930:	ae c1       	rjmp	.+860    	; 0x4c8e <main+0x1e3e>
            block = 4;
        else if (block_placed[6] == 0 && is_block3==1)
    4932:	20 91 f2 04 	lds	r18, 0x04F2
    4936:	30 91 f3 04 	lds	r19, 0x04F3
    493a:	23 2b       	or	r18, r19
    493c:	21 f4       	brne	.+8      	; 0x4946 <main+0x1af6>
    493e:	6a 94       	dec	r6
    4940:	67 28       	or	r6, r7
    4942:	09 f4       	brne	.+2      	; 0x4946 <main+0x1af6>
    4944:	a9 c1       	rjmp	.+850    	; 0x4c98 <main+0x1e48>
            block = 7;
        else if (block_placed[7] == 0 && is_block4==1)
    4946:	20 91 f4 04 	lds	r18, 0x04F4
    494a:	30 91 f5 04 	lds	r19, 0x04F5
    494e:	23 2b       	or	r18, r19
    4950:	21 f4       	brne	.+8      	; 0x495a <main+0x1b0a>
    4952:	4a 94       	dec	r4
    4954:	45 28       	or	r4, r5
    4956:	09 f4       	brne	.+2      	; 0x495a <main+0x1b0a>
    4958:	a5 c1       	rjmp	.+842    	; 0x4ca4 <main+0x1e54>
            block = 8;
        else if (block_placed[10] == 0 && is_block5==1)
    495a:	20 91 fa 04 	lds	r18, 0x04FA
    495e:	30 91 fb 04 	lds	r19, 0x04FB
    4962:	23 2b       	or	r18, r19
    4964:	21 f4       	brne	.+8      	; 0x496e <main+0x1b1e>
    4966:	2a 94       	dec	r2
    4968:	23 28       	or	r2, r3
    496a:	09 f4       	brne	.+2      	; 0x496e <main+0x1b1e>
    496c:	a0 c1       	rjmp	.+832    	; 0x4cae <main+0x1e5e>
            block = 11;
        else if (block_placed[11] == 0 && is_block6==1)
    496e:	20 91 fc 04 	lds	r18, 0x04FC
    4972:	30 91 fd 04 	lds	r19, 0x04FD
    4976:	23 2b       	or	r18, r19
    4978:	09 f0       	breq	.+2      	; 0x497c <main+0x1b2c>
    497a:	e7 c1       	rjmp	.+974    	; 0x4d4a <main+0x1efa>
    497c:	01 97       	sbiw	r24, 0x01	; 1
    497e:	09 f0       	breq	.+2      	; 0x4982 <main+0x1b32>
    4980:	e4 c1       	rjmp	.+968    	; 0x4d4a <main+0x1efa>
    4982:	9b c1       	rjmp	.+822    	; 0x4cba <main+0x1e6a>
            block = 12;
    }
    else if (house_no == 3)
    4984:	03 30       	cpi	r16, 0x03	; 3
    4986:	11 05       	cpc	r17, r1
    4988:	09 f0       	breq	.+2      	; 0x498c <main+0x1b3c>
    498a:	ab c0       	rjmp	.+342    	; 0x4ae2 <main+0x1c92>
    {
        fdir = 'w';
    498c:	87 e7       	ldi	r24, 0x77	; 119
    498e:	80 93 85 04 	sts	0x0485, r24
        block_traverse();
    4992:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <block_traverse>
        back();
    4996:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    499a:	ff ef       	ldi	r31, 0xFF	; 255
    499c:	2f e7       	ldi	r18, 0x7F	; 127
    499e:	84 e0       	ldi	r24, 0x04	; 4
    49a0:	f1 50       	subi	r31, 0x01	; 1
    49a2:	20 40       	sbci	r18, 0x00	; 0
    49a4:	80 40       	sbci	r24, 0x00	; 0
    49a6:	e1 f7       	brne	.-8      	; 0x49a0 <main+0x1b50>
    49a8:	00 c0       	rjmp	.+0      	; 0x49aa <main+0x1b5a>
    49aa:	00 00       	nop
        _delay_ms(100);
        stop();
    49ac:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        if (house_config[house_no-1]==0)
    49b0:	80 91 7f 04 	lds	r24, 0x047F
    49b4:	90 91 80 04 	lds	r25, 0x0480
    49b8:	89 2b       	or	r24, r25
    49ba:	e9 f4       	brne	.+58     	; 0x49f6 <main+0x1ba6>
        {
            back();
    49bc:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    49c0:	9f ef       	ldi	r25, 0xFF	; 255
    49c2:	ef e7       	ldi	r30, 0x7F	; 127
    49c4:	fd e0       	ldi	r31, 0x0D	; 13
    49c6:	91 50       	subi	r25, 0x01	; 1
    49c8:	e0 40       	sbci	r30, 0x00	; 0
    49ca:	f0 40       	sbci	r31, 0x00	; 0
    49cc:	e1 f7       	brne	.-8      	; 0x49c6 <main+0x1b76>
    49ce:	00 c0       	rjmp	.+0      	; 0x49d0 <main+0x1b80>
    49d0:	00 00       	nop
            _delay_ms(300);
            stop();
    49d2:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_lr();
    49d6:	0e 94 bf 08 	call	0x117e	; 0x117e <place_lr>
            forward();
    49da:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    49de:	2f ef       	ldi	r18, 0xFF	; 255
    49e0:	8f eb       	ldi	r24, 0xBF	; 191
    49e2:	96 e0       	ldi	r25, 0x06	; 6
    49e4:	21 50       	subi	r18, 0x01	; 1
    49e6:	80 40       	sbci	r24, 0x00	; 0
    49e8:	90 40       	sbci	r25, 0x00	; 0
    49ea:	e1 f7       	brne	.-8      	; 0x49e4 <main+0x1b94>
    49ec:	00 c0       	rjmp	.+0      	; 0x49ee <main+0x1b9e>
    49ee:	00 00       	nop
            _delay_ms(150);
            stop();
    49f0:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    49f4:	1c c0       	rjmp	.+56     	; 0x4a2e <main+0x1bde>
        }
        else
        {
            back();
    49f6:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    49fa:	ef ef       	ldi	r30, 0xFF	; 255
    49fc:	ff e7       	ldi	r31, 0x7F	; 127
    49fe:	2d e0       	ldi	r18, 0x0D	; 13
    4a00:	e1 50       	subi	r30, 0x01	; 1
    4a02:	f0 40       	sbci	r31, 0x00	; 0
    4a04:	20 40       	sbci	r18, 0x00	; 0
    4a06:	e1 f7       	brne	.-8      	; 0x4a00 <main+0x1bb0>
    4a08:	00 c0       	rjmp	.+0      	; 0x4a0a <main+0x1bba>
    4a0a:	00 00       	nop
            _delay_ms(300);
            stop();
    4a0c:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_hr();
    4a10:	0e 94 30 09 	call	0x1260	; 0x1260 <place_hr>
            forward();
    4a14:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    4a18:	8f ef       	ldi	r24, 0xFF	; 255
    4a1a:	9f eb       	ldi	r25, 0xBF	; 191
    4a1c:	e6 e0       	ldi	r30, 0x06	; 6
    4a1e:	81 50       	subi	r24, 0x01	; 1
    4a20:	90 40       	sbci	r25, 0x00	; 0
    4a22:	e0 40       	sbci	r30, 0x00	; 0
    4a24:	e1 f7       	brne	.-8      	; 0x4a1e <main+0x1bce>
    4a26:	00 c0       	rjmp	.+0      	; 0x4a28 <main+0x1bd8>
    4a28:	00 00       	nop
            _delay_ms(150);
            stop();
    4a2a:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        }
        is_block1 = check_block(5);
    4a2e:	85 e0       	ldi	r24, 0x05	; 5
    4a30:	90 e0       	ldi	r25, 0x00	; 0
    4a32:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4a36:	4c 01       	movw	r8, r24
        is_block2 = check_block(6);
    4a38:	86 e0       	ldi	r24, 0x06	; 6
    4a3a:	90 e0       	ldi	r25, 0x00	; 0
    4a3c:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4a40:	5c 01       	movw	r10, r24
        is_block3 = check_block(9);
    4a42:	89 e0       	ldi	r24, 0x09	; 9
    4a44:	90 e0       	ldi	r25, 0x00	; 0
    4a46:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4a4a:	3c 01       	movw	r6, r24
        is_block4 = check_block(10);
    4a4c:	8a e0       	ldi	r24, 0x0A	; 10
    4a4e:	90 e0       	ldi	r25, 0x00	; 0
    4a50:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4a54:	2c 01       	movw	r4, r24
        is_block5 = check_block(1);
    4a56:	81 e0       	ldi	r24, 0x01	; 1
    4a58:	90 e0       	ldi	r25, 0x00	; 0
    4a5a:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4a5e:	1c 01       	movw	r2, r24
        is_block6 = check_block(2);
    4a60:	82 e0       	ldi	r24, 0x02	; 2
    4a62:	90 e0       	ldi	r25, 0x00	; 0
    4a64:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
        if (block_placed[4] == 0 && is_block1==1)
    4a68:	20 91 ee 04 	lds	r18, 0x04EE
    4a6c:	30 91 ef 04 	lds	r19, 0x04EF
    4a70:	23 2b       	or	r18, r19
    4a72:	21 f4       	brne	.+8      	; 0x4a7c <main+0x1c2c>
    4a74:	8a 94       	dec	r8
    4a76:	89 28       	or	r8, r9
    4a78:	09 f4       	brne	.+2      	; 0x4a7c <main+0x1c2c>
    4a7a:	25 c1       	rjmp	.+586    	; 0x4cc6 <main+0x1e76>
            block = 5;
        else if (block_placed[5] == 0 && is_block2==1)
    4a7c:	20 91 f0 04 	lds	r18, 0x04F0
    4a80:	30 91 f1 04 	lds	r19, 0x04F1
    4a84:	23 2b       	or	r18, r19
    4a86:	21 f4       	brne	.+8      	; 0x4a90 <main+0x1c40>
    4a88:	aa 94       	dec	r10
    4a8a:	ab 28       	or	r10, r11
    4a8c:	09 f4       	brne	.+2      	; 0x4a90 <main+0x1c40>
    4a8e:	21 c1       	rjmp	.+578    	; 0x4cd2 <main+0x1e82>
            block = 6;
        else if (block_placed[8] == 0 && is_block3==1)
    4a90:	20 91 f6 04 	lds	r18, 0x04F6
    4a94:	30 91 f7 04 	lds	r19, 0x04F7
    4a98:	23 2b       	or	r18, r19
    4a9a:	21 f4       	brne	.+8      	; 0x4aa4 <main+0x1c54>
    4a9c:	6a 94       	dec	r6
    4a9e:	67 28       	or	r6, r7
    4aa0:	09 f4       	brne	.+2      	; 0x4aa4 <main+0x1c54>
    4aa2:	1d c1       	rjmp	.+570    	; 0x4cde <main+0x1e8e>
            block = 9;
        else if (block_placed[9] == 0 && is_block4==1)
    4aa4:	20 91 f8 04 	lds	r18, 0x04F8
    4aa8:	30 91 f9 04 	lds	r19, 0x04F9
    4aac:	23 2b       	or	r18, r19
    4aae:	21 f4       	brne	.+8      	; 0x4ab8 <main+0x1c68>
    4ab0:	4a 94       	dec	r4
    4ab2:	45 28       	or	r4, r5
    4ab4:	09 f4       	brne	.+2      	; 0x4ab8 <main+0x1c68>
    4ab6:	19 c1       	rjmp	.+562    	; 0x4cea <main+0x1e9a>
            block = 10;
        else if (block_placed[0] == 0 && is_block5==1)
    4ab8:	20 91 e6 04 	lds	r18, 0x04E6
    4abc:	30 91 e7 04 	lds	r19, 0x04E7
    4ac0:	23 2b       	or	r18, r19
    4ac2:	21 f4       	brne	.+8      	; 0x4acc <main+0x1c7c>
    4ac4:	2a 94       	dec	r2
    4ac6:	23 28       	or	r2, r3
    4ac8:	09 f4       	brne	.+2      	; 0x4acc <main+0x1c7c>
    4aca:	15 c1       	rjmp	.+554    	; 0x4cf6 <main+0x1ea6>
            block = 1;
        else if (block_placed[1] == 0 && is_block6==1)
    4acc:	20 91 e8 04 	lds	r18, 0x04E8
    4ad0:	30 91 e9 04 	lds	r19, 0x04E9
    4ad4:	23 2b       	or	r18, r19
    4ad6:	09 f0       	breq	.+2      	; 0x4ada <main+0x1c8a>
    4ad8:	38 c1       	rjmp	.+624    	; 0x4d4a <main+0x1efa>
    4ada:	01 97       	sbiw	r24, 0x01	; 1
    4adc:	09 f0       	breq	.+2      	; 0x4ae0 <main+0x1c90>
    4ade:	35 c1       	rjmp	.+618    	; 0x4d4a <main+0x1efa>
    4ae0:	0e c1       	rjmp	.+540    	; 0x4cfe <main+0x1eae>
            block = 2;
    }
    else if (house_no == 4)
    4ae2:	04 30       	cpi	r16, 0x04	; 4
    4ae4:	11 05       	cpc	r17, r1
    4ae6:	09 f0       	breq	.+2      	; 0x4aea <main+0x1c9a>
    4ae8:	30 c1       	rjmp	.+608    	; 0x4d4a <main+0x1efa>
    {
        fdir = 'e';
    4aea:	85 e6       	ldi	r24, 0x65	; 101
    4aec:	80 93 85 04 	sts	0x0485, r24
        block_traverse();
    4af0:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <block_traverse>
        back();
    4af4:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    4af8:	8f ef       	ldi	r24, 0xFF	; 255
    4afa:	9f e7       	ldi	r25, 0x7F	; 127
    4afc:	e4 e0       	ldi	r30, 0x04	; 4
    4afe:	81 50       	subi	r24, 0x01	; 1
    4b00:	90 40       	sbci	r25, 0x00	; 0
    4b02:	e0 40       	sbci	r30, 0x00	; 0
    4b04:	e1 f7       	brne	.-8      	; 0x4afe <main+0x1cae>
    4b06:	00 c0       	rjmp	.+0      	; 0x4b08 <main+0x1cb8>
    4b08:	00 00       	nop
        _delay_ms(100);
        stop();
    4b0a:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        if (house_config[house_no-1]==0)
    4b0e:	80 91 81 04 	lds	r24, 0x0481
    4b12:	90 91 82 04 	lds	r25, 0x0482
    4b16:	89 2b       	or	r24, r25
    4b18:	e9 f4       	brne	.+58     	; 0x4b54 <main+0x1d04>
        {
            back();
    4b1a:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    4b1e:	ff ef       	ldi	r31, 0xFF	; 255
    4b20:	2f e7       	ldi	r18, 0x7F	; 127
    4b22:	8d e0       	ldi	r24, 0x0D	; 13
    4b24:	f1 50       	subi	r31, 0x01	; 1
    4b26:	20 40       	sbci	r18, 0x00	; 0
    4b28:	80 40       	sbci	r24, 0x00	; 0
    4b2a:	e1 f7       	brne	.-8      	; 0x4b24 <main+0x1cd4>
    4b2c:	00 c0       	rjmp	.+0      	; 0x4b2e <main+0x1cde>
    4b2e:	00 00       	nop
            _delay_ms(300);
            stop();
    4b30:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_lr();
    4b34:	0e 94 bf 08 	call	0x117e	; 0x117e <place_lr>
            forward();
    4b38:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    4b3c:	9f ef       	ldi	r25, 0xFF	; 255
    4b3e:	ef eb       	ldi	r30, 0xBF	; 191
    4b40:	f6 e0       	ldi	r31, 0x06	; 6
    4b42:	91 50       	subi	r25, 0x01	; 1
    4b44:	e0 40       	sbci	r30, 0x00	; 0
    4b46:	f0 40       	sbci	r31, 0x00	; 0
    4b48:	e1 f7       	brne	.-8      	; 0x4b42 <main+0x1cf2>
    4b4a:	00 c0       	rjmp	.+0      	; 0x4b4c <main+0x1cfc>
    4b4c:	00 00       	nop
            _delay_ms(150);
            stop();
    4b4e:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    4b52:	1c c0       	rjmp	.+56     	; 0x4b8c <main+0x1d3c>
        }
        else
        {
            back();
    4b54:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    4b58:	2f ef       	ldi	r18, 0xFF	; 255
    4b5a:	8f e7       	ldi	r24, 0x7F	; 127
    4b5c:	9d e0       	ldi	r25, 0x0D	; 13
    4b5e:	21 50       	subi	r18, 0x01	; 1
    4b60:	80 40       	sbci	r24, 0x00	; 0
    4b62:	90 40       	sbci	r25, 0x00	; 0
    4b64:	e1 f7       	brne	.-8      	; 0x4b5e <main+0x1d0e>
    4b66:	00 c0       	rjmp	.+0      	; 0x4b68 <main+0x1d18>
    4b68:	00 00       	nop
            _delay_ms(300);
            stop();
    4b6a:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_hr();
    4b6e:	0e 94 30 09 	call	0x1260	; 0x1260 <place_hr>
            forward();
    4b72:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    4b76:	ef ef       	ldi	r30, 0xFF	; 255
    4b78:	ff eb       	ldi	r31, 0xBF	; 191
    4b7a:	26 e0       	ldi	r18, 0x06	; 6
    4b7c:	e1 50       	subi	r30, 0x01	; 1
    4b7e:	f0 40       	sbci	r31, 0x00	; 0
    4b80:	20 40       	sbci	r18, 0x00	; 0
    4b82:	e1 f7       	brne	.-8      	; 0x4b7c <main+0x1d2c>
    4b84:	00 c0       	rjmp	.+0      	; 0x4b86 <main+0x1d36>
    4b86:	00 00       	nop
            _delay_ms(150);
            stop();
    4b88:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        }
        is_block1 = check_block(7);
    4b8c:	87 e0       	ldi	r24, 0x07	; 7
    4b8e:	90 e0       	ldi	r25, 0x00	; 0
    4b90:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4b94:	5c 01       	movw	r10, r24
        is_block2 = check_block(8);
    4b96:	88 e0       	ldi	r24, 0x08	; 8
    4b98:	90 e0       	ldi	r25, 0x00	; 0
    4b9a:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4b9e:	4c 01       	movw	r8, r24
        is_block3 = check_block(11);
    4ba0:	8b e0       	ldi	r24, 0x0B	; 11
    4ba2:	90 e0       	ldi	r25, 0x00	; 0
    4ba4:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4ba8:	3c 01       	movw	r6, r24
        is_block4 = check_block(12);
    4baa:	8c e0       	ldi	r24, 0x0C	; 12
    4bac:	90 e0       	ldi	r25, 0x00	; 0
    4bae:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4bb2:	2c 01       	movw	r4, r24
        is_block5 = check_block(3);
    4bb4:	83 e0       	ldi	r24, 0x03	; 3
    4bb6:	90 e0       	ldi	r25, 0x00	; 0
    4bb8:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
    4bbc:	1c 01       	movw	r2, r24
        is_block6 = check_block(4);
    4bbe:	84 e0       	ldi	r24, 0x04	; 4
    4bc0:	90 e0       	ldi	r25, 0x00	; 0
    4bc2:	0e 94 77 02 	call	0x4ee	; 0x4ee <check_block>
        if (block_placed[6] == 0 && is_block1==1)
    4bc6:	20 91 f2 04 	lds	r18, 0x04F2
    4bca:	30 91 f3 04 	lds	r19, 0x04F3
    4bce:	23 2b       	or	r18, r19
    4bd0:	21 f4       	brne	.+8      	; 0x4bda <main+0x1d8a>
    4bd2:	aa 94       	dec	r10
    4bd4:	ab 28       	or	r10, r11
    4bd6:	09 f4       	brne	.+2      	; 0x4bda <main+0x1d8a>
    4bd8:	97 c0       	rjmp	.+302    	; 0x4d08 <main+0x1eb8>
            block = 7;
        else if (block_placed[7] == 0 && is_block2==1)
    4bda:	20 91 f4 04 	lds	r18, 0x04F4
    4bde:	30 91 f5 04 	lds	r19, 0x04F5
    4be2:	23 2b       	or	r18, r19
    4be4:	21 f4       	brne	.+8      	; 0x4bee <main+0x1d9e>
    4be6:	8a 94       	dec	r8
    4be8:	89 28       	or	r8, r9
    4bea:	09 f4       	brne	.+2      	; 0x4bee <main+0x1d9e>
    4bec:	93 c0       	rjmp	.+294    	; 0x4d14 <main+0x1ec4>
            block = 8;
        else if (block_placed[10] == 0 && is_block3==1)
    4bee:	20 91 fa 04 	lds	r18, 0x04FA
    4bf2:	30 91 fb 04 	lds	r19, 0x04FB
    4bf6:	23 2b       	or	r18, r19
    4bf8:	21 f4       	brne	.+8      	; 0x4c02 <main+0x1db2>
    4bfa:	6a 94       	dec	r6
    4bfc:	67 28       	or	r6, r7
    4bfe:	09 f4       	brne	.+2      	; 0x4c02 <main+0x1db2>
    4c00:	8e c0       	rjmp	.+284    	; 0x4d1e <main+0x1ece>
            block = 11;
        else if (block_placed[11] == 0 && is_block4==1)
    4c02:	20 91 fc 04 	lds	r18, 0x04FC
    4c06:	30 91 fd 04 	lds	r19, 0x04FD
    4c0a:	23 2b       	or	r18, r19
    4c0c:	21 f4       	brne	.+8      	; 0x4c16 <main+0x1dc6>
    4c0e:	4a 94       	dec	r4
    4c10:	45 28       	or	r4, r5
    4c12:	09 f4       	brne	.+2      	; 0x4c16 <main+0x1dc6>
    4c14:	8a c0       	rjmp	.+276    	; 0x4d2a <main+0x1eda>
            block = 12;
        else if (block_placed[2] == 0 && is_block5==1)
    4c16:	20 91 ea 04 	lds	r18, 0x04EA
    4c1a:	30 91 eb 04 	lds	r19, 0x04EB
    4c1e:	23 2b       	or	r18, r19
    4c20:	21 f4       	brne	.+8      	; 0x4c2a <main+0x1dda>
    4c22:	2a 94       	dec	r2
    4c24:	23 28       	or	r2, r3
    4c26:	09 f4       	brne	.+2      	; 0x4c2a <main+0x1dda>
    4c28:	86 c0       	rjmp	.+268    	; 0x4d36 <main+0x1ee6>
            block = 3;
        else if (block_placed[3] == 0 && is_block6==1)
    4c2a:	20 91 ec 04 	lds	r18, 0x04EC
    4c2e:	30 91 ed 04 	lds	r19, 0x04ED
    4c32:	23 2b       	or	r18, r19
    4c34:	09 f0       	breq	.+2      	; 0x4c38 <main+0x1de8>
    4c36:	89 c0       	rjmp	.+274    	; 0x4d4a <main+0x1efa>
    4c38:	01 97       	sbiw	r24, 0x01	; 1
    4c3a:	09 f0       	breq	.+2      	; 0x4c3e <main+0x1dee>
    4c3c:	86 c0       	rjmp	.+268    	; 0x4d4a <main+0x1efa>
    4c3e:	81 c0       	rjmp	.+258    	; 0x4d42 <main+0x1ef2>
        is_block3 = check_block(5);
        is_block4 = check_block(6);
        is_block5 = check_block(9);
        is_block6 = check_block(10);
        if (block_placed[0] == 0 && is_block1==1)
            block = 1;
    4c40:	cc 24       	eor	r12, r12
    4c42:	c3 94       	inc	r12
    4c44:	d1 2c       	mov	r13, r1
    4c46:	81 c0       	rjmp	.+258    	; 0x4d4a <main+0x1efa>
        else if (block_placed[1] == 0 && is_block2==1)
            block = 2;
    4c48:	68 94       	set
    4c4a:	cc 24       	eor	r12, r12
    4c4c:	c1 f8       	bld	r12, 1
    4c4e:	d1 2c       	mov	r13, r1
    4c50:	7c c0       	rjmp	.+248    	; 0x4d4a <main+0x1efa>
        else if (block_placed[4] == 0 && is_block3==1)
            block = 5;
    4c52:	0f 2e       	mov	r0, r31
    4c54:	f5 e0       	ldi	r31, 0x05	; 5
    4c56:	cf 2e       	mov	r12, r31
    4c58:	d1 2c       	mov	r13, r1
    4c5a:	f0 2d       	mov	r31, r0
    4c5c:	76 c0       	rjmp	.+236    	; 0x4d4a <main+0x1efa>
        else if (block_placed[5] == 0 && is_block4==1)
            block = 6;
    4c5e:	0f 2e       	mov	r0, r31
    4c60:	f6 e0       	ldi	r31, 0x06	; 6
    4c62:	cf 2e       	mov	r12, r31
    4c64:	d1 2c       	mov	r13, r1
    4c66:	f0 2d       	mov	r31, r0
    4c68:	70 c0       	rjmp	.+224    	; 0x4d4a <main+0x1efa>
        else if (block_placed[8] == 0 && is_block5==1)
            block = 9;
    4c6a:	0f 2e       	mov	r0, r31
    4c6c:	f9 e0       	ldi	r31, 0x09	; 9
    4c6e:	cf 2e       	mov	r12, r31
    4c70:	d1 2c       	mov	r13, r1
    4c72:	f0 2d       	mov	r31, r0
    4c74:	6a c0       	rjmp	.+212    	; 0x4d4a <main+0x1efa>
        else if (block_placed[9] == 0 && is_block6==1)
            block = 10;
    4c76:	0f 2e       	mov	r0, r31
    4c78:	fa e0       	ldi	r31, 0x0A	; 10
    4c7a:	cf 2e       	mov	r12, r31
    4c7c:	d1 2c       	mov	r13, r1
    4c7e:	f0 2d       	mov	r31, r0
    4c80:	64 c0       	rjmp	.+200    	; 0x4d4a <main+0x1efa>
        is_block3 = check_block(7);
        is_block4 = check_block(8);
        is_block5 = check_block(11);
        is_block6 = check_block(12);
        if (block_placed[2] == 0 && is_block1==1)
            block = 3;
    4c82:	0f 2e       	mov	r0, r31
    4c84:	f3 e0       	ldi	r31, 0x03	; 3
    4c86:	cf 2e       	mov	r12, r31
    4c88:	d1 2c       	mov	r13, r1
    4c8a:	f0 2d       	mov	r31, r0
    4c8c:	5e c0       	rjmp	.+188    	; 0x4d4a <main+0x1efa>
        else if (block_placed[3] == 0 && is_block2==1)
            block = 4;
    4c8e:	68 94       	set
    4c90:	cc 24       	eor	r12, r12
    4c92:	c2 f8       	bld	r12, 2
    4c94:	d1 2c       	mov	r13, r1
    4c96:	59 c0       	rjmp	.+178    	; 0x4d4a <main+0x1efa>
        else if (block_placed[6] == 0 && is_block3==1)
            block = 7;
    4c98:	0f 2e       	mov	r0, r31
    4c9a:	f7 e0       	ldi	r31, 0x07	; 7
    4c9c:	cf 2e       	mov	r12, r31
    4c9e:	d1 2c       	mov	r13, r1
    4ca0:	f0 2d       	mov	r31, r0
    4ca2:	53 c0       	rjmp	.+166    	; 0x4d4a <main+0x1efa>
        else if (block_placed[7] == 0 && is_block4==1)
            block = 8;
    4ca4:	68 94       	set
    4ca6:	cc 24       	eor	r12, r12
    4ca8:	c3 f8       	bld	r12, 3
    4caa:	d1 2c       	mov	r13, r1
    4cac:	4e c0       	rjmp	.+156    	; 0x4d4a <main+0x1efa>
        else if (block_placed[10] == 0 && is_block5==1)
            block = 11;
    4cae:	0f 2e       	mov	r0, r31
    4cb0:	fb e0       	ldi	r31, 0x0B	; 11
    4cb2:	cf 2e       	mov	r12, r31
    4cb4:	d1 2c       	mov	r13, r1
    4cb6:	f0 2d       	mov	r31, r0
    4cb8:	48 c0       	rjmp	.+144    	; 0x4d4a <main+0x1efa>
        else if (block_placed[11] == 0 && is_block6==1)
            block = 12;
    4cba:	0f 2e       	mov	r0, r31
    4cbc:	fc e0       	ldi	r31, 0x0C	; 12
    4cbe:	cf 2e       	mov	r12, r31
    4cc0:	d1 2c       	mov	r13, r1
    4cc2:	f0 2d       	mov	r31, r0
    4cc4:	42 c0       	rjmp	.+132    	; 0x4d4a <main+0x1efa>
        is_block3 = check_block(9);
        is_block4 = check_block(10);
        is_block5 = check_block(1);
        is_block6 = check_block(2);
        if (block_placed[4] == 0 && is_block1==1)
            block = 5;
    4cc6:	0f 2e       	mov	r0, r31
    4cc8:	f5 e0       	ldi	r31, 0x05	; 5
    4cca:	cf 2e       	mov	r12, r31
    4ccc:	d1 2c       	mov	r13, r1
    4cce:	f0 2d       	mov	r31, r0
    4cd0:	3c c0       	rjmp	.+120    	; 0x4d4a <main+0x1efa>
        else if (block_placed[5] == 0 && is_block2==1)
            block = 6;
    4cd2:	0f 2e       	mov	r0, r31
    4cd4:	f6 e0       	ldi	r31, 0x06	; 6
    4cd6:	cf 2e       	mov	r12, r31
    4cd8:	d1 2c       	mov	r13, r1
    4cda:	f0 2d       	mov	r31, r0
    4cdc:	36 c0       	rjmp	.+108    	; 0x4d4a <main+0x1efa>
        else if (block_placed[8] == 0 && is_block3==1)
            block = 9;
    4cde:	0f 2e       	mov	r0, r31
    4ce0:	f9 e0       	ldi	r31, 0x09	; 9
    4ce2:	cf 2e       	mov	r12, r31
    4ce4:	d1 2c       	mov	r13, r1
    4ce6:	f0 2d       	mov	r31, r0
    4ce8:	30 c0       	rjmp	.+96     	; 0x4d4a <main+0x1efa>
        else if (block_placed[9] == 0 && is_block4==1)
            block = 10;
    4cea:	0f 2e       	mov	r0, r31
    4cec:	fa e0       	ldi	r31, 0x0A	; 10
    4cee:	cf 2e       	mov	r12, r31
    4cf0:	d1 2c       	mov	r13, r1
    4cf2:	f0 2d       	mov	r31, r0
    4cf4:	2a c0       	rjmp	.+84     	; 0x4d4a <main+0x1efa>
        else if (block_placed[0] == 0 && is_block5==1)
            block = 1;
    4cf6:	cc 24       	eor	r12, r12
    4cf8:	c3 94       	inc	r12
    4cfa:	d1 2c       	mov	r13, r1
    4cfc:	26 c0       	rjmp	.+76     	; 0x4d4a <main+0x1efa>
        else if (block_placed[1] == 0 && is_block6==1)
            block = 2;
    4cfe:	68 94       	set
    4d00:	cc 24       	eor	r12, r12
    4d02:	c1 f8       	bld	r12, 1
    4d04:	d1 2c       	mov	r13, r1
    4d06:	21 c0       	rjmp	.+66     	; 0x4d4a <main+0x1efa>
        is_block3 = check_block(11);
        is_block4 = check_block(12);
        is_block5 = check_block(3);
        is_block6 = check_block(4);
        if (block_placed[6] == 0 && is_block1==1)
            block = 7;
    4d08:	0f 2e       	mov	r0, r31
    4d0a:	f7 e0       	ldi	r31, 0x07	; 7
    4d0c:	cf 2e       	mov	r12, r31
    4d0e:	d1 2c       	mov	r13, r1
    4d10:	f0 2d       	mov	r31, r0
    4d12:	1b c0       	rjmp	.+54     	; 0x4d4a <main+0x1efa>
        else if (block_placed[7] == 0 && is_block2==1)
            block = 8;
    4d14:	68 94       	set
    4d16:	cc 24       	eor	r12, r12
    4d18:	c3 f8       	bld	r12, 3
    4d1a:	d1 2c       	mov	r13, r1
    4d1c:	16 c0       	rjmp	.+44     	; 0x4d4a <main+0x1efa>
        else if (block_placed[10] == 0 && is_block3==1)
            block = 11;
    4d1e:	0f 2e       	mov	r0, r31
    4d20:	fb e0       	ldi	r31, 0x0B	; 11
    4d22:	cf 2e       	mov	r12, r31
    4d24:	d1 2c       	mov	r13, r1
    4d26:	f0 2d       	mov	r31, r0
    4d28:	10 c0       	rjmp	.+32     	; 0x4d4a <main+0x1efa>
        else if (block_placed[11] == 0 && is_block4==1)
            block = 12;
    4d2a:	0f 2e       	mov	r0, r31
    4d2c:	fc e0       	ldi	r31, 0x0C	; 12
    4d2e:	cf 2e       	mov	r12, r31
    4d30:	d1 2c       	mov	r13, r1
    4d32:	f0 2d       	mov	r31, r0
    4d34:	0a c0       	rjmp	.+20     	; 0x4d4a <main+0x1efa>
        else if (block_placed[2] == 0 && is_block5==1)
            block = 3;
    4d36:	0f 2e       	mov	r0, r31
    4d38:	f3 e0       	ldi	r31, 0x03	; 3
    4d3a:	cf 2e       	mov	r12, r31
    4d3c:	d1 2c       	mov	r13, r1
    4d3e:	f0 2d       	mov	r31, r0
    4d40:	04 c0       	rjmp	.+8      	; 0x4d4a <main+0x1efa>
        else if (block_placed[3] == 0 && is_block6==1)
            block = 4;
    4d42:	68 94       	set
    4d44:	cc 24       	eor	r12, r12
    4d46:	c2 f8       	bld	r12, 2
    4d48:	d1 2c       	mov	r13, r1
    }

    free(path);
    4d4a:	c7 01       	movw	r24, r14
    4d4c:	d9 d4       	rcall	.+2482   	; 0x5700 <free>
    len = 0;
    4d4e:	1a 82       	std	Y+2, r1	; 0x02
    4d50:	19 82       	std	Y+1, r1	; 0x01
    bnode = which_node(block);
    4d52:	c6 01       	movw	r24, r12
    4d54:	0e 94 a6 04 	call	0x94c	; 0x94c <which_node>
    4d58:	5c 01       	movw	r10, r24
    dijkstra(G,n,u);
    4d5a:	40 91 fe 04 	lds	r20, 0x04FE
    4d5e:	50 91 ff 04 	lds	r21, 0x04FF
    4d62:	60 91 87 04 	lds	r22, 0x0487
    4d66:	70 91 88 04 	lds	r23, 0x0488
    4d6a:	8e e7       	ldi	r24, 0x7E	; 126
    4d6c:	92 e0       	ldi	r25, 0x02	; 2
    4d6e:	0e 94 94 02 	call	0x528	; 0x528 <dijkstra>
    //printf("Dijkstra Completed\n");
    //printf("Block - %d\n", block);
    //printf("Node - %d\n", bnode);
    dist_comp(bnode,bnode,path,&len);
    4d72:	9e 01       	movw	r18, r28
    4d74:	2f 5f       	subi	r18, 0xFF	; 255
    4d76:	3f 4f       	sbci	r19, 0xFF	; 255
    4d78:	a7 01       	movw	r20, r14
    4d7a:	b5 01       	movw	r22, r10
    4d7c:	c5 01       	movw	r24, r10
    4d7e:	0e 94 15 04 	call	0x82a	; 0x82a <dist_comp>
    //printf("Dist compare Completed\n");
    for(int p = 0; p<len; p++)
    4d82:	89 81       	ldd	r24, Y+1	; 0x01
    4d84:	9a 81       	ldd	r25, Y+2	; 0x02
    4d86:	18 16       	cp	r1, r24
    4d88:	19 06       	cpc	r1, r25
    4d8a:	3c f4       	brge	.+14     	; 0x4d9a <main+0x1f4a>
    4d8c:	20 e0       	ldi	r18, 0x00	; 0
    4d8e:	30 e0       	ldi	r19, 0x00	; 0
    4d90:	2f 5f       	subi	r18, 0xFF	; 255
    4d92:	3f 4f       	sbci	r19, 0xFF	; 255
    4d94:	28 17       	cp	r18, r24
    4d96:	39 07       	cpc	r19, r25
    4d98:	d9 f7       	brne	.-10     	; 0x4d90 <main+0x1f40>
    {
        //printf("%d\n",path[p]);
        //lcd_print(1,2*p,path[p],2);
    }
    traverse(path,u,&len);
    4d9a:	60 91 fe 04 	lds	r22, 0x04FE
    4d9e:	70 91 ff 04 	lds	r23, 0x04FF
    4da2:	ae 01       	movw	r20, r28
    4da4:	4f 5f       	subi	r20, 0xFF	; 255
    4da6:	5f 4f       	sbci	r21, 0xFF	; 255
    4da8:	c7 01       	movw	r24, r14
    4daa:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <traverse>
    //printf("Traverse Completed\n");
    free(path);
    4dae:	c7 01       	movw	r24, r14
    4db0:	a7 d4       	rcall	.+2382   	; 0x5700 <free>
    len = 0;
    4db2:	1a 82       	std	Y+2, r1	; 0x02
    4db4:	19 82       	std	Y+1, r1	; 0x01
    block_choose2(block,block_placed);
    4db6:	66 ee       	ldi	r22, 0xE6	; 230
    4db8:	74 e0       	ldi	r23, 0x04	; 4
    4dba:	c6 01       	movw	r24, r12
    4dbc:	0e 94 25 16 	call	0x2c4a	; 0x2c4a <block_choose2>
    //printf("Block Choose Completed\n");
    u = bnode;
    4dc0:	b0 92 ff 04 	sts	0x04FF, r11
    4dc4:	a0 92 fe 04 	sts	0x04FE, r10
    4dc8:	e7 e6       	ldi	r30, 0x67	; 103
    4dca:	f4 e0       	ldi	r31, 0x04	; 4
    for (int i = 0; i < 10; i++)
    4dcc:	80 e0       	ldi	r24, 0x00	; 0
    4dce:	90 e0       	ldi	r25, 0x00	; 0
                break;
            }
        }
        else
        {
            house_no = -1;
    4dd0:	7f ef       	ldi	r23, 0xFF	; 255
    4dd2:	6f ef       	ldi	r22, 0xFF	; 255
    block_choose2(block,block_placed);
    //printf("Block Choose Completed\n");
    u = bnode;
    for (int i = 0; i < 10; i++)
    {
        if (which_material[i] == block)
    4dd4:	21 91       	ld	r18, Z+
    4dd6:	31 91       	ld	r19, Z+
    4dd8:	2c 15       	cp	r18, r12
    4dda:	3d 05       	cpc	r19, r13
    4ddc:	c1 f4       	brne	.+48     	; 0x4e0e <main+0x1fbe>
    4dde:	9c 01       	movw	r18, r24
        {
            if (i==0)
    4de0:	82 30       	cpi	r24, 0x02	; 2
    4de2:	91 05       	cpc	r25, r1
    4de4:	08 f4       	brcc	.+2      	; 0x4de8 <main+0x1f98>
    4de6:	3b c2       	rjmp	.+1142   	; 0x525e <main+0x240e>
    4de8:	ac 01       	movw	r20, r24
    4dea:	42 50       	subi	r20, 0x02	; 2
    4dec:	51 09       	sbc	r21, r1
            else if (i==1)
            {
                house_no = 1;
                break;
            }
            else if (i==2)
    4dee:	42 30       	cpi	r20, 0x02	; 2
    4df0:	51 05       	cpc	r21, r1
    4df2:	08 f4       	brcc	.+2      	; 0x4df6 <main+0x1fa6>
    4df4:	37 c2       	rjmp	.+1134   	; 0x5264 <main+0x2414>
    4df6:	42 50       	subi	r20, 0x02	; 2
    4df8:	51 09       	sbc	r21, r1
            else if (i==3)
            {
                house_no = 2;
                break;
            }
            else if (i==4)
    4dfa:	42 30       	cpi	r20, 0x02	; 2
    4dfc:	51 05       	cpc	r21, r1
    4dfe:	08 f4       	brcc	.+2      	; 0x4e02 <main+0x1fb2>
    4e00:	34 c2       	rjmp	.+1128   	; 0x526a <main+0x241a>
    4e02:	26 50       	subi	r18, 0x06	; 6
    4e04:	31 09       	sbc	r19, r1
            else if (i==5)
            {
                house_no = 3;
                break;
            }
            else if (i==6)
    4e06:	22 30       	cpi	r18, 0x02	; 2
    4e08:	31 05       	cpc	r19, r1
    4e0a:	18 f4       	brcc	.+6      	; 0x4e12 <main+0x1fc2>
    4e0c:	31 c2       	rjmp	.+1122   	; 0x5270 <main+0x2420>
                break;
            }
        }
        else
        {
            house_no = -1;
    4e0e:	07 2f       	mov	r16, r23
    4e10:	16 2f       	mov	r17, r22
    free(path);
    len = 0;
    block_choose2(block,block_placed);
    //printf("Block Choose Completed\n");
    u = bnode;
    for (int i = 0; i < 10; i++)
    4e12:	01 96       	adiw	r24, 0x01	; 1
    4e14:	8a 30       	cpi	r24, 0x0A	; 10
    4e16:	91 05       	cpc	r25, r1
    4e18:	e9 f6       	brne	.-70     	; 0x4dd4 <main+0x1f84>
        else
        {
            house_no = -1;
        }
    }
    if (house_no != -1)
    4e1a:	0f 3f       	cpi	r16, 0xFF	; 255
    4e1c:	2f ef       	ldi	r18, 0xFF	; 255
    4e1e:	12 07       	cpc	r17, r18
    4e20:	79 f0       	breq	.+30     	; 0x4e40 <main+0x1ff0>
    {
        m_pick();
    4e22:	0e 94 9e 06 	call	0xd3c	; 0xd3c <m_pick>
        forward();
    4e26:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    4e2a:	8f ef       	ldi	r24, 0xFF	; 255
    4e2c:	9f eb       	ldi	r25, 0xBF	; 191
    4e2e:	e6 e0       	ldi	r30, 0x06	; 6
    4e30:	81 50       	subi	r24, 0x01	; 1
    4e32:	90 40       	sbci	r25, 0x00	; 0
    4e34:	e0 40       	sbci	r30, 0x00	; 0
    4e36:	e1 f7       	brne	.-8      	; 0x4e30 <main+0x1fe0>
    4e38:	00 c0       	rjmp	.+0      	; 0x4e3a <main+0x1fea>
    4e3a:	00 00       	nop
        _delay_ms(150);
        stop();
    4e3c:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    }
    if (block == which_material[2*house_no - 1])
    4e40:	c8 01       	movw	r24, r16
    4e42:	88 0f       	add	r24, r24
    4e44:	99 1f       	adc	r25, r25
    4e46:	fc 01       	movw	r30, r24
    4e48:	ee 0f       	add	r30, r30
    4e4a:	ff 1f       	adc	r31, r31
    4e4c:	eb 59       	subi	r30, 0x9B	; 155
    4e4e:	fb 4f       	sbci	r31, 0xFB	; 251
    4e50:	a0 80       	ld	r10, Z
    4e52:	b1 80       	ldd	r11, Z+1	; 0x01
    4e54:	ac 14       	cp	r10, r12
    4e56:	bd 04       	cpc	r11, r13
    4e58:	39 f4       	brne	.+14     	; 0x4e68 <main+0x2018>
    {
        block = which_material[2*house_no - 2];
    4e5a:	fc 01       	movw	r30, r24
    4e5c:	ee 0f       	add	r30, r30
    4e5e:	ff 1f       	adc	r31, r31
    4e60:	ed 59       	subi	r30, 0x9D	; 157
    4e62:	fb 4f       	sbci	r31, 0xFB	; 251
    4e64:	a0 80       	ld	r10, Z
    4e66:	b1 80       	ldd	r11, Z+1	; 0x01
    }
    else
    {
        block = which_material[2*house_no - 1];
    }
    if (block != 0)
    4e68:	a1 14       	cp	r10, r1
    4e6a:	b1 04       	cpc	r11, r1
    4e6c:	09 f4       	brne	.+2      	; 0x4e70 <main+0x2020>
    4e6e:	44 c0       	rjmp	.+136    	; 0x4ef8 <main+0x20a8>
    {
        dijkstra(G,n,u);
    4e70:	40 91 fe 04 	lds	r20, 0x04FE
    4e74:	50 91 ff 04 	lds	r21, 0x04FF
    4e78:	60 91 87 04 	lds	r22, 0x0487
    4e7c:	70 91 88 04 	lds	r23, 0x0488
    4e80:	8e e7       	ldi	r24, 0x7E	; 126
    4e82:	92 e0       	ldi	r25, 0x02	; 2
    4e84:	0e 94 94 02 	call	0x528	; 0x528 <dijkstra>
        //printf("Dijkstra Completed\n");
        bnode = which_node(block);
    4e88:	c5 01       	movw	r24, r10
    4e8a:	0e 94 a6 04 	call	0x94c	; 0x94c <which_node>
        dist_comp(bnode,bnode,path,&len);
    4e8e:	9e 01       	movw	r18, r28
    4e90:	2f 5f       	subi	r18, 0xFF	; 255
    4e92:	3f 4f       	sbci	r19, 0xFF	; 255
    4e94:	a7 01       	movw	r20, r14
    4e96:	bc 01       	movw	r22, r24
    4e98:	0e 94 15 04 	call	0x82a	; 0x82a <dist_comp>
        //printf("Dist compare Completed\n");
        //printf("Block - %d\n",block);
        //printf("Node - %d\n",bnode);
        for(int p = 0; p<len; p++)
    4e9c:	89 81       	ldd	r24, Y+1	; 0x01
    4e9e:	9a 81       	ldd	r25, Y+2	; 0x02
    4ea0:	18 16       	cp	r1, r24
    4ea2:	19 06       	cpc	r1, r25
    4ea4:	3c f4       	brge	.+14     	; 0x4eb4 <main+0x2064>
    4ea6:	20 e0       	ldi	r18, 0x00	; 0
    4ea8:	30 e0       	ldi	r19, 0x00	; 0
    4eaa:	2f 5f       	subi	r18, 0xFF	; 255
    4eac:	3f 4f       	sbci	r19, 0xFF	; 255
    4eae:	28 17       	cp	r18, r24
    4eb0:	39 07       	cpc	r19, r25
    4eb2:	d9 f7       	brne	.-10     	; 0x4eaa <main+0x205a>
        {
            //printf("%d\n",path[p]);
            //lcd_print(1,2*p,path[p],2);
        }
        bnode = path[len-1];
        traverse(path,u,&len);
    4eb4:	60 91 fe 04 	lds	r22, 0x04FE
    4eb8:	70 91 ff 04 	lds	r23, 0x04FF
    4ebc:	ae 01       	movw	r20, r28
    4ebe:	4f 5f       	subi	r20, 0xFF	; 255
    4ec0:	5f 4f       	sbci	r21, 0xFF	; 255
    4ec2:	c7 01       	movw	r24, r14
    4ec4:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <traverse>
        //printf("Traverse Completed\n");
        free(path);
    4ec8:	c7 01       	movw	r24, r14
    4eca:	1a d4       	rcall	.+2100   	; 0x5700 <free>
        len = 0;
    4ecc:	1a 82       	std	Y+2, r1	; 0x02
    4ece:	19 82       	std	Y+1, r1	; 0x01
        block_choose2(block,block_placed);
    4ed0:	66 ee       	ldi	r22, 0xE6	; 230
    4ed2:	74 e0       	ldi	r23, 0x04	; 4
    4ed4:	c5 01       	movw	r24, r10
    4ed6:	0e 94 25 16 	call	0x2c4a	; 0x2c4a <block_choose2>
        //printf("Block Choose Completed\n");
        s_pick();
    4eda:	0e 94 0c 07 	call	0xe18	; 0xe18 <s_pick>
        forward();
    4ede:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    4ee2:	ff ef       	ldi	r31, 0xFF	; 255
    4ee4:	2f eb       	ldi	r18, 0xBF	; 191
    4ee6:	86 e0       	ldi	r24, 0x06	; 6
    4ee8:	f1 50       	subi	r31, 0x01	; 1
    4eea:	20 40       	sbci	r18, 0x00	; 0
    4eec:	80 40       	sbci	r24, 0x00	; 0
    4eee:	e1 f7       	brne	.-8      	; 0x4ee8 <main+0x2098>
    4ef0:	00 c0       	rjmp	.+0      	; 0x4ef2 <main+0x20a2>
    4ef2:	00 00       	nop
        _delay_ms(150);
        stop();
    4ef4:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    }
    dijkstra(G,n,u);
    4ef8:	40 91 fe 04 	lds	r20, 0x04FE
    4efc:	50 91 ff 04 	lds	r21, 0x04FF
    4f00:	60 91 87 04 	lds	r22, 0x0487
    4f04:	70 91 88 04 	lds	r23, 0x0488
    4f08:	8e e7       	ldi	r24, 0x7E	; 126
    4f0a:	92 e0       	ldi	r25, 0x02	; 2
    4f0c:	0e 94 94 02 	call	0x528	; 0x528 <dijkstra>
    //printf("Dijkstra Completed\n");
    hnode = 0;
    hnode = which_house(house_no);
    4f10:	c8 01       	movw	r24, r16
    4f12:	0e 94 08 05 	call	0xa10	; 0xa10 <which_house>
    dist_comp(hnode,hnode,path,&len);
    4f16:	9e 01       	movw	r18, r28
    4f18:	2f 5f       	subi	r18, 0xFF	; 255
    4f1a:	3f 4f       	sbci	r19, 0xFF	; 255
    4f1c:	a7 01       	movw	r20, r14
    4f1e:	bc 01       	movw	r22, r24
    4f20:	0e 94 15 04 	call	0x82a	; 0x82a <dist_comp>
    //printf("Dist compare Completed\n");
    for(int p = 0; p<len; p++)
    4f24:	29 81       	ldd	r18, Y+1	; 0x01
    4f26:	3a 81       	ldd	r19, Y+2	; 0x02
    4f28:	12 16       	cp	r1, r18
    4f2a:	13 06       	cpc	r1, r19
    4f2c:	34 f4       	brge	.+12     	; 0x4f3a <main+0x20ea>
    4f2e:	80 e0       	ldi	r24, 0x00	; 0
    4f30:	90 e0       	ldi	r25, 0x00	; 0
    4f32:	01 96       	adiw	r24, 0x01	; 1
    4f34:	82 17       	cp	r24, r18
    4f36:	93 07       	cpc	r25, r19
    4f38:	e1 f7       	brne	.-8      	; 0x4f32 <main+0x20e2>
    {
        //printf("%d\n",path[p]);
        //lcd_print(1,2*p,path[p],2);
    }
    traverse(path,u,&len);
    4f3a:	60 91 fe 04 	lds	r22, 0x04FE
    4f3e:	70 91 ff 04 	lds	r23, 0x04FF
    4f42:	ae 01       	movw	r20, r28
    4f44:	4f 5f       	subi	r20, 0xFF	; 255
    4f46:	5f 4f       	sbci	r21, 0xFF	; 255
    4f48:	c7 01       	movw	r24, r14
    4f4a:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <traverse>
    //printf("Traverse Completed\n");
    free(path);
    4f4e:	c7 01       	movw	r24, r14
    4f50:	d7 d3       	rcall	.+1966   	; 0x5700 <free>
    len = 0;
    4f52:	1a 82       	std	Y+2, r1	; 0x02
    4f54:	19 82       	std	Y+1, r1	; 0x01
    if (house_no == 1)
    4f56:	01 30       	cpi	r16, 0x01	; 1
    4f58:	11 05       	cpc	r17, r1
    4f5a:	09 f0       	breq	.+2      	; 0x4f5e <main+0x210e>
    4f5c:	52 c0       	rjmp	.+164    	; 0x5002 <main+0x21b2>
    {
        fdir = 'w';
    4f5e:	87 e7       	ldi	r24, 0x77	; 119
    4f60:	80 93 85 04 	sts	0x0485, r24
        block_traverse();
    4f64:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <block_traverse>
        back();
    4f68:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    4f6c:	9f ef       	ldi	r25, 0xFF	; 255
    4f6e:	ef e7       	ldi	r30, 0x7F	; 127
    4f70:	f4 e0       	ldi	r31, 0x04	; 4
    4f72:	91 50       	subi	r25, 0x01	; 1
    4f74:	e0 40       	sbci	r30, 0x00	; 0
    4f76:	f0 40       	sbci	r31, 0x00	; 0
    4f78:	e1 f7       	brne	.-8      	; 0x4f72 <main+0x2122>
    4f7a:	00 c0       	rjmp	.+0      	; 0x4f7c <main+0x212c>
    4f7c:	00 00       	nop
        _delay_ms(100);
        stop();
    4f7e:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        if (house_config[house_no-1]==0)
    4f82:	80 91 7b 04 	lds	r24, 0x047B
    4f86:	90 91 7c 04 	lds	r25, 0x047C
    4f8a:	89 2b       	or	r24, r25
    4f8c:	e9 f4       	brne	.+58     	; 0x4fc8 <main+0x2178>
        {
            back();
    4f8e:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    4f92:	2f ef       	ldi	r18, 0xFF	; 255
    4f94:	8f e7       	ldi	r24, 0x7F	; 127
    4f96:	9d e0       	ldi	r25, 0x0D	; 13
    4f98:	21 50       	subi	r18, 0x01	; 1
    4f9a:	80 40       	sbci	r24, 0x00	; 0
    4f9c:	90 40       	sbci	r25, 0x00	; 0
    4f9e:	e1 f7       	brne	.-8      	; 0x4f98 <main+0x2148>
    4fa0:	00 c0       	rjmp	.+0      	; 0x4fa2 <main+0x2152>
    4fa2:	00 00       	nop
            _delay_ms(300);
            stop();
    4fa4:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_lr();
    4fa8:	0e 94 bf 08 	call	0x117e	; 0x117e <place_lr>
            forward();
    4fac:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    4fb0:	ef ef       	ldi	r30, 0xFF	; 255
    4fb2:	ff eb       	ldi	r31, 0xBF	; 191
    4fb4:	26 e0       	ldi	r18, 0x06	; 6
    4fb6:	e1 50       	subi	r30, 0x01	; 1
    4fb8:	f0 40       	sbci	r31, 0x00	; 0
    4fba:	20 40       	sbci	r18, 0x00	; 0
    4fbc:	e1 f7       	brne	.-8      	; 0x4fb6 <main+0x2166>
    4fbe:	00 c0       	rjmp	.+0      	; 0x4fc0 <main+0x2170>
    4fc0:	00 00       	nop
            _delay_ms(150);
            stop();
    4fc2:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    4fc6:	57 c1       	rjmp	.+686    	; 0x5276 <main+0x2426>
        }
        else
        {
            back();
    4fc8:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    4fcc:	8f ef       	ldi	r24, 0xFF	; 255
    4fce:	9f e7       	ldi	r25, 0x7F	; 127
    4fd0:	ed e0       	ldi	r30, 0x0D	; 13
    4fd2:	81 50       	subi	r24, 0x01	; 1
    4fd4:	90 40       	sbci	r25, 0x00	; 0
    4fd6:	e0 40       	sbci	r30, 0x00	; 0
    4fd8:	e1 f7       	brne	.-8      	; 0x4fd2 <main+0x2182>
    4fda:	00 c0       	rjmp	.+0      	; 0x4fdc <main+0x218c>
    4fdc:	00 00       	nop
            _delay_ms(300);
            stop();
    4fde:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_hr();
    4fe2:	0e 94 30 09 	call	0x1260	; 0x1260 <place_hr>
            forward();
    4fe6:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    4fea:	ff ef       	ldi	r31, 0xFF	; 255
    4fec:	2f eb       	ldi	r18, 0xBF	; 191
    4fee:	86 e0       	ldi	r24, 0x06	; 6
    4ff0:	f1 50       	subi	r31, 0x01	; 1
    4ff2:	20 40       	sbci	r18, 0x00	; 0
    4ff4:	80 40       	sbci	r24, 0x00	; 0
    4ff6:	e1 f7       	brne	.-8      	; 0x4ff0 <main+0x21a0>
    4ff8:	00 c0       	rjmp	.+0      	; 0x4ffa <main+0x21aa>
    4ffa:	00 00       	nop
            _delay_ms(150);
            stop();
    4ffc:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    5000:	3a c1       	rjmp	.+628    	; 0x5276 <main+0x2426>
        else if (block_placed[8] == 0 && is_block5==1)
            block = 9;
        else if (block_placed[9] == 0 && is_block6==1)
            block = 10;
    }
    else if (house_no == 2)
    5002:	02 30       	cpi	r16, 0x02	; 2
    5004:	11 05       	cpc	r17, r1
    5006:	09 f0       	breq	.+2      	; 0x500a <main+0x21ba>
    5008:	52 c0       	rjmp	.+164    	; 0x50ae <main+0x225e>
    {
        fdir = 'e';
    500a:	85 e6       	ldi	r24, 0x65	; 101
    500c:	80 93 85 04 	sts	0x0485, r24
        block_traverse();
    5010:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <block_traverse>
        back();
    5014:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    5018:	9f ef       	ldi	r25, 0xFF	; 255
    501a:	ef e7       	ldi	r30, 0x7F	; 127
    501c:	f4 e0       	ldi	r31, 0x04	; 4
    501e:	91 50       	subi	r25, 0x01	; 1
    5020:	e0 40       	sbci	r30, 0x00	; 0
    5022:	f0 40       	sbci	r31, 0x00	; 0
    5024:	e1 f7       	brne	.-8      	; 0x501e <main+0x21ce>
    5026:	00 c0       	rjmp	.+0      	; 0x5028 <main+0x21d8>
    5028:	00 00       	nop
        _delay_ms(100);
        stop();
    502a:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        if (house_config[house_no-1]==0)
    502e:	80 91 7d 04 	lds	r24, 0x047D
    5032:	90 91 7e 04 	lds	r25, 0x047E
    5036:	89 2b       	or	r24, r25
    5038:	e9 f4       	brne	.+58     	; 0x5074 <main+0x2224>
        {
            back();
    503a:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    503e:	2f ef       	ldi	r18, 0xFF	; 255
    5040:	8f e7       	ldi	r24, 0x7F	; 127
    5042:	9d e0       	ldi	r25, 0x0D	; 13
    5044:	21 50       	subi	r18, 0x01	; 1
    5046:	80 40       	sbci	r24, 0x00	; 0
    5048:	90 40       	sbci	r25, 0x00	; 0
    504a:	e1 f7       	brne	.-8      	; 0x5044 <main+0x21f4>
    504c:	00 c0       	rjmp	.+0      	; 0x504e <main+0x21fe>
    504e:	00 00       	nop
            _delay_ms(300);
            stop();
    5050:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_lr();
    5054:	0e 94 bf 08 	call	0x117e	; 0x117e <place_lr>
            forward();
    5058:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    505c:	ef ef       	ldi	r30, 0xFF	; 255
    505e:	ff eb       	ldi	r31, 0xBF	; 191
    5060:	26 e0       	ldi	r18, 0x06	; 6
    5062:	e1 50       	subi	r30, 0x01	; 1
    5064:	f0 40       	sbci	r31, 0x00	; 0
    5066:	20 40       	sbci	r18, 0x00	; 0
    5068:	e1 f7       	brne	.-8      	; 0x5062 <main+0x2212>
    506a:	00 c0       	rjmp	.+0      	; 0x506c <main+0x221c>
    506c:	00 00       	nop
            _delay_ms(150);
            stop();
    506e:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    5072:	01 c1       	rjmp	.+514    	; 0x5276 <main+0x2426>
        }
        else
        {
            back();
    5074:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    5078:	8f ef       	ldi	r24, 0xFF	; 255
    507a:	9f e7       	ldi	r25, 0x7F	; 127
    507c:	ed e0       	ldi	r30, 0x0D	; 13
    507e:	81 50       	subi	r24, 0x01	; 1
    5080:	90 40       	sbci	r25, 0x00	; 0
    5082:	e0 40       	sbci	r30, 0x00	; 0
    5084:	e1 f7       	brne	.-8      	; 0x507e <main+0x222e>
    5086:	00 c0       	rjmp	.+0      	; 0x5088 <main+0x2238>
    5088:	00 00       	nop
            _delay_ms(300);
            stop();
    508a:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_hr();
    508e:	0e 94 30 09 	call	0x1260	; 0x1260 <place_hr>
            forward();
    5092:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    5096:	ff ef       	ldi	r31, 0xFF	; 255
    5098:	2f eb       	ldi	r18, 0xBF	; 191
    509a:	86 e0       	ldi	r24, 0x06	; 6
    509c:	f1 50       	subi	r31, 0x01	; 1
    509e:	20 40       	sbci	r18, 0x00	; 0
    50a0:	80 40       	sbci	r24, 0x00	; 0
    50a2:	e1 f7       	brne	.-8      	; 0x509c <main+0x224c>
    50a4:	00 c0       	rjmp	.+0      	; 0x50a6 <main+0x2256>
    50a6:	00 00       	nop
            _delay_ms(150);
            stop();
    50a8:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    50ac:	e4 c0       	rjmp	.+456    	; 0x5276 <main+0x2426>
        else if (block_placed[10] == 0 && is_block5==1)
            block = 11;
        else if (block_placed[11] == 0 && is_block6==1)
            block = 12;
    }
    else if (house_no == 3)
    50ae:	03 30       	cpi	r16, 0x03	; 3
    50b0:	11 05       	cpc	r17, r1
    50b2:	09 f0       	breq	.+2      	; 0x50b6 <main+0x2266>
    50b4:	52 c0       	rjmp	.+164    	; 0x515a <main+0x230a>
    {
        fdir = 'w';
    50b6:	87 e7       	ldi	r24, 0x77	; 119
    50b8:	80 93 85 04 	sts	0x0485, r24
        block_traverse();
    50bc:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <block_traverse>
        back();
    50c0:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    50c4:	9f ef       	ldi	r25, 0xFF	; 255
    50c6:	ef e7       	ldi	r30, 0x7F	; 127
    50c8:	f4 e0       	ldi	r31, 0x04	; 4
    50ca:	91 50       	subi	r25, 0x01	; 1
    50cc:	e0 40       	sbci	r30, 0x00	; 0
    50ce:	f0 40       	sbci	r31, 0x00	; 0
    50d0:	e1 f7       	brne	.-8      	; 0x50ca <main+0x227a>
    50d2:	00 c0       	rjmp	.+0      	; 0x50d4 <main+0x2284>
    50d4:	00 00       	nop
        _delay_ms(100);
        stop();
    50d6:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        if (house_config[house_no-1]==0)
    50da:	80 91 7f 04 	lds	r24, 0x047F
    50de:	90 91 80 04 	lds	r25, 0x0480
    50e2:	89 2b       	or	r24, r25
    50e4:	e9 f4       	brne	.+58     	; 0x5120 <main+0x22d0>
        {
            back();
    50e6:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    50ea:	2f ef       	ldi	r18, 0xFF	; 255
    50ec:	8f e7       	ldi	r24, 0x7F	; 127
    50ee:	9d e0       	ldi	r25, 0x0D	; 13
    50f0:	21 50       	subi	r18, 0x01	; 1
    50f2:	80 40       	sbci	r24, 0x00	; 0
    50f4:	90 40       	sbci	r25, 0x00	; 0
    50f6:	e1 f7       	brne	.-8      	; 0x50f0 <main+0x22a0>
    50f8:	00 c0       	rjmp	.+0      	; 0x50fa <main+0x22aa>
    50fa:	00 00       	nop
            _delay_ms(300);
            stop();
    50fc:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_lr();
    5100:	0e 94 bf 08 	call	0x117e	; 0x117e <place_lr>
            forward();
    5104:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    5108:	ef ef       	ldi	r30, 0xFF	; 255
    510a:	ff eb       	ldi	r31, 0xBF	; 191
    510c:	26 e0       	ldi	r18, 0x06	; 6
    510e:	e1 50       	subi	r30, 0x01	; 1
    5110:	f0 40       	sbci	r31, 0x00	; 0
    5112:	20 40       	sbci	r18, 0x00	; 0
    5114:	e1 f7       	brne	.-8      	; 0x510e <main+0x22be>
    5116:	00 c0       	rjmp	.+0      	; 0x5118 <main+0x22c8>
    5118:	00 00       	nop
            _delay_ms(150);
            stop();
    511a:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    511e:	ab c0       	rjmp	.+342    	; 0x5276 <main+0x2426>
        }
        else
        {
            back();
    5120:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    5124:	8f ef       	ldi	r24, 0xFF	; 255
    5126:	9f e7       	ldi	r25, 0x7F	; 127
    5128:	ed e0       	ldi	r30, 0x0D	; 13
    512a:	81 50       	subi	r24, 0x01	; 1
    512c:	90 40       	sbci	r25, 0x00	; 0
    512e:	e0 40       	sbci	r30, 0x00	; 0
    5130:	e1 f7       	brne	.-8      	; 0x512a <main+0x22da>
    5132:	00 c0       	rjmp	.+0      	; 0x5134 <main+0x22e4>
    5134:	00 00       	nop
            _delay_ms(300);
            stop();
    5136:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_hr();
    513a:	0e 94 30 09 	call	0x1260	; 0x1260 <place_hr>
            forward();
    513e:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    5142:	ff ef       	ldi	r31, 0xFF	; 255
    5144:	2f eb       	ldi	r18, 0xBF	; 191
    5146:	86 e0       	ldi	r24, 0x06	; 6
    5148:	f1 50       	subi	r31, 0x01	; 1
    514a:	20 40       	sbci	r18, 0x00	; 0
    514c:	80 40       	sbci	r24, 0x00	; 0
    514e:	e1 f7       	brne	.-8      	; 0x5148 <main+0x22f8>
    5150:	00 c0       	rjmp	.+0      	; 0x5152 <main+0x2302>
    5152:	00 00       	nop
            _delay_ms(150);
            stop();
    5154:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    5158:	8e c0       	rjmp	.+284    	; 0x5276 <main+0x2426>
        else if (block_placed[0] == 0 && is_block5==1)
            block = 1;
        else if (block_placed[1] == 0 && is_block6==1)
            block = 2;
    }
    else if (house_no == 4)
    515a:	04 30       	cpi	r16, 0x04	; 4
    515c:	11 05       	cpc	r17, r1
    515e:	09 f0       	breq	.+2      	; 0x5162 <main+0x2312>
    5160:	8a c0       	rjmp	.+276    	; 0x5276 <main+0x2426>
    {
        fdir = 'e';
    5162:	85 e6       	ldi	r24, 0x65	; 101
    5164:	80 93 85 04 	sts	0x0485, r24
        block_traverse();
    5168:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <block_traverse>
        back();
    516c:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    5170:	9f ef       	ldi	r25, 0xFF	; 255
    5172:	ef e7       	ldi	r30, 0x7F	; 127
    5174:	f4 e0       	ldi	r31, 0x04	; 4
    5176:	91 50       	subi	r25, 0x01	; 1
    5178:	e0 40       	sbci	r30, 0x00	; 0
    517a:	f0 40       	sbci	r31, 0x00	; 0
    517c:	e1 f7       	brne	.-8      	; 0x5176 <main+0x2326>
    517e:	00 c0       	rjmp	.+0      	; 0x5180 <main+0x2330>
    5180:	00 00       	nop
        _delay_ms(100);
        stop();
    5182:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
        if (house_config[house_no-1]==0)
    5186:	80 91 81 04 	lds	r24, 0x0481
    518a:	90 91 82 04 	lds	r25, 0x0482
    518e:	89 2b       	or	r24, r25
    5190:	e9 f4       	brne	.+58     	; 0x51cc <main+0x237c>
        {
            back();
    5192:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    5196:	2f ef       	ldi	r18, 0xFF	; 255
    5198:	8f e7       	ldi	r24, 0x7F	; 127
    519a:	9d e0       	ldi	r25, 0x0D	; 13
    519c:	21 50       	subi	r18, 0x01	; 1
    519e:	80 40       	sbci	r24, 0x00	; 0
    51a0:	90 40       	sbci	r25, 0x00	; 0
    51a2:	e1 f7       	brne	.-8      	; 0x519c <main+0x234c>
    51a4:	00 c0       	rjmp	.+0      	; 0x51a6 <main+0x2356>
    51a6:	00 00       	nop
            _delay_ms(300);
            stop();
    51a8:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_lr();
    51ac:	0e 94 bf 08 	call	0x117e	; 0x117e <place_lr>
            forward();
    51b0:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    51b4:	ef ef       	ldi	r30, 0xFF	; 255
    51b6:	ff eb       	ldi	r31, 0xBF	; 191
    51b8:	26 e0       	ldi	r18, 0x06	; 6
    51ba:	e1 50       	subi	r30, 0x01	; 1
    51bc:	f0 40       	sbci	r31, 0x00	; 0
    51be:	20 40       	sbci	r18, 0x00	; 0
    51c0:	e1 f7       	brne	.-8      	; 0x51ba <main+0x236a>
    51c2:	00 c0       	rjmp	.+0      	; 0x51c4 <main+0x2374>
    51c4:	00 00       	nop
            _delay_ms(150);
            stop();
    51c6:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    51ca:	55 c0       	rjmp	.+170    	; 0x5276 <main+0x2426>
        }
        else
        {
            back();
    51cc:	0e 94 a6 05 	call	0xb4c	; 0xb4c <back>
    51d0:	8f ef       	ldi	r24, 0xFF	; 255
    51d2:	9f e7       	ldi	r25, 0x7F	; 127
    51d4:	ed e0       	ldi	r30, 0x0D	; 13
    51d6:	81 50       	subi	r24, 0x01	; 1
    51d8:	90 40       	sbci	r25, 0x00	; 0
    51da:	e0 40       	sbci	r30, 0x00	; 0
    51dc:	e1 f7       	brne	.-8      	; 0x51d6 <main+0x2386>
    51de:	00 c0       	rjmp	.+0      	; 0x51e0 <main+0x2390>
    51e0:	00 00       	nop
            _delay_ms(300);
            stop();
    51e2:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
            place_hr();
    51e6:	0e 94 30 09 	call	0x1260	; 0x1260 <place_hr>
            forward();
    51ea:	0e 94 a9 05 	call	0xb52	; 0xb52 <forward>
    51ee:	ff ef       	ldi	r31, 0xFF	; 255
    51f0:	2f eb       	ldi	r18, 0xBF	; 191
    51f2:	86 e0       	ldi	r24, 0x06	; 6
    51f4:	f1 50       	subi	r31, 0x01	; 1
    51f6:	20 40       	sbci	r18, 0x00	; 0
    51f8:	80 40       	sbci	r24, 0x00	; 0
    51fa:	e1 f7       	brne	.-8      	; 0x51f4 <main+0x23a4>
    51fc:	00 c0       	rjmp	.+0      	; 0x51fe <main+0x23ae>
    51fe:	00 00       	nop
            _delay_ms(150);
            stop();
    5200:	0e 94 b8 05 	call	0xb70	; 0xb70 <stop>
    5204:	38 c0       	rjmp	.+112    	; 0x5276 <main+0x2426>
    {
        if (which_material[i] == block)
        {
            if (i==0)
            {
                house_no = 1;
    5206:	01 e0       	ldi	r16, 0x01	; 1
    5208:	10 e0       	ldi	r17, 0x00	; 0
    520a:	0c 94 3b 1a 	jmp	0x3476	; 0x3476 <main+0x626>
                house_no = 1;
                break;
            }
            else if (i==2)
            {
                house_no = 2;
    520e:	02 e0       	ldi	r16, 0x02	; 2
    5210:	10 e0       	ldi	r17, 0x00	; 0
    5212:	0c 94 3b 1a 	jmp	0x3476	; 0x3476 <main+0x626>
                house_no = 2;
                break;
            }
            else if (i==4)
            {
                house_no = 3;
    5216:	03 e0       	ldi	r16, 0x03	; 3
    5218:	10 e0       	ldi	r17, 0x00	; 0
    521a:	0c 94 3b 1a 	jmp	0x3476	; 0x3476 <main+0x626>
                house_no = 3;
                break;
            }
            else if (i==6)
            {
                house_no = 4;
    521e:	04 e0       	ldi	r16, 0x04	; 4
    5220:	10 e0       	ldi	r17, 0x00	; 0
    5222:	0c 94 3b 1a 	jmp	0x3476	; 0x3476 <main+0x626>
    {
        if (which_material[i] == block)
        {
            if (i==0)
            {
                house_no = 1;
    5226:	01 e0       	ldi	r16, 0x01	; 1
    5228:	10 e0       	ldi	r17, 0x00	; 0
    522a:	0c 94 7f 1e 	jmp	0x3cfe	; 0x3cfe <main+0xeae>
                house_no = 1;
                break;
            }
            else if (i==2)
            {
                house_no = 2;
    522e:	02 e0       	ldi	r16, 0x02	; 2
    5230:	10 e0       	ldi	r17, 0x00	; 0
    5232:	0c 94 7f 1e 	jmp	0x3cfe	; 0x3cfe <main+0xeae>
                house_no = 2;
                break;
            }
            else if (i==4)
            {
                house_no = 3;
    5236:	03 e0       	ldi	r16, 0x03	; 3
    5238:	10 e0       	ldi	r17, 0x00	; 0
    523a:	0c 94 7f 1e 	jmp	0x3cfe	; 0x3cfe <main+0xeae>
                house_no = 3;
                break;
            }
            else if (i==6)
            {
                house_no = 4;
    523e:	04 e0       	ldi	r16, 0x04	; 4
    5240:	10 e0       	ldi	r17, 0x00	; 0
    5242:	0c 94 7f 1e 	jmp	0x3cfe	; 0x3cfe <main+0xeae>
    {
        if (which_material[i] == block)
        {
            if (i==0)
            {
                house_no = 1;
    5246:	01 e0       	ldi	r16, 0x01	; 1
    5248:	10 e0       	ldi	r17, 0x00	; 0
    524a:	a3 c9       	rjmp	.-3258   	; 0x4592 <main+0x1742>
                house_no = 1;
                break;
            }
            else if (i==2)
            {
                house_no = 2;
    524c:	02 e0       	ldi	r16, 0x02	; 2
    524e:	10 e0       	ldi	r17, 0x00	; 0
    5250:	a0 c9       	rjmp	.-3264   	; 0x4592 <main+0x1742>
                house_no = 2;
                break;
            }
            else if (i==4)
            {
                house_no = 3;
    5252:	03 e0       	ldi	r16, 0x03	; 3
    5254:	10 e0       	ldi	r17, 0x00	; 0
    5256:	9d c9       	rjmp	.-3270   	; 0x4592 <main+0x1742>
                house_no = 3;
                break;
            }
            else if (i==6)
            {
                house_no = 4;
    5258:	04 e0       	ldi	r16, 0x04	; 4
    525a:	10 e0       	ldi	r17, 0x00	; 0
    525c:	9a c9       	rjmp	.-3276   	; 0x4592 <main+0x1742>
    {
        if (which_material[i] == block)
        {
            if (i==0)
            {
                house_no = 1;
    525e:	01 e0       	ldi	r16, 0x01	; 1
    5260:	10 e0       	ldi	r17, 0x00	; 0
    5262:	df cd       	rjmp	.-1090   	; 0x4e22 <main+0x1fd2>
                house_no = 1;
                break;
            }
            else if (i==2)
            {
                house_no = 2;
    5264:	02 e0       	ldi	r16, 0x02	; 2
    5266:	10 e0       	ldi	r17, 0x00	; 0
    5268:	dc cd       	rjmp	.-1096   	; 0x4e22 <main+0x1fd2>
                house_no = 2;
                break;
            }
            else if (i==4)
            {
                house_no = 3;
    526a:	03 e0       	ldi	r16, 0x03	; 3
    526c:	10 e0       	ldi	r17, 0x00	; 0
    526e:	d9 cd       	rjmp	.-1102   	; 0x4e22 <main+0x1fd2>
                house_no = 3;
                break;
            }
            else if (i==6)
            {
                house_no = 4;
    5270:	04 e0       	ldi	r16, 0x04	; 4
    5272:	10 e0       	ldi	r17, 0x00	; 0
    5274:	d6 cd       	rjmp	.-1108   	; 0x4e22 <main+0x1fd2>
    for(int p = 0; p<12; p++)
    {
        //printf("%d -- %d\n",p+1,block_placed[p]);
        //lcd_print(1,2*p,path[p],2);
    }
}
    5276:	80 e0       	ldi	r24, 0x00	; 0
    5278:	90 e0       	ldi	r25, 0x00	; 0
    527a:	0f 90       	pop	r0
    527c:	0f 90       	pop	r0
    527e:	df 91       	pop	r29
    5280:	cf 91       	pop	r28
    5282:	1f 91       	pop	r17
    5284:	0f 91       	pop	r16
    5286:	ff 90       	pop	r15
    5288:	ef 90       	pop	r14
    528a:	df 90       	pop	r13
    528c:	cf 90       	pop	r12
    528e:	bf 90       	pop	r11
    5290:	af 90       	pop	r10
    5292:	9f 90       	pop	r9
    5294:	8f 90       	pop	r8
    5296:	7f 90       	pop	r7
    5298:	6f 90       	pop	r6
    529a:	5f 90       	pop	r5
    529c:	4f 90       	pop	r4
    529e:	3f 90       	pop	r3
    52a0:	2f 90       	pop	r2
    52a2:	08 95       	ret

000052a4 <__subsf3>:
    52a4:	50 58       	subi	r21, 0x80	; 128

000052a6 <__addsf3>:
    52a6:	bb 27       	eor	r27, r27
    52a8:	aa 27       	eor	r26, r26
    52aa:	0e d0       	rcall	.+28     	; 0x52c8 <__addsf3x>
    52ac:	48 c1       	rjmp	.+656    	; 0x553e <__fp_round>
    52ae:	39 d1       	rcall	.+626    	; 0x5522 <__fp_pscA>
    52b0:	30 f0       	brcs	.+12     	; 0x52be <__addsf3+0x18>
    52b2:	3e d1       	rcall	.+636    	; 0x5530 <__fp_pscB>
    52b4:	20 f0       	brcs	.+8      	; 0x52be <__addsf3+0x18>
    52b6:	31 f4       	brne	.+12     	; 0x52c4 <__addsf3+0x1e>
    52b8:	9f 3f       	cpi	r25, 0xFF	; 255
    52ba:	11 f4       	brne	.+4      	; 0x52c0 <__addsf3+0x1a>
    52bc:	1e f4       	brtc	.+6      	; 0x52c4 <__addsf3+0x1e>
    52be:	2e c1       	rjmp	.+604    	; 0x551c <__fp_nan>
    52c0:	0e f4       	brtc	.+2      	; 0x52c4 <__addsf3+0x1e>
    52c2:	e0 95       	com	r30
    52c4:	e7 fb       	bst	r30, 7
    52c6:	24 c1       	rjmp	.+584    	; 0x5510 <__fp_inf>

000052c8 <__addsf3x>:
    52c8:	e9 2f       	mov	r30, r25
    52ca:	4a d1       	rcall	.+660    	; 0x5560 <__fp_split3>
    52cc:	80 f3       	brcs	.-32     	; 0x52ae <__addsf3+0x8>
    52ce:	ba 17       	cp	r27, r26
    52d0:	62 07       	cpc	r22, r18
    52d2:	73 07       	cpc	r23, r19
    52d4:	84 07       	cpc	r24, r20
    52d6:	95 07       	cpc	r25, r21
    52d8:	18 f0       	brcs	.+6      	; 0x52e0 <__addsf3x+0x18>
    52da:	71 f4       	brne	.+28     	; 0x52f8 <__addsf3x+0x30>
    52dc:	9e f5       	brtc	.+102    	; 0x5344 <__addsf3x+0x7c>
    52de:	62 c1       	rjmp	.+708    	; 0x55a4 <__fp_zero>
    52e0:	0e f4       	brtc	.+2      	; 0x52e4 <__addsf3x+0x1c>
    52e2:	e0 95       	com	r30
    52e4:	0b 2e       	mov	r0, r27
    52e6:	ba 2f       	mov	r27, r26
    52e8:	a0 2d       	mov	r26, r0
    52ea:	0b 01       	movw	r0, r22
    52ec:	b9 01       	movw	r22, r18
    52ee:	90 01       	movw	r18, r0
    52f0:	0c 01       	movw	r0, r24
    52f2:	ca 01       	movw	r24, r20
    52f4:	a0 01       	movw	r20, r0
    52f6:	11 24       	eor	r1, r1
    52f8:	ff 27       	eor	r31, r31
    52fa:	59 1b       	sub	r21, r25
    52fc:	99 f0       	breq	.+38     	; 0x5324 <__addsf3x+0x5c>
    52fe:	59 3f       	cpi	r21, 0xF9	; 249
    5300:	50 f4       	brcc	.+20     	; 0x5316 <__addsf3x+0x4e>
    5302:	50 3e       	cpi	r21, 0xE0	; 224
    5304:	68 f1       	brcs	.+90     	; 0x5360 <__addsf3x+0x98>
    5306:	1a 16       	cp	r1, r26
    5308:	f0 40       	sbci	r31, 0x00	; 0
    530a:	a2 2f       	mov	r26, r18
    530c:	23 2f       	mov	r18, r19
    530e:	34 2f       	mov	r19, r20
    5310:	44 27       	eor	r20, r20
    5312:	58 5f       	subi	r21, 0xF8	; 248
    5314:	f3 cf       	rjmp	.-26     	; 0x52fc <__addsf3x+0x34>
    5316:	46 95       	lsr	r20
    5318:	37 95       	ror	r19
    531a:	27 95       	ror	r18
    531c:	a7 95       	ror	r26
    531e:	f0 40       	sbci	r31, 0x00	; 0
    5320:	53 95       	inc	r21
    5322:	c9 f7       	brne	.-14     	; 0x5316 <__addsf3x+0x4e>
    5324:	7e f4       	brtc	.+30     	; 0x5344 <__addsf3x+0x7c>
    5326:	1f 16       	cp	r1, r31
    5328:	ba 0b       	sbc	r27, r26
    532a:	62 0b       	sbc	r22, r18
    532c:	73 0b       	sbc	r23, r19
    532e:	84 0b       	sbc	r24, r20
    5330:	ba f0       	brmi	.+46     	; 0x5360 <__addsf3x+0x98>
    5332:	91 50       	subi	r25, 0x01	; 1
    5334:	a1 f0       	breq	.+40     	; 0x535e <__addsf3x+0x96>
    5336:	ff 0f       	add	r31, r31
    5338:	bb 1f       	adc	r27, r27
    533a:	66 1f       	adc	r22, r22
    533c:	77 1f       	adc	r23, r23
    533e:	88 1f       	adc	r24, r24
    5340:	c2 f7       	brpl	.-16     	; 0x5332 <__addsf3x+0x6a>
    5342:	0e c0       	rjmp	.+28     	; 0x5360 <__addsf3x+0x98>
    5344:	ba 0f       	add	r27, r26
    5346:	62 1f       	adc	r22, r18
    5348:	73 1f       	adc	r23, r19
    534a:	84 1f       	adc	r24, r20
    534c:	48 f4       	brcc	.+18     	; 0x5360 <__addsf3x+0x98>
    534e:	87 95       	ror	r24
    5350:	77 95       	ror	r23
    5352:	67 95       	ror	r22
    5354:	b7 95       	ror	r27
    5356:	f7 95       	ror	r31
    5358:	9e 3f       	cpi	r25, 0xFE	; 254
    535a:	08 f0       	brcs	.+2      	; 0x535e <__addsf3x+0x96>
    535c:	b3 cf       	rjmp	.-154    	; 0x52c4 <__addsf3+0x1e>
    535e:	93 95       	inc	r25
    5360:	88 0f       	add	r24, r24
    5362:	08 f0       	brcs	.+2      	; 0x5366 <__addsf3x+0x9e>
    5364:	99 27       	eor	r25, r25
    5366:	ee 0f       	add	r30, r30
    5368:	97 95       	ror	r25
    536a:	87 95       	ror	r24
    536c:	08 95       	ret

0000536e <__divsf3>:
    536e:	0c d0       	rcall	.+24     	; 0x5388 <__divsf3x>
    5370:	e6 c0       	rjmp	.+460    	; 0x553e <__fp_round>
    5372:	de d0       	rcall	.+444    	; 0x5530 <__fp_pscB>
    5374:	40 f0       	brcs	.+16     	; 0x5386 <__divsf3+0x18>
    5376:	d5 d0       	rcall	.+426    	; 0x5522 <__fp_pscA>
    5378:	30 f0       	brcs	.+12     	; 0x5386 <__divsf3+0x18>
    537a:	21 f4       	brne	.+8      	; 0x5384 <__divsf3+0x16>
    537c:	5f 3f       	cpi	r21, 0xFF	; 255
    537e:	19 f0       	breq	.+6      	; 0x5386 <__divsf3+0x18>
    5380:	c7 c0       	rjmp	.+398    	; 0x5510 <__fp_inf>
    5382:	51 11       	cpse	r21, r1
    5384:	10 c1       	rjmp	.+544    	; 0x55a6 <__fp_szero>
    5386:	ca c0       	rjmp	.+404    	; 0x551c <__fp_nan>

00005388 <__divsf3x>:
    5388:	eb d0       	rcall	.+470    	; 0x5560 <__fp_split3>
    538a:	98 f3       	brcs	.-26     	; 0x5372 <__divsf3+0x4>

0000538c <__divsf3_pse>:
    538c:	99 23       	and	r25, r25
    538e:	c9 f3       	breq	.-14     	; 0x5382 <__divsf3+0x14>
    5390:	55 23       	and	r21, r21
    5392:	b1 f3       	breq	.-20     	; 0x5380 <__divsf3+0x12>
    5394:	95 1b       	sub	r25, r21
    5396:	55 0b       	sbc	r21, r21
    5398:	bb 27       	eor	r27, r27
    539a:	aa 27       	eor	r26, r26
    539c:	62 17       	cp	r22, r18
    539e:	73 07       	cpc	r23, r19
    53a0:	84 07       	cpc	r24, r20
    53a2:	38 f0       	brcs	.+14     	; 0x53b2 <__divsf3_pse+0x26>
    53a4:	9f 5f       	subi	r25, 0xFF	; 255
    53a6:	5f 4f       	sbci	r21, 0xFF	; 255
    53a8:	22 0f       	add	r18, r18
    53aa:	33 1f       	adc	r19, r19
    53ac:	44 1f       	adc	r20, r20
    53ae:	aa 1f       	adc	r26, r26
    53b0:	a9 f3       	breq	.-22     	; 0x539c <__divsf3_pse+0x10>
    53b2:	33 d0       	rcall	.+102    	; 0x541a <__divsf3_pse+0x8e>
    53b4:	0e 2e       	mov	r0, r30
    53b6:	3a f0       	brmi	.+14     	; 0x53c6 <__divsf3_pse+0x3a>
    53b8:	e0 e8       	ldi	r30, 0x80	; 128
    53ba:	30 d0       	rcall	.+96     	; 0x541c <__divsf3_pse+0x90>
    53bc:	91 50       	subi	r25, 0x01	; 1
    53be:	50 40       	sbci	r21, 0x00	; 0
    53c0:	e6 95       	lsr	r30
    53c2:	00 1c       	adc	r0, r0
    53c4:	ca f7       	brpl	.-14     	; 0x53b8 <__divsf3_pse+0x2c>
    53c6:	29 d0       	rcall	.+82     	; 0x541a <__divsf3_pse+0x8e>
    53c8:	fe 2f       	mov	r31, r30
    53ca:	27 d0       	rcall	.+78     	; 0x541a <__divsf3_pse+0x8e>
    53cc:	66 0f       	add	r22, r22
    53ce:	77 1f       	adc	r23, r23
    53d0:	88 1f       	adc	r24, r24
    53d2:	bb 1f       	adc	r27, r27
    53d4:	26 17       	cp	r18, r22
    53d6:	37 07       	cpc	r19, r23
    53d8:	48 07       	cpc	r20, r24
    53da:	ab 07       	cpc	r26, r27
    53dc:	b0 e8       	ldi	r27, 0x80	; 128
    53de:	09 f0       	breq	.+2      	; 0x53e2 <__divsf3_pse+0x56>
    53e0:	bb 0b       	sbc	r27, r27
    53e2:	80 2d       	mov	r24, r0
    53e4:	bf 01       	movw	r22, r30
    53e6:	ff 27       	eor	r31, r31
    53e8:	93 58       	subi	r25, 0x83	; 131
    53ea:	5f 4f       	sbci	r21, 0xFF	; 255
    53ec:	2a f0       	brmi	.+10     	; 0x53f8 <__divsf3_pse+0x6c>
    53ee:	9e 3f       	cpi	r25, 0xFE	; 254
    53f0:	51 05       	cpc	r21, r1
    53f2:	68 f0       	brcs	.+26     	; 0x540e <__divsf3_pse+0x82>
    53f4:	8d c0       	rjmp	.+282    	; 0x5510 <__fp_inf>
    53f6:	d7 c0       	rjmp	.+430    	; 0x55a6 <__fp_szero>
    53f8:	5f 3f       	cpi	r21, 0xFF	; 255
    53fa:	ec f3       	brlt	.-6      	; 0x53f6 <__divsf3_pse+0x6a>
    53fc:	98 3e       	cpi	r25, 0xE8	; 232
    53fe:	dc f3       	brlt	.-10     	; 0x53f6 <__divsf3_pse+0x6a>
    5400:	86 95       	lsr	r24
    5402:	77 95       	ror	r23
    5404:	67 95       	ror	r22
    5406:	b7 95       	ror	r27
    5408:	f7 95       	ror	r31
    540a:	9f 5f       	subi	r25, 0xFF	; 255
    540c:	c9 f7       	brne	.-14     	; 0x5400 <__divsf3_pse+0x74>
    540e:	88 0f       	add	r24, r24
    5410:	91 1d       	adc	r25, r1
    5412:	96 95       	lsr	r25
    5414:	87 95       	ror	r24
    5416:	97 f9       	bld	r25, 7
    5418:	08 95       	ret
    541a:	e1 e0       	ldi	r30, 0x01	; 1
    541c:	66 0f       	add	r22, r22
    541e:	77 1f       	adc	r23, r23
    5420:	88 1f       	adc	r24, r24
    5422:	bb 1f       	adc	r27, r27
    5424:	62 17       	cp	r22, r18
    5426:	73 07       	cpc	r23, r19
    5428:	84 07       	cpc	r24, r20
    542a:	ba 07       	cpc	r27, r26
    542c:	20 f0       	brcs	.+8      	; 0x5436 <__divsf3_pse+0xaa>
    542e:	62 1b       	sub	r22, r18
    5430:	73 0b       	sbc	r23, r19
    5432:	84 0b       	sbc	r24, r20
    5434:	ba 0b       	sbc	r27, r26
    5436:	ee 1f       	adc	r30, r30
    5438:	88 f7       	brcc	.-30     	; 0x541c <__divsf3_pse+0x90>
    543a:	e0 95       	com	r30
    543c:	08 95       	ret

0000543e <__fixunssfsi>:
    543e:	98 d0       	rcall	.+304    	; 0x5570 <__fp_splitA>
    5440:	88 f0       	brcs	.+34     	; 0x5464 <__fixunssfsi+0x26>
    5442:	9f 57       	subi	r25, 0x7F	; 127
    5444:	90 f0       	brcs	.+36     	; 0x546a <__fixunssfsi+0x2c>
    5446:	b9 2f       	mov	r27, r25
    5448:	99 27       	eor	r25, r25
    544a:	b7 51       	subi	r27, 0x17	; 23
    544c:	a0 f0       	brcs	.+40     	; 0x5476 <__fixunssfsi+0x38>
    544e:	d1 f0       	breq	.+52     	; 0x5484 <__fixunssfsi+0x46>
    5450:	66 0f       	add	r22, r22
    5452:	77 1f       	adc	r23, r23
    5454:	88 1f       	adc	r24, r24
    5456:	99 1f       	adc	r25, r25
    5458:	1a f0       	brmi	.+6      	; 0x5460 <__fixunssfsi+0x22>
    545a:	ba 95       	dec	r27
    545c:	c9 f7       	brne	.-14     	; 0x5450 <__fixunssfsi+0x12>
    545e:	12 c0       	rjmp	.+36     	; 0x5484 <__fixunssfsi+0x46>
    5460:	b1 30       	cpi	r27, 0x01	; 1
    5462:	81 f0       	breq	.+32     	; 0x5484 <__fixunssfsi+0x46>
    5464:	9f d0       	rcall	.+318    	; 0x55a4 <__fp_zero>
    5466:	b1 e0       	ldi	r27, 0x01	; 1
    5468:	08 95       	ret
    546a:	9c c0       	rjmp	.+312    	; 0x55a4 <__fp_zero>
    546c:	67 2f       	mov	r22, r23
    546e:	78 2f       	mov	r23, r24
    5470:	88 27       	eor	r24, r24
    5472:	b8 5f       	subi	r27, 0xF8	; 248
    5474:	39 f0       	breq	.+14     	; 0x5484 <__fixunssfsi+0x46>
    5476:	b9 3f       	cpi	r27, 0xF9	; 249
    5478:	cc f3       	brlt	.-14     	; 0x546c <__fixunssfsi+0x2e>
    547a:	86 95       	lsr	r24
    547c:	77 95       	ror	r23
    547e:	67 95       	ror	r22
    5480:	b3 95       	inc	r27
    5482:	d9 f7       	brne	.-10     	; 0x547a <__fixunssfsi+0x3c>
    5484:	3e f4       	brtc	.+14     	; 0x5494 <__fixunssfsi+0x56>
    5486:	90 95       	com	r25
    5488:	80 95       	com	r24
    548a:	70 95       	com	r23
    548c:	61 95       	neg	r22
    548e:	7f 4f       	sbci	r23, 0xFF	; 255
    5490:	8f 4f       	sbci	r24, 0xFF	; 255
    5492:	9f 4f       	sbci	r25, 0xFF	; 255
    5494:	08 95       	ret

00005496 <__floatunsisf>:
    5496:	e8 94       	clt
    5498:	09 c0       	rjmp	.+18     	; 0x54ac <__floatsisf+0x12>

0000549a <__floatsisf>:
    549a:	97 fb       	bst	r25, 7
    549c:	3e f4       	brtc	.+14     	; 0x54ac <__floatsisf+0x12>
    549e:	90 95       	com	r25
    54a0:	80 95       	com	r24
    54a2:	70 95       	com	r23
    54a4:	61 95       	neg	r22
    54a6:	7f 4f       	sbci	r23, 0xFF	; 255
    54a8:	8f 4f       	sbci	r24, 0xFF	; 255
    54aa:	9f 4f       	sbci	r25, 0xFF	; 255
    54ac:	99 23       	and	r25, r25
    54ae:	a9 f0       	breq	.+42     	; 0x54da <__floatsisf+0x40>
    54b0:	f9 2f       	mov	r31, r25
    54b2:	96 e9       	ldi	r25, 0x96	; 150
    54b4:	bb 27       	eor	r27, r27
    54b6:	93 95       	inc	r25
    54b8:	f6 95       	lsr	r31
    54ba:	87 95       	ror	r24
    54bc:	77 95       	ror	r23
    54be:	67 95       	ror	r22
    54c0:	b7 95       	ror	r27
    54c2:	f1 11       	cpse	r31, r1
    54c4:	f8 cf       	rjmp	.-16     	; 0x54b6 <__floatsisf+0x1c>
    54c6:	fa f4       	brpl	.+62     	; 0x5506 <__floatsisf+0x6c>
    54c8:	bb 0f       	add	r27, r27
    54ca:	11 f4       	brne	.+4      	; 0x54d0 <__floatsisf+0x36>
    54cc:	60 ff       	sbrs	r22, 0
    54ce:	1b c0       	rjmp	.+54     	; 0x5506 <__floatsisf+0x6c>
    54d0:	6f 5f       	subi	r22, 0xFF	; 255
    54d2:	7f 4f       	sbci	r23, 0xFF	; 255
    54d4:	8f 4f       	sbci	r24, 0xFF	; 255
    54d6:	9f 4f       	sbci	r25, 0xFF	; 255
    54d8:	16 c0       	rjmp	.+44     	; 0x5506 <__floatsisf+0x6c>
    54da:	88 23       	and	r24, r24
    54dc:	11 f0       	breq	.+4      	; 0x54e2 <__floatsisf+0x48>
    54de:	96 e9       	ldi	r25, 0x96	; 150
    54e0:	11 c0       	rjmp	.+34     	; 0x5504 <__floatsisf+0x6a>
    54e2:	77 23       	and	r23, r23
    54e4:	21 f0       	breq	.+8      	; 0x54ee <__floatsisf+0x54>
    54e6:	9e e8       	ldi	r25, 0x8E	; 142
    54e8:	87 2f       	mov	r24, r23
    54ea:	76 2f       	mov	r23, r22
    54ec:	05 c0       	rjmp	.+10     	; 0x54f8 <__floatsisf+0x5e>
    54ee:	66 23       	and	r22, r22
    54f0:	71 f0       	breq	.+28     	; 0x550e <__floatsisf+0x74>
    54f2:	96 e8       	ldi	r25, 0x86	; 134
    54f4:	86 2f       	mov	r24, r22
    54f6:	70 e0       	ldi	r23, 0x00	; 0
    54f8:	60 e0       	ldi	r22, 0x00	; 0
    54fa:	2a f0       	brmi	.+10     	; 0x5506 <__floatsisf+0x6c>
    54fc:	9a 95       	dec	r25
    54fe:	66 0f       	add	r22, r22
    5500:	77 1f       	adc	r23, r23
    5502:	88 1f       	adc	r24, r24
    5504:	da f7       	brpl	.-10     	; 0x54fc <__floatsisf+0x62>
    5506:	88 0f       	add	r24, r24
    5508:	96 95       	lsr	r25
    550a:	87 95       	ror	r24
    550c:	97 f9       	bld	r25, 7
    550e:	08 95       	ret

00005510 <__fp_inf>:
    5510:	97 f9       	bld	r25, 7
    5512:	9f 67       	ori	r25, 0x7F	; 127
    5514:	80 e8       	ldi	r24, 0x80	; 128
    5516:	70 e0       	ldi	r23, 0x00	; 0
    5518:	60 e0       	ldi	r22, 0x00	; 0
    551a:	08 95       	ret

0000551c <__fp_nan>:
    551c:	9f ef       	ldi	r25, 0xFF	; 255
    551e:	80 ec       	ldi	r24, 0xC0	; 192
    5520:	08 95       	ret

00005522 <__fp_pscA>:
    5522:	00 24       	eor	r0, r0
    5524:	0a 94       	dec	r0
    5526:	16 16       	cp	r1, r22
    5528:	17 06       	cpc	r1, r23
    552a:	18 06       	cpc	r1, r24
    552c:	09 06       	cpc	r0, r25
    552e:	08 95       	ret

00005530 <__fp_pscB>:
    5530:	00 24       	eor	r0, r0
    5532:	0a 94       	dec	r0
    5534:	12 16       	cp	r1, r18
    5536:	13 06       	cpc	r1, r19
    5538:	14 06       	cpc	r1, r20
    553a:	05 06       	cpc	r0, r21
    553c:	08 95       	ret

0000553e <__fp_round>:
    553e:	09 2e       	mov	r0, r25
    5540:	03 94       	inc	r0
    5542:	00 0c       	add	r0, r0
    5544:	11 f4       	brne	.+4      	; 0x554a <__fp_round+0xc>
    5546:	88 23       	and	r24, r24
    5548:	52 f0       	brmi	.+20     	; 0x555e <__fp_round+0x20>
    554a:	bb 0f       	add	r27, r27
    554c:	40 f4       	brcc	.+16     	; 0x555e <__fp_round+0x20>
    554e:	bf 2b       	or	r27, r31
    5550:	11 f4       	brne	.+4      	; 0x5556 <__fp_round+0x18>
    5552:	60 ff       	sbrs	r22, 0
    5554:	04 c0       	rjmp	.+8      	; 0x555e <__fp_round+0x20>
    5556:	6f 5f       	subi	r22, 0xFF	; 255
    5558:	7f 4f       	sbci	r23, 0xFF	; 255
    555a:	8f 4f       	sbci	r24, 0xFF	; 255
    555c:	9f 4f       	sbci	r25, 0xFF	; 255
    555e:	08 95       	ret

00005560 <__fp_split3>:
    5560:	57 fd       	sbrc	r21, 7
    5562:	90 58       	subi	r25, 0x80	; 128
    5564:	44 0f       	add	r20, r20
    5566:	55 1f       	adc	r21, r21
    5568:	59 f0       	breq	.+22     	; 0x5580 <__fp_splitA+0x10>
    556a:	5f 3f       	cpi	r21, 0xFF	; 255
    556c:	71 f0       	breq	.+28     	; 0x558a <__fp_splitA+0x1a>
    556e:	47 95       	ror	r20

00005570 <__fp_splitA>:
    5570:	88 0f       	add	r24, r24
    5572:	97 fb       	bst	r25, 7
    5574:	99 1f       	adc	r25, r25
    5576:	61 f0       	breq	.+24     	; 0x5590 <__fp_splitA+0x20>
    5578:	9f 3f       	cpi	r25, 0xFF	; 255
    557a:	79 f0       	breq	.+30     	; 0x559a <__fp_splitA+0x2a>
    557c:	87 95       	ror	r24
    557e:	08 95       	ret
    5580:	12 16       	cp	r1, r18
    5582:	13 06       	cpc	r1, r19
    5584:	14 06       	cpc	r1, r20
    5586:	55 1f       	adc	r21, r21
    5588:	f2 cf       	rjmp	.-28     	; 0x556e <__fp_split3+0xe>
    558a:	46 95       	lsr	r20
    558c:	f1 df       	rcall	.-30     	; 0x5570 <__fp_splitA>
    558e:	08 c0       	rjmp	.+16     	; 0x55a0 <__fp_splitA+0x30>
    5590:	16 16       	cp	r1, r22
    5592:	17 06       	cpc	r1, r23
    5594:	18 06       	cpc	r1, r24
    5596:	99 1f       	adc	r25, r25
    5598:	f1 cf       	rjmp	.-30     	; 0x557c <__fp_splitA+0xc>
    559a:	86 95       	lsr	r24
    559c:	71 05       	cpc	r23, r1
    559e:	61 05       	cpc	r22, r1
    55a0:	08 94       	sec
    55a2:	08 95       	ret

000055a4 <__fp_zero>:
    55a4:	e8 94       	clt

000055a6 <__fp_szero>:
    55a6:	bb 27       	eor	r27, r27
    55a8:	66 27       	eor	r22, r22
    55aa:	77 27       	eor	r23, r23
    55ac:	cb 01       	movw	r24, r22
    55ae:	97 f9       	bld	r25, 7
    55b0:	08 95       	ret

000055b2 <__umulhisi3>:
    55b2:	a2 9f       	mul	r26, r18
    55b4:	b0 01       	movw	r22, r0
    55b6:	b3 9f       	mul	r27, r19
    55b8:	c0 01       	movw	r24, r0
    55ba:	a3 9f       	mul	r26, r19
    55bc:	70 0d       	add	r23, r0
    55be:	81 1d       	adc	r24, r1
    55c0:	11 24       	eor	r1, r1
    55c2:	91 1d       	adc	r25, r1
    55c4:	b2 9f       	mul	r27, r18
    55c6:	70 0d       	add	r23, r0
    55c8:	81 1d       	adc	r24, r1
    55ca:	11 24       	eor	r1, r1
    55cc:	91 1d       	adc	r25, r1
    55ce:	08 95       	ret

000055d0 <malloc>:
    55d0:	cf 93       	push	r28
    55d2:	df 93       	push	r29
    55d4:	82 30       	cpi	r24, 0x02	; 2
    55d6:	91 05       	cpc	r25, r1
    55d8:	10 f4       	brcc	.+4      	; 0x55de <malloc+0xe>
    55da:	82 e0       	ldi	r24, 0x02	; 2
    55dc:	90 e0       	ldi	r25, 0x00	; 0
    55de:	e0 91 56 05 	lds	r30, 0x0556
    55e2:	f0 91 57 05 	lds	r31, 0x0557
    55e6:	20 e0       	ldi	r18, 0x00	; 0
    55e8:	30 e0       	ldi	r19, 0x00	; 0
    55ea:	a0 e0       	ldi	r26, 0x00	; 0
    55ec:	b0 e0       	ldi	r27, 0x00	; 0
    55ee:	30 97       	sbiw	r30, 0x00	; 0
    55f0:	39 f1       	breq	.+78     	; 0x5640 <malloc+0x70>
    55f2:	40 81       	ld	r20, Z
    55f4:	51 81       	ldd	r21, Z+1	; 0x01
    55f6:	48 17       	cp	r20, r24
    55f8:	59 07       	cpc	r21, r25
    55fa:	b8 f0       	brcs	.+46     	; 0x562a <malloc+0x5a>
    55fc:	48 17       	cp	r20, r24
    55fe:	59 07       	cpc	r21, r25
    5600:	71 f4       	brne	.+28     	; 0x561e <malloc+0x4e>
    5602:	82 81       	ldd	r24, Z+2	; 0x02
    5604:	93 81       	ldd	r25, Z+3	; 0x03
    5606:	10 97       	sbiw	r26, 0x00	; 0
    5608:	29 f0       	breq	.+10     	; 0x5614 <malloc+0x44>
    560a:	13 96       	adiw	r26, 0x03	; 3
    560c:	9c 93       	st	X, r25
    560e:	8e 93       	st	-X, r24
    5610:	12 97       	sbiw	r26, 0x02	; 2
    5612:	2c c0       	rjmp	.+88     	; 0x566c <malloc+0x9c>
    5614:	90 93 57 05 	sts	0x0557, r25
    5618:	80 93 56 05 	sts	0x0556, r24
    561c:	27 c0       	rjmp	.+78     	; 0x566c <malloc+0x9c>
    561e:	21 15       	cp	r18, r1
    5620:	31 05       	cpc	r19, r1
    5622:	31 f0       	breq	.+12     	; 0x5630 <malloc+0x60>
    5624:	42 17       	cp	r20, r18
    5626:	53 07       	cpc	r21, r19
    5628:	18 f0       	brcs	.+6      	; 0x5630 <malloc+0x60>
    562a:	a9 01       	movw	r20, r18
    562c:	db 01       	movw	r26, r22
    562e:	01 c0       	rjmp	.+2      	; 0x5632 <malloc+0x62>
    5630:	ef 01       	movw	r28, r30
    5632:	9a 01       	movw	r18, r20
    5634:	bd 01       	movw	r22, r26
    5636:	df 01       	movw	r26, r30
    5638:	02 80       	ldd	r0, Z+2	; 0x02
    563a:	f3 81       	ldd	r31, Z+3	; 0x03
    563c:	e0 2d       	mov	r30, r0
    563e:	d7 cf       	rjmp	.-82     	; 0x55ee <malloc+0x1e>
    5640:	21 15       	cp	r18, r1
    5642:	31 05       	cpc	r19, r1
    5644:	f9 f0       	breq	.+62     	; 0x5684 <malloc+0xb4>
    5646:	28 1b       	sub	r18, r24
    5648:	39 0b       	sbc	r19, r25
    564a:	24 30       	cpi	r18, 0x04	; 4
    564c:	31 05       	cpc	r19, r1
    564e:	80 f4       	brcc	.+32     	; 0x5670 <malloc+0xa0>
    5650:	8a 81       	ldd	r24, Y+2	; 0x02
    5652:	9b 81       	ldd	r25, Y+3	; 0x03
    5654:	61 15       	cp	r22, r1
    5656:	71 05       	cpc	r23, r1
    5658:	21 f0       	breq	.+8      	; 0x5662 <malloc+0x92>
    565a:	fb 01       	movw	r30, r22
    565c:	93 83       	std	Z+3, r25	; 0x03
    565e:	82 83       	std	Z+2, r24	; 0x02
    5660:	04 c0       	rjmp	.+8      	; 0x566a <malloc+0x9a>
    5662:	90 93 57 05 	sts	0x0557, r25
    5666:	80 93 56 05 	sts	0x0556, r24
    566a:	fe 01       	movw	r30, r28
    566c:	32 96       	adiw	r30, 0x02	; 2
    566e:	44 c0       	rjmp	.+136    	; 0x56f8 <malloc+0x128>
    5670:	fe 01       	movw	r30, r28
    5672:	e2 0f       	add	r30, r18
    5674:	f3 1f       	adc	r31, r19
    5676:	81 93       	st	Z+, r24
    5678:	91 93       	st	Z+, r25
    567a:	22 50       	subi	r18, 0x02	; 2
    567c:	31 09       	sbc	r19, r1
    567e:	39 83       	std	Y+1, r19	; 0x01
    5680:	28 83       	st	Y, r18
    5682:	3a c0       	rjmp	.+116    	; 0x56f8 <malloc+0x128>
    5684:	20 91 54 05 	lds	r18, 0x0554
    5688:	30 91 55 05 	lds	r19, 0x0555
    568c:	23 2b       	or	r18, r19
    568e:	41 f4       	brne	.+16     	; 0x56a0 <malloc+0xd0>
    5690:	20 91 02 02 	lds	r18, 0x0202
    5694:	30 91 03 02 	lds	r19, 0x0203
    5698:	30 93 55 05 	sts	0x0555, r19
    569c:	20 93 54 05 	sts	0x0554, r18
    56a0:	20 91 00 02 	lds	r18, 0x0200
    56a4:	30 91 01 02 	lds	r19, 0x0201
    56a8:	21 15       	cp	r18, r1
    56aa:	31 05       	cpc	r19, r1
    56ac:	41 f4       	brne	.+16     	; 0x56be <malloc+0xee>
    56ae:	2d b7       	in	r18, 0x3d	; 61
    56b0:	3e b7       	in	r19, 0x3e	; 62
    56b2:	40 91 04 02 	lds	r20, 0x0204
    56b6:	50 91 05 02 	lds	r21, 0x0205
    56ba:	24 1b       	sub	r18, r20
    56bc:	35 0b       	sbc	r19, r21
    56be:	e0 91 54 05 	lds	r30, 0x0554
    56c2:	f0 91 55 05 	lds	r31, 0x0555
    56c6:	e2 17       	cp	r30, r18
    56c8:	f3 07       	cpc	r31, r19
    56ca:	a0 f4       	brcc	.+40     	; 0x56f4 <malloc+0x124>
    56cc:	2e 1b       	sub	r18, r30
    56ce:	3f 0b       	sbc	r19, r31
    56d0:	28 17       	cp	r18, r24
    56d2:	39 07       	cpc	r19, r25
    56d4:	78 f0       	brcs	.+30     	; 0x56f4 <malloc+0x124>
    56d6:	ac 01       	movw	r20, r24
    56d8:	4e 5f       	subi	r20, 0xFE	; 254
    56da:	5f 4f       	sbci	r21, 0xFF	; 255
    56dc:	24 17       	cp	r18, r20
    56de:	35 07       	cpc	r19, r21
    56e0:	48 f0       	brcs	.+18     	; 0x56f4 <malloc+0x124>
    56e2:	4e 0f       	add	r20, r30
    56e4:	5f 1f       	adc	r21, r31
    56e6:	50 93 55 05 	sts	0x0555, r21
    56ea:	40 93 54 05 	sts	0x0554, r20
    56ee:	81 93       	st	Z+, r24
    56f0:	91 93       	st	Z+, r25
    56f2:	02 c0       	rjmp	.+4      	; 0x56f8 <malloc+0x128>
    56f4:	e0 e0       	ldi	r30, 0x00	; 0
    56f6:	f0 e0       	ldi	r31, 0x00	; 0
    56f8:	cf 01       	movw	r24, r30
    56fa:	df 91       	pop	r29
    56fc:	cf 91       	pop	r28
    56fe:	08 95       	ret

00005700 <free>:
    5700:	cf 93       	push	r28
    5702:	df 93       	push	r29
    5704:	00 97       	sbiw	r24, 0x00	; 0
    5706:	09 f4       	brne	.+2      	; 0x570a <free+0xa>
    5708:	87 c0       	rjmp	.+270    	; 0x5818 <free+0x118>
    570a:	fc 01       	movw	r30, r24
    570c:	32 97       	sbiw	r30, 0x02	; 2
    570e:	13 82       	std	Z+3, r1	; 0x03
    5710:	12 82       	std	Z+2, r1	; 0x02
    5712:	c0 91 56 05 	lds	r28, 0x0556
    5716:	d0 91 57 05 	lds	r29, 0x0557
    571a:	20 97       	sbiw	r28, 0x00	; 0
    571c:	81 f4       	brne	.+32     	; 0x573e <free+0x3e>
    571e:	20 81       	ld	r18, Z
    5720:	31 81       	ldd	r19, Z+1	; 0x01
    5722:	28 0f       	add	r18, r24
    5724:	39 1f       	adc	r19, r25
    5726:	80 91 54 05 	lds	r24, 0x0554
    572a:	90 91 55 05 	lds	r25, 0x0555
    572e:	82 17       	cp	r24, r18
    5730:	93 07       	cpc	r25, r19
    5732:	79 f5       	brne	.+94     	; 0x5792 <free+0x92>
    5734:	f0 93 55 05 	sts	0x0555, r31
    5738:	e0 93 54 05 	sts	0x0554, r30
    573c:	6d c0       	rjmp	.+218    	; 0x5818 <free+0x118>
    573e:	de 01       	movw	r26, r28
    5740:	20 e0       	ldi	r18, 0x00	; 0
    5742:	30 e0       	ldi	r19, 0x00	; 0
    5744:	ae 17       	cp	r26, r30
    5746:	bf 07       	cpc	r27, r31
    5748:	50 f4       	brcc	.+20     	; 0x575e <free+0x5e>
    574a:	12 96       	adiw	r26, 0x02	; 2
    574c:	4d 91       	ld	r20, X+
    574e:	5c 91       	ld	r21, X
    5750:	13 97       	sbiw	r26, 0x03	; 3
    5752:	9d 01       	movw	r18, r26
    5754:	41 15       	cp	r20, r1
    5756:	51 05       	cpc	r21, r1
    5758:	09 f1       	breq	.+66     	; 0x579c <free+0x9c>
    575a:	da 01       	movw	r26, r20
    575c:	f3 cf       	rjmp	.-26     	; 0x5744 <free+0x44>
    575e:	b3 83       	std	Z+3, r27	; 0x03
    5760:	a2 83       	std	Z+2, r26	; 0x02
    5762:	40 81       	ld	r20, Z
    5764:	51 81       	ldd	r21, Z+1	; 0x01
    5766:	84 0f       	add	r24, r20
    5768:	95 1f       	adc	r25, r21
    576a:	8a 17       	cp	r24, r26
    576c:	9b 07       	cpc	r25, r27
    576e:	71 f4       	brne	.+28     	; 0x578c <free+0x8c>
    5770:	8d 91       	ld	r24, X+
    5772:	9c 91       	ld	r25, X
    5774:	11 97       	sbiw	r26, 0x01	; 1
    5776:	84 0f       	add	r24, r20
    5778:	95 1f       	adc	r25, r21
    577a:	02 96       	adiw	r24, 0x02	; 2
    577c:	91 83       	std	Z+1, r25	; 0x01
    577e:	80 83       	st	Z, r24
    5780:	12 96       	adiw	r26, 0x02	; 2
    5782:	8d 91       	ld	r24, X+
    5784:	9c 91       	ld	r25, X
    5786:	13 97       	sbiw	r26, 0x03	; 3
    5788:	93 83       	std	Z+3, r25	; 0x03
    578a:	82 83       	std	Z+2, r24	; 0x02
    578c:	21 15       	cp	r18, r1
    578e:	31 05       	cpc	r19, r1
    5790:	29 f4       	brne	.+10     	; 0x579c <free+0x9c>
    5792:	f0 93 57 05 	sts	0x0557, r31
    5796:	e0 93 56 05 	sts	0x0556, r30
    579a:	3e c0       	rjmp	.+124    	; 0x5818 <free+0x118>
    579c:	d9 01       	movw	r26, r18
    579e:	13 96       	adiw	r26, 0x03	; 3
    57a0:	fc 93       	st	X, r31
    57a2:	ee 93       	st	-X, r30
    57a4:	12 97       	sbiw	r26, 0x02	; 2
    57a6:	4d 91       	ld	r20, X+
    57a8:	5d 91       	ld	r21, X+
    57aa:	a4 0f       	add	r26, r20
    57ac:	b5 1f       	adc	r27, r21
    57ae:	ea 17       	cp	r30, r26
    57b0:	fb 07       	cpc	r31, r27
    57b2:	79 f4       	brne	.+30     	; 0x57d2 <free+0xd2>
    57b4:	80 81       	ld	r24, Z
    57b6:	91 81       	ldd	r25, Z+1	; 0x01
    57b8:	84 0f       	add	r24, r20
    57ba:	95 1f       	adc	r25, r21
    57bc:	02 96       	adiw	r24, 0x02	; 2
    57be:	d9 01       	movw	r26, r18
    57c0:	11 96       	adiw	r26, 0x01	; 1
    57c2:	9c 93       	st	X, r25
    57c4:	8e 93       	st	-X, r24
    57c6:	82 81       	ldd	r24, Z+2	; 0x02
    57c8:	93 81       	ldd	r25, Z+3	; 0x03
    57ca:	13 96       	adiw	r26, 0x03	; 3
    57cc:	9c 93       	st	X, r25
    57ce:	8e 93       	st	-X, r24
    57d0:	12 97       	sbiw	r26, 0x02	; 2
    57d2:	e0 e0       	ldi	r30, 0x00	; 0
    57d4:	f0 e0       	ldi	r31, 0x00	; 0
    57d6:	8a 81       	ldd	r24, Y+2	; 0x02
    57d8:	9b 81       	ldd	r25, Y+3	; 0x03
    57da:	00 97       	sbiw	r24, 0x00	; 0
    57dc:	19 f0       	breq	.+6      	; 0x57e4 <free+0xe4>
    57de:	fe 01       	movw	r30, r28
    57e0:	ec 01       	movw	r28, r24
    57e2:	f9 cf       	rjmp	.-14     	; 0x57d6 <free+0xd6>
    57e4:	ce 01       	movw	r24, r28
    57e6:	02 96       	adiw	r24, 0x02	; 2
    57e8:	28 81       	ld	r18, Y
    57ea:	39 81       	ldd	r19, Y+1	; 0x01
    57ec:	82 0f       	add	r24, r18
    57ee:	93 1f       	adc	r25, r19
    57f0:	20 91 54 05 	lds	r18, 0x0554
    57f4:	30 91 55 05 	lds	r19, 0x0555
    57f8:	28 17       	cp	r18, r24
    57fa:	39 07       	cpc	r19, r25
    57fc:	69 f4       	brne	.+26     	; 0x5818 <free+0x118>
    57fe:	30 97       	sbiw	r30, 0x00	; 0
    5800:	29 f4       	brne	.+10     	; 0x580c <free+0x10c>
    5802:	10 92 57 05 	sts	0x0557, r1
    5806:	10 92 56 05 	sts	0x0556, r1
    580a:	02 c0       	rjmp	.+4      	; 0x5810 <free+0x110>
    580c:	13 82       	std	Z+3, r1	; 0x03
    580e:	12 82       	std	Z+2, r1	; 0x02
    5810:	d0 93 55 05 	sts	0x0555, r29
    5814:	c0 93 54 05 	sts	0x0554, r28
    5818:	df 91       	pop	r29
    581a:	cf 91       	pop	r28
    581c:	08 95       	ret

0000581e <_exit>:
    581e:	f8 94       	cli

00005820 <__stop_program>:
    5820:	ff cf       	rjmp	.-2      	; 0x5820 <__stop_program>
