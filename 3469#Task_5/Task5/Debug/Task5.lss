
Task5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002cc  00800200  00002a48  00002adc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002a48  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007a  008004cc  008004cc  00002da8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002da8  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000280  00000000  00000000  00002dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00005db8  00000000  00000000  00003058  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000488  00000000  00000000  00008e10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00002de8  00000000  00000000  00009298  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000070c  00000000  00000000  0000c080  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006ed  00000000  00000000  0000c78c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000034fc  00000000  00000000  0000ce79  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000002d0  00000000  00000000  00010375  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	90 c0       	rjmp	.+288    	; 0x126 <__bad_interrupt>
       6:	00 00       	nop
       8:	8e c0       	rjmp	.+284    	; 0x126 <__bad_interrupt>
       a:	00 00       	nop
       c:	8c c0       	rjmp	.+280    	; 0x126 <__bad_interrupt>
       e:	00 00       	nop
      10:	8a c0       	rjmp	.+276    	; 0x126 <__bad_interrupt>
      12:	00 00       	nop
      14:	19 c5       	rjmp	.+2610   	; 0xa48 <__vector_5>
      16:	00 00       	nop
      18:	f2 c4       	rjmp	.+2532   	; 0x9fe <__vector_6>
      1a:	00 00       	nop
      1c:	84 c0       	rjmp	.+264    	; 0x126 <__bad_interrupt>
      1e:	00 00       	nop
      20:	82 c0       	rjmp	.+260    	; 0x126 <__bad_interrupt>
      22:	00 00       	nop
      24:	80 c0       	rjmp	.+256    	; 0x126 <__bad_interrupt>
      26:	00 00       	nop
      28:	7e c0       	rjmp	.+252    	; 0x126 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7c c0       	rjmp	.+248    	; 0x126 <__bad_interrupt>
      2e:	00 00       	nop
      30:	7a c0       	rjmp	.+244    	; 0x126 <__bad_interrupt>
      32:	00 00       	nop
      34:	78 c0       	rjmp	.+240    	; 0x126 <__bad_interrupt>
      36:	00 00       	nop
      38:	76 c0       	rjmp	.+236    	; 0x126 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	74 c0       	rjmp	.+232    	; 0x126 <__bad_interrupt>
      3e:	00 00       	nop
      40:	72 c0       	rjmp	.+228    	; 0x126 <__bad_interrupt>
      42:	00 00       	nop
      44:	70 c0       	rjmp	.+224    	; 0x126 <__bad_interrupt>
      46:	00 00       	nop
      48:	6e c0       	rjmp	.+220    	; 0x126 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6c c0       	rjmp	.+216    	; 0x126 <__bad_interrupt>
      4e:	00 00       	nop
      50:	6a c0       	rjmp	.+212    	; 0x126 <__bad_interrupt>
      52:	00 00       	nop
      54:	68 c0       	rjmp	.+208    	; 0x126 <__bad_interrupt>
      56:	00 00       	nop
      58:	66 c0       	rjmp	.+204    	; 0x126 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	64 c0       	rjmp	.+200    	; 0x126 <__bad_interrupt>
      5e:	00 00       	nop
      60:	62 c0       	rjmp	.+196    	; 0x126 <__bad_interrupt>
      62:	00 00       	nop
      64:	60 c0       	rjmp	.+192    	; 0x126 <__bad_interrupt>
      66:	00 00       	nop
      68:	5e c0       	rjmp	.+188    	; 0x126 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5c c0       	rjmp	.+184    	; 0x126 <__bad_interrupt>
      6e:	00 00       	nop
      70:	5a c0       	rjmp	.+180    	; 0x126 <__bad_interrupt>
      72:	00 00       	nop
      74:	58 c0       	rjmp	.+176    	; 0x126 <__bad_interrupt>
      76:	00 00       	nop
      78:	56 c0       	rjmp	.+172    	; 0x126 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	54 c0       	rjmp	.+168    	; 0x126 <__bad_interrupt>
      7e:	00 00       	nop
      80:	52 c0       	rjmp	.+164    	; 0x126 <__bad_interrupt>
      82:	00 00       	nop
      84:	50 c0       	rjmp	.+160    	; 0x126 <__bad_interrupt>
      86:	00 00       	nop
      88:	4e c0       	rjmp	.+156    	; 0x126 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4c c0       	rjmp	.+152    	; 0x126 <__bad_interrupt>
      8e:	00 00       	nop
      90:	4a c0       	rjmp	.+148    	; 0x126 <__bad_interrupt>
      92:	00 00       	nop
      94:	48 c0       	rjmp	.+144    	; 0x126 <__bad_interrupt>
      96:	00 00       	nop
      98:	46 c0       	rjmp	.+140    	; 0x126 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	44 c0       	rjmp	.+136    	; 0x126 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	42 c0       	rjmp	.+132    	; 0x126 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	40 c0       	rjmp	.+128    	; 0x126 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3e c0       	rjmp	.+124    	; 0x126 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3c c0       	rjmp	.+120    	; 0x126 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	3a c0       	rjmp	.+116    	; 0x126 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	38 c0       	rjmp	.+112    	; 0x126 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	36 c0       	rjmp	.+108    	; 0x126 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	34 c0       	rjmp	.+104    	; 0x126 <__bad_interrupt>
      be:	00 00       	nop
      c0:	32 c0       	rjmp	.+100    	; 0x126 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	30 c0       	rjmp	.+96     	; 0x126 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2e c0       	rjmp	.+92     	; 0x126 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2c c0       	rjmp	.+88     	; 0x126 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	2a c0       	rjmp	.+84     	; 0x126 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	28 c0       	rjmp	.+80     	; 0x126 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	26 c0       	rjmp	.+76     	; 0x126 <__bad_interrupt>
      da:	00 00       	nop
      dc:	24 c0       	rjmp	.+72     	; 0x126 <__bad_interrupt>
      de:	00 00       	nop
      e0:	22 c0       	rjmp	.+68     	; 0x126 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	14 e0       	ldi	r17, 0x04	; 4
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e8 e4       	ldi	r30, 0x48	; 72
      fc:	fa e2       	ldi	r31, 0x2A	; 42
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	ac 3c       	cpi	r26, 0xCC	; 204
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	25 e0       	ldi	r18, 0x05	; 5
     110:	ac ec       	ldi	r26, 0xCC	; 204
     112:	b4 e0       	ldi	r27, 0x04	; 4
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a6 34       	cpi	r26, 0x46	; 70
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 04 11 	call	0x2208	; 0x2208 <main>
     122:	0c 94 22 15 	jmp	0x2a44	; 0x2a44 <_exit>

00000126 <__bad_interrupt>:
     126:	6c cf       	rjmp	.-296    	; 0x0 <__vectors>

00000128 <lcd_port_config>:
	forward_wls(3,1);
	right_turn_wls();
	forward_wls(0,5);
	forward_wls(2,1);
	right_turn_wls();
	forward_wls(2,1);	
     128:	87 b1       	in	r24, 0x07	; 7
     12a:	87 6f       	ori	r24, 0xF7	; 247
     12c:	87 b9       	out	0x07, r24	; 7
     12e:	88 b1       	in	r24, 0x08	; 8
     130:	88 70       	andi	r24, 0x08	; 8
     132:	88 b9       	out	0x08, r24	; 8
     134:	08 95       	ret

00000136 <lcd_set_4bit>:
     136:	86 e6       	ldi	r24, 0x66	; 102
     138:	9e e0       	ldi	r25, 0x0E	; 14
     13a:	01 97       	sbiw	r24, 0x01	; 1
     13c:	f1 f7       	brne	.-4      	; 0x13a <lcd_set_4bit+0x4>
     13e:	00 00       	nop
     140:	40 98       	cbi	0x08, 0	; 8
     142:	41 98       	cbi	0x08, 1	; 8
     144:	80 e3       	ldi	r24, 0x30	; 48
     146:	88 b9       	out	0x08, r24	; 8
     148:	42 9a       	sbi	0x08, 2	; 8
     14a:	8f ef       	ldi	r24, 0xFF	; 255
     14c:	97 e4       	ldi	r25, 0x47	; 71
     14e:	01 97       	sbiw	r24, 0x01	; 1
     150:	f1 f7       	brne	.-4      	; 0x14e <lcd_set_4bit+0x18>
     152:	00 c0       	rjmp	.+0      	; 0x154 <lcd_set_4bit+0x1e>
     154:	00 00       	nop
     156:	42 98       	cbi	0x08, 2	; 8
     158:	86 e6       	ldi	r24, 0x66	; 102
     15a:	9e e0       	ldi	r25, 0x0E	; 14
     15c:	01 97       	sbiw	r24, 0x01	; 1
     15e:	f1 f7       	brne	.-4      	; 0x15c <lcd_set_4bit+0x26>
     160:	00 00       	nop
     162:	40 98       	cbi	0x08, 0	; 8
     164:	41 98       	cbi	0x08, 1	; 8
     166:	80 e3       	ldi	r24, 0x30	; 48
     168:	88 b9       	out	0x08, r24	; 8
     16a:	42 9a       	sbi	0x08, 2	; 8
     16c:	8f ef       	ldi	r24, 0xFF	; 255
     16e:	97 e4       	ldi	r25, 0x47	; 71
     170:	01 97       	sbiw	r24, 0x01	; 1
     172:	f1 f7       	brne	.-4      	; 0x170 <lcd_set_4bit+0x3a>
     174:	00 c0       	rjmp	.+0      	; 0x176 <lcd_set_4bit+0x40>
     176:	00 00       	nop
     178:	42 98       	cbi	0x08, 2	; 8
     17a:	86 e6       	ldi	r24, 0x66	; 102
     17c:	9e e0       	ldi	r25, 0x0E	; 14
     17e:	01 97       	sbiw	r24, 0x01	; 1
     180:	f1 f7       	brne	.-4      	; 0x17e <lcd_set_4bit+0x48>
     182:	00 00       	nop
     184:	40 98       	cbi	0x08, 0	; 8
     186:	41 98       	cbi	0x08, 1	; 8
     188:	80 e3       	ldi	r24, 0x30	; 48
     18a:	88 b9       	out	0x08, r24	; 8
     18c:	42 9a       	sbi	0x08, 2	; 8
     18e:	8f ef       	ldi	r24, 0xFF	; 255
     190:	97 e4       	ldi	r25, 0x47	; 71
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <lcd_set_4bit+0x5c>
     196:	00 c0       	rjmp	.+0      	; 0x198 <lcd_set_4bit+0x62>
     198:	00 00       	nop
     19a:	42 98       	cbi	0x08, 2	; 8
     19c:	86 e6       	ldi	r24, 0x66	; 102
     19e:	9e e0       	ldi	r25, 0x0E	; 14
     1a0:	01 97       	sbiw	r24, 0x01	; 1
     1a2:	f1 f7       	brne	.-4      	; 0x1a0 <lcd_set_4bit+0x6a>
     1a4:	00 00       	nop
     1a6:	40 98       	cbi	0x08, 0	; 8
     1a8:	41 98       	cbi	0x08, 1	; 8
     1aa:	80 e2       	ldi	r24, 0x20	; 32
     1ac:	88 b9       	out	0x08, r24	; 8
     1ae:	42 9a       	sbi	0x08, 2	; 8
     1b0:	8f ef       	ldi	r24, 0xFF	; 255
     1b2:	97 e4       	ldi	r25, 0x47	; 71
     1b4:	01 97       	sbiw	r24, 0x01	; 1
     1b6:	f1 f7       	brne	.-4      	; 0x1b4 <lcd_set_4bit+0x7e>
     1b8:	00 c0       	rjmp	.+0      	; 0x1ba <lcd_set_4bit+0x84>
     1ba:	00 00       	nop
     1bc:	42 98       	cbi	0x08, 2	; 8
     1be:	08 95       	ret

000001c0 <lcd_wr_command>:
     1c0:	98 b1       	in	r25, 0x08	; 8
     1c2:	9f 70       	andi	r25, 0x0F	; 15
     1c4:	98 b9       	out	0x08, r25	; 8
     1c6:	98 b1       	in	r25, 0x08	; 8
     1c8:	28 2f       	mov	r18, r24
     1ca:	20 7f       	andi	r18, 0xF0	; 240
     1cc:	92 2b       	or	r25, r18
     1ce:	98 b9       	out	0x08, r25	; 8
     1d0:	40 98       	cbi	0x08, 0	; 8
     1d2:	41 98       	cbi	0x08, 1	; 8
     1d4:	42 9a       	sbi	0x08, 2	; 8
     1d6:	ef ef       	ldi	r30, 0xFF	; 255
     1d8:	f7 e4       	ldi	r31, 0x47	; 71
     1da:	31 97       	sbiw	r30, 0x01	; 1
     1dc:	f1 f7       	brne	.-4      	; 0x1da <lcd_wr_command+0x1a>
     1de:	00 c0       	rjmp	.+0      	; 0x1e0 <lcd_wr_command+0x20>
     1e0:	00 00       	nop
     1e2:	42 98       	cbi	0x08, 2	; 8
     1e4:	98 b1       	in	r25, 0x08	; 8
     1e6:	9f 70       	andi	r25, 0x0F	; 15
     1e8:	98 b9       	out	0x08, r25	; 8
     1ea:	98 b1       	in	r25, 0x08	; 8
     1ec:	82 95       	swap	r24
     1ee:	80 7f       	andi	r24, 0xF0	; 240
     1f0:	89 2b       	or	r24, r25
     1f2:	88 b9       	out	0x08, r24	; 8
     1f4:	40 98       	cbi	0x08, 0	; 8
     1f6:	41 98       	cbi	0x08, 1	; 8
     1f8:	42 9a       	sbi	0x08, 2	; 8
     1fa:	8f ef       	ldi	r24, 0xFF	; 255
     1fc:	97 e4       	ldi	r25, 0x47	; 71
     1fe:	01 97       	sbiw	r24, 0x01	; 1
     200:	f1 f7       	brne	.-4      	; 0x1fe <lcd_wr_command+0x3e>
     202:	00 c0       	rjmp	.+0      	; 0x204 <lcd_wr_command+0x44>
     204:	00 00       	nop
     206:	42 98       	cbi	0x08, 2	; 8
     208:	08 95       	ret

0000020a <lcd_init>:
     20a:	95 df       	rcall	.-214    	; 0x136 <lcd_set_4bit>
     20c:	86 e6       	ldi	r24, 0x66	; 102
     20e:	9e e0       	ldi	r25, 0x0E	; 14
     210:	01 97       	sbiw	r24, 0x01	; 1
     212:	f1 f7       	brne	.-4      	; 0x210 <lcd_init+0x6>
     214:	00 00       	nop
     216:	88 e2       	ldi	r24, 0x28	; 40
     218:	d3 df       	rcall	.-90     	; 0x1c0 <lcd_wr_command>
     21a:	81 e0       	ldi	r24, 0x01	; 1
     21c:	d1 df       	rcall	.-94     	; 0x1c0 <lcd_wr_command>
     21e:	86 e0       	ldi	r24, 0x06	; 6
     220:	cf df       	rcall	.-98     	; 0x1c0 <lcd_wr_command>
     222:	8e e0       	ldi	r24, 0x0E	; 14
     224:	cd df       	rcall	.-102    	; 0x1c0 <lcd_wr_command>
     226:	80 e8       	ldi	r24, 0x80	; 128
     228:	cb cf       	rjmp	.-106    	; 0x1c0 <lcd_wr_command>
     22a:	08 95       	ret

0000022c <lcd_wr_char>:
     22c:	98 b1       	in	r25, 0x08	; 8
     22e:	9f 70       	andi	r25, 0x0F	; 15
     230:	98 b9       	out	0x08, r25	; 8
     232:	98 b1       	in	r25, 0x08	; 8
     234:	28 2f       	mov	r18, r24
     236:	20 7f       	andi	r18, 0xF0	; 240
     238:	92 2b       	or	r25, r18
     23a:	98 b9       	out	0x08, r25	; 8
     23c:	40 9a       	sbi	0x08, 0	; 8
     23e:	41 98       	cbi	0x08, 1	; 8
     240:	42 9a       	sbi	0x08, 2	; 8
     242:	ef ef       	ldi	r30, 0xFF	; 255
     244:	f7 e4       	ldi	r31, 0x47	; 71
     246:	31 97       	sbiw	r30, 0x01	; 1
     248:	f1 f7       	brne	.-4      	; 0x246 <lcd_wr_char+0x1a>
     24a:	00 c0       	rjmp	.+0      	; 0x24c <lcd_wr_char+0x20>
     24c:	00 00       	nop
     24e:	42 98       	cbi	0x08, 2	; 8
     250:	98 b1       	in	r25, 0x08	; 8
     252:	9f 70       	andi	r25, 0x0F	; 15
     254:	98 b9       	out	0x08, r25	; 8
     256:	98 b1       	in	r25, 0x08	; 8
     258:	82 95       	swap	r24
     25a:	80 7f       	andi	r24, 0xF0	; 240
     25c:	89 2b       	or	r24, r25
     25e:	88 b9       	out	0x08, r24	; 8
     260:	40 9a       	sbi	0x08, 0	; 8
     262:	41 98       	cbi	0x08, 1	; 8
     264:	42 9a       	sbi	0x08, 2	; 8
     266:	8f ef       	ldi	r24, 0xFF	; 255
     268:	97 e4       	ldi	r25, 0x47	; 71
     26a:	01 97       	sbiw	r24, 0x01	; 1
     26c:	f1 f7       	brne	.-4      	; 0x26a <lcd_wr_char+0x3e>
     26e:	00 c0       	rjmp	.+0      	; 0x270 <lcd_wr_char+0x44>
     270:	00 00       	nop
     272:	42 98       	cbi	0x08, 2	; 8
     274:	08 95       	ret

00000276 <lcd_home>:
     276:	80 e8       	ldi	r24, 0x80	; 128
     278:	a3 cf       	rjmp	.-186    	; 0x1c0 <lcd_wr_command>
     27a:	08 95       	ret

0000027c <lcd_string>:
     27c:	cf 93       	push	r28
     27e:	df 93       	push	r29
     280:	ec 01       	movw	r28, r24
     282:	88 81       	ld	r24, Y
     284:	88 23       	and	r24, r24
     286:	29 f0       	breq	.+10     	; 0x292 <lcd_string+0x16>
     288:	21 96       	adiw	r28, 0x01	; 1
     28a:	d0 df       	rcall	.-96     	; 0x22c <lcd_wr_char>
     28c:	89 91       	ld	r24, Y+
     28e:	81 11       	cpse	r24, r1
     290:	fc cf       	rjmp	.-8      	; 0x28a <lcd_string+0xe>
     292:	df 91       	pop	r29
     294:	cf 91       	pop	r28
     296:	08 95       	ret

00000298 <lcd_print>:
     298:	0f 93       	push	r16
     29a:	1f 93       	push	r17
     29c:	cf 93       	push	r28
     29e:	df 93       	push	r29
     2a0:	8a 01       	movw	r16, r20
     2a2:	e9 01       	movw	r28, r18
     2a4:	88 23       	and	r24, r24
     2a6:	11 f0       	breq	.+4      	; 0x2ac <lcd_print+0x14>
     2a8:	61 11       	cpse	r22, r1
     2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <lcd_print+0x18>
     2ac:	e4 df       	rcall	.-56     	; 0x276 <lcd_home>
     2ae:	1a c0       	rjmp	.+52     	; 0x2e4 <lcd_print+0x4c>
     2b0:	82 30       	cpi	r24, 0x02	; 2
     2b2:	69 f0       	breq	.+26     	; 0x2ce <lcd_print+0x36>
     2b4:	18 f4       	brcc	.+6      	; 0x2bc <lcd_print+0x24>
     2b6:	81 30       	cpi	r24, 0x01	; 1
     2b8:	31 f0       	breq	.+12     	; 0x2c6 <lcd_print+0x2e>
     2ba:	14 c0       	rjmp	.+40     	; 0x2e4 <lcd_print+0x4c>
     2bc:	83 30       	cpi	r24, 0x03	; 3
     2be:	59 f0       	breq	.+22     	; 0x2d6 <lcd_print+0x3e>
     2c0:	84 30       	cpi	r24, 0x04	; 4
     2c2:	69 f0       	breq	.+26     	; 0x2de <lcd_print+0x46>
     2c4:	0f c0       	rjmp	.+30     	; 0x2e4 <lcd_print+0x4c>
     2c6:	8f e7       	ldi	r24, 0x7F	; 127
     2c8:	86 0f       	add	r24, r22
     2ca:	7a df       	rcall	.-268    	; 0x1c0 <lcd_wr_command>
     2cc:	0b c0       	rjmp	.+22     	; 0x2e4 <lcd_print+0x4c>
     2ce:	8f eb       	ldi	r24, 0xBF	; 191
     2d0:	86 0f       	add	r24, r22
     2d2:	76 df       	rcall	.-276    	; 0x1c0 <lcd_wr_command>
     2d4:	07 c0       	rjmp	.+14     	; 0x2e4 <lcd_print+0x4c>
     2d6:	83 e9       	ldi	r24, 0x93	; 147
     2d8:	86 0f       	add	r24, r22
     2da:	72 df       	rcall	.-284    	; 0x1c0 <lcd_wr_command>
     2dc:	03 c0       	rjmp	.+6      	; 0x2e4 <lcd_print+0x4c>
     2de:	83 ed       	ldi	r24, 0xD3	; 211
     2e0:	86 0f       	add	r24, r22
     2e2:	6e df       	rcall	.-292    	; 0x1c0 <lcd_wr_command>
     2e4:	c5 30       	cpi	r28, 0x05	; 5
     2e6:	d1 05       	cpc	r29, r1
     2e8:	09 f0       	breq	.+2      	; 0x2ec <lcd_print+0x54>
     2ea:	d5 c0       	rjmp	.+426    	; 0x496 <lcd_print+0x1fe>
     2ec:	98 01       	movw	r18, r16
     2ee:	32 95       	swap	r19
     2f0:	22 95       	swap	r18
     2f2:	2f 70       	andi	r18, 0x0F	; 15
     2f4:	23 27       	eor	r18, r19
     2f6:	3f 70       	andi	r19, 0x0F	; 15
     2f8:	23 27       	eor	r18, r19
     2fa:	a7 e4       	ldi	r26, 0x47	; 71
     2fc:	b3 e0       	ldi	r27, 0x03	; 3
     2fe:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <__umulhisi3>
     302:	96 95       	lsr	r25
     304:	87 95       	ror	r24
     306:	96 95       	lsr	r25
     308:	87 95       	ror	r24
     30a:	96 95       	lsr	r25
     30c:	87 95       	ror	r24
     30e:	c0 96       	adiw	r24, 0x30	; 48
     310:	90 93 0f 05 	sts	0x050F, r25
     314:	80 93 0e 05 	sts	0x050E, r24
     318:	89 df       	rcall	.-238    	; 0x22c <lcd_wr_char>
     31a:	98 01       	movw	r18, r16
     31c:	36 95       	lsr	r19
     31e:	27 95       	ror	r18
     320:	36 95       	lsr	r19
     322:	27 95       	ror	r18
     324:	36 95       	lsr	r19
     326:	27 95       	ror	r18
     328:	a5 ec       	ldi	r26, 0xC5	; 197
     32a:	b0 e2       	ldi	r27, 0x20	; 32
     32c:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <__umulhisi3>
     330:	ac 01       	movw	r20, r24
     332:	52 95       	swap	r21
     334:	42 95       	swap	r20
     336:	4f 70       	andi	r20, 0x0F	; 15
     338:	45 27       	eor	r20, r21
     33a:	5f 70       	andi	r21, 0x0F	; 15
     33c:	45 27       	eor	r20, r21
     33e:	50 93 13 05 	sts	0x0513, r21
     342:	40 93 12 05 	sts	0x0512, r20
     346:	9a 01       	movw	r18, r20
     348:	ad ec       	ldi	r26, 0xCD	; 205
     34a:	bc ec       	ldi	r27, 0xCC	; 204
     34c:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <__umulhisi3>
     350:	96 95       	lsr	r25
     352:	87 95       	ror	r24
     354:	96 95       	lsr	r25
     356:	87 95       	ror	r24
     358:	96 95       	lsr	r25
     35a:	87 95       	ror	r24
     35c:	9c 01       	movw	r18, r24
     35e:	22 0f       	add	r18, r18
     360:	33 1f       	adc	r19, r19
     362:	88 0f       	add	r24, r24
     364:	99 1f       	adc	r25, r25
     366:	88 0f       	add	r24, r24
     368:	99 1f       	adc	r25, r25
     36a:	88 0f       	add	r24, r24
     36c:	99 1f       	adc	r25, r25
     36e:	82 0f       	add	r24, r18
     370:	93 1f       	adc	r25, r19
     372:	48 1b       	sub	r20, r24
     374:	59 0b       	sbc	r21, r25
     376:	ca 01       	movw	r24, r20
     378:	c0 96       	adiw	r24, 0x30	; 48
     37a:	90 93 3f 05 	sts	0x053F, r25
     37e:	80 93 3e 05 	sts	0x053E, r24
     382:	54 df       	rcall	.-344    	; 0x22c <lcd_wr_char>
     384:	04 c0       	rjmp	.+8      	; 0x38e <lcd_print+0xf6>
     386:	c3 30       	cpi	r28, 0x03	; 3
     388:	d1 05       	cpc	r29, r1
     38a:	09 f0       	breq	.+2      	; 0x38e <lcd_print+0xf6>
     38c:	89 c0       	rjmp	.+274    	; 0x4a0 <lcd_print+0x208>
     38e:	98 01       	movw	r18, r16
     390:	36 95       	lsr	r19
     392:	27 95       	ror	r18
     394:	36 95       	lsr	r19
     396:	27 95       	ror	r18
     398:	ab e7       	ldi	r26, 0x7B	; 123
     39a:	b4 e1       	ldi	r27, 0x14	; 20
     39c:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <__umulhisi3>
     3a0:	ac 01       	movw	r20, r24
     3a2:	56 95       	lsr	r21
     3a4:	47 95       	ror	r20
     3a6:	50 93 13 05 	sts	0x0513, r21
     3aa:	40 93 12 05 	sts	0x0512, r20
     3ae:	9a 01       	movw	r18, r20
     3b0:	ad ec       	ldi	r26, 0xCD	; 205
     3b2:	bc ec       	ldi	r27, 0xCC	; 204
     3b4:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <__umulhisi3>
     3b8:	96 95       	lsr	r25
     3ba:	87 95       	ror	r24
     3bc:	96 95       	lsr	r25
     3be:	87 95       	ror	r24
     3c0:	96 95       	lsr	r25
     3c2:	87 95       	ror	r24
     3c4:	9c 01       	movw	r18, r24
     3c6:	22 0f       	add	r18, r18
     3c8:	33 1f       	adc	r19, r19
     3ca:	88 0f       	add	r24, r24
     3cc:	99 1f       	adc	r25, r25
     3ce:	88 0f       	add	r24, r24
     3d0:	99 1f       	adc	r25, r25
     3d2:	88 0f       	add	r24, r24
     3d4:	99 1f       	adc	r25, r25
     3d6:	82 0f       	add	r24, r18
     3d8:	93 1f       	adc	r25, r19
     3da:	48 1b       	sub	r20, r24
     3dc:	59 0b       	sbc	r21, r25
     3de:	ca 01       	movw	r24, r20
     3e0:	c0 96       	adiw	r24, 0x30	; 48
     3e2:	90 93 1a 05 	sts	0x051A, r25
     3e6:	80 93 19 05 	sts	0x0519, r24
     3ea:	20 df       	rcall	.-448    	; 0x22c <lcd_wr_char>
     3ec:	98 01       	movw	r18, r16
     3ee:	ad ec       	ldi	r26, 0xCD	; 205
     3f0:	bc ec       	ldi	r27, 0xCC	; 204
     3f2:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <__umulhisi3>
     3f6:	ac 01       	movw	r20, r24
     3f8:	56 95       	lsr	r21
     3fa:	47 95       	ror	r20
     3fc:	56 95       	lsr	r21
     3fe:	47 95       	ror	r20
     400:	56 95       	lsr	r21
     402:	47 95       	ror	r20
     404:	50 93 13 05 	sts	0x0513, r21
     408:	40 93 12 05 	sts	0x0512, r20
     40c:	9a 01       	movw	r18, r20
     40e:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <__umulhisi3>
     412:	96 95       	lsr	r25
     414:	87 95       	ror	r24
     416:	96 95       	lsr	r25
     418:	87 95       	ror	r24
     41a:	96 95       	lsr	r25
     41c:	87 95       	ror	r24
     41e:	9c 01       	movw	r18, r24
     420:	22 0f       	add	r18, r18
     422:	33 1f       	adc	r19, r19
     424:	88 0f       	add	r24, r24
     426:	99 1f       	adc	r25, r25
     428:	88 0f       	add	r24, r24
     42a:	99 1f       	adc	r25, r25
     42c:	88 0f       	add	r24, r24
     42e:	99 1f       	adc	r25, r25
     430:	82 0f       	add	r24, r18
     432:	93 1f       	adc	r25, r19
     434:	48 1b       	sub	r20, r24
     436:	59 0b       	sbc	r21, r25
     438:	ca 01       	movw	r24, r20
     43a:	c0 96       	adiw	r24, 0x30	; 48
     43c:	90 93 18 05 	sts	0x0518, r25
     440:	80 93 17 05 	sts	0x0517, r24
     444:	f3 de       	rcall	.-538    	; 0x22c <lcd_wr_char>
     446:	03 c0       	rjmp	.+6      	; 0x44e <lcd_print+0x1b6>
     448:	c1 30       	cpi	r28, 0x01	; 1
     44a:	d1 05       	cpc	r29, r1
     44c:	f9 f4       	brne	.+62     	; 0x48c <lcd_print+0x1f4>
     44e:	98 01       	movw	r18, r16
     450:	ad ec       	ldi	r26, 0xCD	; 205
     452:	bc ec       	ldi	r27, 0xCC	; 204
     454:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <__umulhisi3>
     458:	96 95       	lsr	r25
     45a:	87 95       	ror	r24
     45c:	96 95       	lsr	r25
     45e:	87 95       	ror	r24
     460:	96 95       	lsr	r25
     462:	87 95       	ror	r24
     464:	9c 01       	movw	r18, r24
     466:	22 0f       	add	r18, r18
     468:	33 1f       	adc	r19, r19
     46a:	88 0f       	add	r24, r24
     46c:	99 1f       	adc	r25, r25
     46e:	88 0f       	add	r24, r24
     470:	99 1f       	adc	r25, r25
     472:	88 0f       	add	r24, r24
     474:	99 1f       	adc	r25, r25
     476:	82 0f       	add	r24, r18
     478:	93 1f       	adc	r25, r19
     47a:	08 1b       	sub	r16, r24
     47c:	19 0b       	sbc	r17, r25
     47e:	c8 01       	movw	r24, r16
     480:	c0 96       	adiw	r24, 0x30	; 48
     482:	90 93 3d 05 	sts	0x053D, r25
     486:	80 93 3c 05 	sts	0x053C, r24
     48a:	d0 de       	rcall	.-608    	; 0x22c <lcd_wr_char>
     48c:	26 97       	sbiw	r28, 0x06	; 6
     48e:	64 f0       	brlt	.+24     	; 0x4a8 <lcd_print+0x210>
     490:	85 e4       	ldi	r24, 0x45	; 69
     492:	cc de       	rcall	.-616    	; 0x22c <lcd_wr_char>
     494:	09 c0       	rjmp	.+18     	; 0x4a8 <lcd_print+0x210>
     496:	c4 30       	cpi	r28, 0x04	; 4
     498:	d1 05       	cpc	r29, r1
     49a:	09 f0       	breq	.+2      	; 0x49e <lcd_print+0x206>
     49c:	74 cf       	rjmp	.-280    	; 0x386 <lcd_print+0xee>
     49e:	3d cf       	rjmp	.-390    	; 0x31a <lcd_print+0x82>
     4a0:	c2 30       	cpi	r28, 0x02	; 2
     4a2:	d1 05       	cpc	r29, r1
     4a4:	89 f6       	brne	.-94     	; 0x448 <lcd_print+0x1b0>
     4a6:	a2 cf       	rjmp	.-188    	; 0x3ec <lcd_print+0x154>
     4a8:	df 91       	pop	r29
     4aa:	cf 91       	pop	r28
     4ac:	1f 91       	pop	r17
     4ae:	0f 91       	pop	r16
     4b0:	08 95       	ret

000004b2 <reverse>:
     4b2:	9b 01       	movw	r18, r22
     4b4:	21 50       	subi	r18, 0x01	; 1
     4b6:	31 09       	sbc	r19, r1
     4b8:	33 23       	and	r19, r19
     4ba:	c4 f0       	brlt	.+48     	; 0x4ec <reverse+0x3a>
     4bc:	db 01       	movw	r26, r22
     4be:	aa 0f       	add	r26, r26
     4c0:	bb 1f       	adc	r27, r27
     4c2:	a8 0f       	add	r26, r24
     4c4:	b9 1f       	adc	r27, r25
     4c6:	fc 01       	movw	r30, r24
     4c8:	40 e0       	ldi	r20, 0x00	; 0
     4ca:	50 e0       	ldi	r21, 0x00	; 0
     4cc:	80 81       	ld	r24, Z
     4ce:	91 81       	ldd	r25, Z+1	; 0x01
     4d0:	7e 91       	ld	r23, -X
     4d2:	6e 91       	ld	r22, -X
     4d4:	61 93       	st	Z+, r22
     4d6:	71 93       	st	Z+, r23
     4d8:	11 96       	adiw	r26, 0x01	; 1
     4da:	9c 93       	st	X, r25
     4dc:	8e 93       	st	-X, r24
     4de:	4f 5f       	subi	r20, 0xFF	; 255
     4e0:	5f 4f       	sbci	r21, 0xFF	; 255
     4e2:	21 50       	subi	r18, 0x01	; 1
     4e4:	31 09       	sbc	r19, r1
     4e6:	24 17       	cp	r18, r20
     4e8:	35 07       	cpc	r19, r21
     4ea:	84 f7       	brge	.-32     	; 0x4cc <reverse+0x1a>
     4ec:	08 95       	ret

000004ee <dijkstra>:
     4ee:	2f 92       	push	r2
     4f0:	3f 92       	push	r3
     4f2:	4f 92       	push	r4
     4f4:	5f 92       	push	r5
     4f6:	6f 92       	push	r6
     4f8:	7f 92       	push	r7
     4fa:	8f 92       	push	r8
     4fc:	9f 92       	push	r9
     4fe:	af 92       	push	r10
     500:	bf 92       	push	r11
     502:	cf 92       	push	r12
     504:	df 92       	push	r13
     506:	ef 92       	push	r14
     508:	ff 92       	push	r15
     50a:	0f 93       	push	r16
     50c:	1f 93       	push	r17
     50e:	cf 93       	push	r28
     510:	df 93       	push	r29
     512:	cd b7       	in	r28, 0x3d	; 61
     514:	de b7       	in	r29, 0x3e	; 62
     516:	c2 52       	subi	r28, 0x22	; 34
     518:	d2 40       	sbci	r29, 0x02	; 2
     51a:	0f b6       	in	r0, 0x3f	; 63
     51c:	f8 94       	cli
     51e:	de bf       	out	0x3e, r29	; 62
     520:	0f be       	out	0x3f, r0	; 63
     522:	cd bf       	out	0x3d, r28	; 61
     524:	4b 01       	movw	r8, r22
     526:	16 16       	cp	r1, r22
     528:	17 06       	cpc	r1, r23
     52a:	0c f0       	brlt	.+2      	; 0x52e <dijkstra+0x40>
     52c:	5a c0       	rjmp	.+180    	; 0x5e2 <dijkstra+0xf4>
     52e:	08 2f       	mov	r16, r24
     530:	19 2f       	mov	r17, r25
     532:	ce 01       	movw	r24, r28
     534:	01 96       	adiw	r24, 0x01	; 1
     536:	7c 01       	movw	r14, r24
     538:	8e e1       	ldi	r24, 0x1E	; 30
     53a:	86 9f       	mul	r24, r22
     53c:	50 01       	movw	r10, r0
     53e:	87 9f       	mul	r24, r23
     540:	b0 0c       	add	r11, r0
     542:	11 24       	eor	r1, r1
     544:	ae 0c       	add	r10, r14
     546:	bf 1c       	adc	r11, r15
     548:	6b 01       	movw	r12, r22
     54a:	cc 0c       	add	r12, r12
     54c:	dd 1c       	adc	r13, r13
     54e:	6f e0       	ldi	r22, 0x0F	; 15
     550:	77 e2       	ldi	r23, 0x27	; 39
     552:	17 c0       	rjmp	.+46     	; 0x582 <dijkstra+0x94>
     554:	81 91       	ld	r24, Z+
     556:	91 91       	ld	r25, Z+
     558:	00 97       	sbiw	r24, 0x00	; 0
     55a:	21 f4       	brne	.+8      	; 0x564 <dijkstra+0x76>
     55c:	11 96       	adiw	r26, 0x01	; 1
     55e:	7c 93       	st	X, r23
     560:	6e 93       	st	-X, r22
     562:	03 c0       	rjmp	.+6      	; 0x56a <dijkstra+0x7c>
     564:	11 96       	adiw	r26, 0x01	; 1
     566:	9c 93       	st	X, r25
     568:	8e 93       	st	-X, r24
     56a:	12 96       	adiw	r26, 0x02	; 2
     56c:	e2 17       	cp	r30, r18
     56e:	f3 07       	cpc	r31, r19
     570:	89 f7       	brne	.-30     	; 0x554 <dijkstra+0x66>
     572:	02 5e       	subi	r16, 0xE2	; 226
     574:	1f 4f       	sbci	r17, 0xFF	; 255
     576:	9e e1       	ldi	r25, 0x1E	; 30
     578:	e9 0e       	add	r14, r25
     57a:	f1 1c       	adc	r15, r1
     57c:	ea 14       	cp	r14, r10
     57e:	fb 04       	cpc	r15, r11
     580:	31 f0       	breq	.+12     	; 0x58e <dijkstra+0xa0>
     582:	98 01       	movw	r18, r16
     584:	2c 0d       	add	r18, r12
     586:	3d 1d       	adc	r19, r13
     588:	d7 01       	movw	r26, r14
     58a:	f8 01       	movw	r30, r16
     58c:	e3 cf       	rjmp	.-58     	; 0x554 <dijkstra+0x66>
     58e:	8e e1       	ldi	r24, 0x1E	; 30
     590:	84 9f       	mul	r24, r20
     592:	90 01       	movw	r18, r0
     594:	85 9f       	mul	r24, r21
     596:	30 0d       	add	r19, r0
     598:	11 24       	eor	r1, r1
     59a:	a1 e0       	ldi	r26, 0x01	; 1
     59c:	b0 e0       	ldi	r27, 0x00	; 0
     59e:	ac 0f       	add	r26, r28
     5a0:	bd 1f       	adc	r27, r29
     5a2:	2a 0f       	add	r18, r26
     5a4:	3b 1f       	adc	r19, r27
     5a6:	fe 01       	movw	r30, r28
     5a8:	ed 53       	subi	r30, 0x3D	; 61
     5aa:	fe 4f       	sbci	r31, 0xFE	; 254
     5ac:	ce 01       	movw	r24, r28
     5ae:	8f 51       	subi	r24, 0x1F	; 31
     5b0:	9e 4f       	sbci	r25, 0xFE	; 254
     5b2:	de 01       	movw	r26, r28
     5b4:	a1 50       	subi	r26, 0x01	; 1
     5b6:	be 4f       	sbci	r27, 0xFE	; 254
     5b8:	ce 0e       	add	r12, r30
     5ba:	df 1e       	adc	r13, r31
     5bc:	89 01       	movw	r16, r18
     5be:	9d 01       	movw	r18, r26
     5c0:	d8 01       	movw	r26, r16
     5c2:	6d 91       	ld	r22, X+
     5c4:	7d 91       	ld	r23, X+
     5c6:	8d 01       	movw	r16, r26
     5c8:	61 93       	st	Z+, r22
     5ca:	71 93       	st	Z+, r23
     5cc:	dc 01       	movw	r26, r24
     5ce:	4d 93       	st	X+, r20
     5d0:	5d 93       	st	X+, r21
     5d2:	cd 01       	movw	r24, r26
     5d4:	d9 01       	movw	r26, r18
     5d6:	1d 92       	st	X+, r1
     5d8:	1d 92       	st	X+, r1
     5da:	9d 01       	movw	r18, r26
     5dc:	ec 15       	cp	r30, r12
     5de:	fd 05       	cpc	r31, r13
     5e0:	79 f7       	brne	.-34     	; 0x5c0 <dijkstra+0xd2>
     5e2:	44 0f       	add	r20, r20
     5e4:	55 1f       	adc	r21, r21
     5e6:	e3 ec       	ldi	r30, 0xC3	; 195
     5e8:	f1 e0       	ldi	r31, 0x01	; 1
     5ea:	ec 0f       	add	r30, r28
     5ec:	fd 1f       	adc	r31, r29
     5ee:	e4 0f       	add	r30, r20
     5f0:	f5 1f       	adc	r31, r21
     5f2:	11 82       	std	Z+1, r1	; 0x01
     5f4:	10 82       	st	Z, r1
     5f6:	ef ef       	ldi	r30, 0xFF	; 255
     5f8:	f1 e0       	ldi	r31, 0x01	; 1
     5fa:	ec 0f       	add	r30, r28
     5fc:	fd 1f       	adc	r31, r29
     5fe:	e4 0f       	add	r30, r20
     600:	f5 1f       	adc	r31, r21
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	90 e0       	ldi	r25, 0x00	; 0
     606:	91 83       	std	Z+1, r25	; 0x01
     608:	80 83       	st	Z, r24
     60a:	c4 01       	movw	r24, r8
     60c:	01 97       	sbiw	r24, 0x01	; 1
     60e:	c1 5e       	subi	r28, 0xE1	; 225
     610:	dd 4f       	sbci	r29, 0xFD	; 253
     612:	99 83       	std	Y+1, r25	; 0x01
     614:	88 83       	st	Y, r24
     616:	cf 51       	subi	r28, 0x1F	; 31
     618:	d2 40       	sbci	r29, 0x02	; 2
     61a:	02 97       	sbiw	r24, 0x02	; 2
     61c:	0c f4       	brge	.+2      	; 0x620 <dijkstra+0x132>
     61e:	9d c0       	rjmp	.+314    	; 0x75a <dijkstra+0x26c>
     620:	b4 01       	movw	r22, r8
     622:	66 0f       	add	r22, r22
     624:	77 1f       	adc	r23, r23
     626:	aa 24       	eor	r10, r10
     628:	a3 94       	inc	r10
     62a:	b1 2c       	mov	r11, r1
     62c:	de 01       	movw	r26, r28
     62e:	a1 50       	subi	r26, 0x01	; 1
     630:	be 4f       	sbci	r27, 0xFE	; 254
     632:	c3 5e       	subi	r28, 0xE3	; 227
     634:	dd 4f       	sbci	r29, 0xFD	; 253
     636:	b9 83       	std	Y+1, r27	; 0x01
     638:	a8 83       	st	Y, r26
     63a:	cd 51       	subi	r28, 0x1D	; 29
     63c:	d2 40       	sbci	r29, 0x02	; 2
     63e:	c3 5e       	subi	r28, 0xE3	; 227
     640:	dd 4f       	sbci	r29, 0xFD	; 253
     642:	58 80       	ld	r5, Y
     644:	cd 51       	subi	r28, 0x1D	; 29
     646:	d2 40       	sbci	r29, 0x02	; 2
     648:	c2 5e       	subi	r28, 0xE2	; 226
     64a:	dd 4f       	sbci	r29, 0xFD	; 253
     64c:	48 80       	ld	r4, Y
     64e:	ce 51       	subi	r28, 0x1E	; 30
     650:	d2 40       	sbci	r29, 0x02	; 2
     652:	31 2c       	mov	r3, r1
     654:	21 2c       	mov	r2, r1
     656:	73 c0       	rjmp	.+230    	; 0x73e <dijkstra+0x250>
     658:	2d 91       	ld	r18, X+
     65a:	3d 91       	ld	r19, X+
     65c:	24 17       	cp	r18, r20
     65e:	35 07       	cpc	r19, r21
     660:	34 f4       	brge	.+12     	; 0x66e <dijkstra+0x180>
     662:	60 81       	ld	r22, Z
     664:	71 81       	ldd	r23, Z+1	; 0x01
     666:	67 2b       	or	r22, r23
     668:	11 f4       	brne	.+4      	; 0x66e <dijkstra+0x180>
     66a:	3c 01       	movw	r6, r24
     66c:	a9 01       	movw	r20, r18
     66e:	01 96       	adiw	r24, 0x01	; 1
     670:	32 96       	adiw	r30, 0x02	; 2
     672:	88 15       	cp	r24, r8
     674:	99 05       	cpc	r25, r9
     676:	81 f7       	brne	.-32     	; 0x658 <dijkstra+0x16a>
     678:	b8 01       	movw	r22, r16
     67a:	e6 2c       	mov	r14, r6
     67c:	f7 2c       	mov	r15, r7
     67e:	f3 01       	movw	r30, r6
     680:	ee 0f       	add	r30, r30
     682:	ff 1f       	adc	r31, r31
     684:	8f ef       	ldi	r24, 0xFF	; 255
     686:	91 e0       	ldi	r25, 0x01	; 1
     688:	8c 0f       	add	r24, r28
     68a:	9d 1f       	adc	r25, r29
     68c:	e8 0f       	add	r30, r24
     68e:	f9 1f       	adc	r31, r25
     690:	a1 e0       	ldi	r26, 0x01	; 1
     692:	b0 e0       	ldi	r27, 0x00	; 0
     694:	b1 83       	std	Z+1, r27	; 0x01
     696:	a0 83       	st	Z, r26
     698:	be e1       	ldi	r27, 0x1E	; 30
     69a:	b6 9d       	mul	r27, r6
     69c:	60 01       	movw	r12, r0
     69e:	b7 9d       	mul	r27, r7
     6a0:	d0 0c       	add	r13, r0
     6a2:	11 24       	eor	r1, r1
     6a4:	81 e0       	ldi	r24, 0x01	; 1
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	8c 0f       	add	r24, r28
     6aa:	9d 1f       	adc	r25, r29
     6ac:	c8 0e       	add	r12, r24
     6ae:	d9 1e       	adc	r13, r25
     6b0:	fe 01       	movw	r30, r28
     6b2:	ed 53       	subi	r30, 0x3D	; 61
     6b4:	fe 4f       	sbci	r31, 0xFE	; 254
     6b6:	a5 2d       	mov	r26, r5
     6b8:	b4 2d       	mov	r27, r4
     6ba:	83 2d       	mov	r24, r3
     6bc:	92 2d       	mov	r25, r2
     6be:	cf 5d       	subi	r28, 0xDF	; 223
     6c0:	dd 4f       	sbci	r29, 0xFD	; 253
     6c2:	b9 83       	std	Y+1, r27	; 0x01
     6c4:	a8 83       	st	Y, r26
     6c6:	c1 52       	subi	r28, 0x21	; 33
     6c8:	d2 40       	sbci	r29, 0x02	; 2
     6ca:	cf 5d       	subi	r28, 0xDF	; 223
     6cc:	dd 4f       	sbci	r29, 0xFD	; 253
     6ce:	a8 81       	ld	r26, Y
     6d0:	b9 81       	ldd	r27, Y+1	; 0x01
     6d2:	c1 52       	subi	r28, 0x21	; 33
     6d4:	d2 40       	sbci	r29, 0x02	; 2
     6d6:	2d 91       	ld	r18, X+
     6d8:	3d 91       	ld	r19, X+
     6da:	cf 5d       	subi	r28, 0xDF	; 223
     6dc:	dd 4f       	sbci	r29, 0xFD	; 253
     6de:	b9 83       	std	Y+1, r27	; 0x01
     6e0:	a8 83       	st	Y, r26
     6e2:	c1 52       	subi	r28, 0x21	; 33
     6e4:	d2 40       	sbci	r29, 0x02	; 2
     6e6:	23 2b       	or	r18, r19
     6e8:	c9 f4       	brne	.+50     	; 0x71c <dijkstra+0x22e>
     6ea:	96 01       	movw	r18, r12
     6ec:	28 0f       	add	r18, r24
     6ee:	39 1f       	adc	r19, r25
     6f0:	d9 01       	movw	r26, r18
     6f2:	2d 91       	ld	r18, X+
     6f4:	3c 91       	ld	r19, X
     6f6:	24 0f       	add	r18, r20
     6f8:	35 1f       	adc	r19, r21
     6fa:	00 81       	ld	r16, Z
     6fc:	11 81       	ldd	r17, Z+1	; 0x01
     6fe:	20 17       	cp	r18, r16
     700:	31 07       	cpc	r19, r17
     702:	64 f4       	brge	.+24     	; 0x71c <dijkstra+0x22e>
     704:	31 83       	std	Z+1, r19	; 0x01
     706:	20 83       	st	Z, r18
     708:	21 ee       	ldi	r18, 0xE1	; 225
     70a:	31 e0       	ldi	r19, 0x01	; 1
     70c:	2c 0f       	add	r18, r28
     70e:	3d 1f       	adc	r19, r29
     710:	28 0f       	add	r18, r24
     712:	39 1f       	adc	r19, r25
     714:	d9 01       	movw	r26, r18
     716:	ec 92       	st	X, r14
     718:	11 96       	adiw	r26, 0x01	; 1
     71a:	fc 92       	st	X, r15
     71c:	02 96       	adiw	r24, 0x02	; 2
     71e:	32 96       	adiw	r30, 0x02	; 2
     720:	86 17       	cp	r24, r22
     722:	97 07       	cpc	r25, r23
     724:	91 f6       	brne	.-92     	; 0x6ca <dijkstra+0x1dc>
     726:	bf ef       	ldi	r27, 0xFF	; 255
     728:	ab 1a       	sub	r10, r27
     72a:	bb 0a       	sbc	r11, r27
     72c:	c1 5e       	subi	r28, 0xE1	; 225
     72e:	dd 4f       	sbci	r29, 0xFD	; 253
     730:	88 81       	ld	r24, Y
     732:	99 81       	ldd	r25, Y+1	; 0x01
     734:	cf 51       	subi	r28, 0x1F	; 31
     736:	d2 40       	sbci	r29, 0x02	; 2
     738:	a8 16       	cp	r10, r24
     73a:	b9 06       	cpc	r11, r25
     73c:	74 f4       	brge	.+28     	; 0x75a <dijkstra+0x26c>
     73e:	18 14       	cp	r1, r8
     740:	19 04       	cpc	r1, r9
     742:	74 f5       	brge	.+92     	; 0x7a0 <dijkstra+0x2b2>
     744:	e5 2d       	mov	r30, r5
     746:	f4 2d       	mov	r31, r4
     748:	de 01       	movw	r26, r28
     74a:	ad 53       	subi	r26, 0x3D	; 61
     74c:	be 4f       	sbci	r27, 0xFE	; 254
     74e:	83 2d       	mov	r24, r3
     750:	92 2d       	mov	r25, r2
     752:	4f e0       	ldi	r20, 0x0F	; 15
     754:	57 e2       	ldi	r21, 0x27	; 39
     756:	8b 01       	movw	r16, r22
     758:	7f cf       	rjmp	.-258    	; 0x658 <dijkstra+0x16a>
     75a:	18 14       	cp	r1, r8
     75c:	19 04       	cpc	r1, r9
     75e:	74 f5       	brge	.+92     	; 0x7bc <dijkstra+0x2ce>
     760:	fe 01       	movw	r30, r28
     762:	ed 53       	subi	r30, 0x3D	; 61
     764:	fe 4f       	sbci	r31, 0xFE	; 254
     766:	ae e1       	ldi	r26, 0x1E	; 30
     768:	b5 e0       	ldi	r27, 0x05	; 5
     76a:	88 0c       	add	r8, r8
     76c:	99 1c       	adc	r9, r9
     76e:	94 01       	movw	r18, r8
     770:	2e 0f       	add	r18, r30
     772:	3f 1f       	adc	r19, r31
     774:	81 91       	ld	r24, Z+
     776:	91 91       	ld	r25, Z+
     778:	8d 93       	st	X+, r24
     77a:	9d 93       	st	X+, r25
     77c:	e2 17       	cp	r30, r18
     77e:	f3 07       	cpc	r31, r19
     780:	c9 f7       	brne	.-14     	; 0x774 <dijkstra+0x286>
     782:	fe 01       	movw	r30, r28
     784:	ef 51       	subi	r30, 0x1F	; 31
     786:	fe 4f       	sbci	r31, 0xFE	; 254
     788:	ae ee       	ldi	r26, 0xEE	; 238
     78a:	b4 e0       	ldi	r27, 0x04	; 4
     78c:	8e 0e       	add	r8, r30
     78e:	9f 1e       	adc	r9, r31
     790:	81 91       	ld	r24, Z+
     792:	91 91       	ld	r25, Z+
     794:	8d 93       	st	X+, r24
     796:	9d 93       	st	X+, r25
     798:	e8 15       	cp	r30, r8
     79a:	f9 05       	cpc	r31, r9
     79c:	c9 f7       	brne	.-14     	; 0x790 <dijkstra+0x2a2>
     79e:	0e c0       	rjmp	.+28     	; 0x7bc <dijkstra+0x2ce>
     7a0:	f3 01       	movw	r30, r6
     7a2:	ee 0f       	add	r30, r30
     7a4:	ff 1f       	adc	r31, r31
     7a6:	af ef       	ldi	r26, 0xFF	; 255
     7a8:	b1 e0       	ldi	r27, 0x01	; 1
     7aa:	ac 0f       	add	r26, r28
     7ac:	bd 1f       	adc	r27, r29
     7ae:	ea 0f       	add	r30, r26
     7b0:	fb 1f       	adc	r31, r27
     7b2:	81 e0       	ldi	r24, 0x01	; 1
     7b4:	90 e0       	ldi	r25, 0x00	; 0
     7b6:	91 83       	std	Z+1, r25	; 0x01
     7b8:	80 83       	st	Z, r24
     7ba:	b5 cf       	rjmp	.-150    	; 0x726 <dijkstra+0x238>
     7bc:	ce 5d       	subi	r28, 0xDE	; 222
     7be:	dd 4f       	sbci	r29, 0xFD	; 253
     7c0:	0f b6       	in	r0, 0x3f	; 63
     7c2:	f8 94       	cli
     7c4:	de bf       	out	0x3e, r29	; 62
     7c6:	0f be       	out	0x3f, r0	; 63
     7c8:	cd bf       	out	0x3d, r28	; 61
     7ca:	df 91       	pop	r29
     7cc:	cf 91       	pop	r28
     7ce:	1f 91       	pop	r17
     7d0:	0f 91       	pop	r16
     7d2:	ff 90       	pop	r15
     7d4:	ef 90       	pop	r14
     7d6:	df 90       	pop	r13
     7d8:	cf 90       	pop	r12
     7da:	bf 90       	pop	r11
     7dc:	af 90       	pop	r10
     7de:	9f 90       	pop	r9
     7e0:	8f 90       	pop	r8
     7e2:	7f 90       	pop	r7
     7e4:	6f 90       	pop	r6
     7e6:	5f 90       	pop	r5
     7e8:	4f 90       	pop	r4
     7ea:	3f 90       	pop	r3
     7ec:	2f 90       	pop	r2
     7ee:	08 95       	ret

000007f0 <dist_comp>:
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	cf 93       	push	r28
     7f6:	df 93       	push	r29
     7f8:	ec 01       	movw	r28, r24
     7fa:	8b 01       	movw	r16, r22
     7fc:	f9 01       	movw	r30, r18
     7fe:	88 0f       	add	r24, r24
     800:	99 1f       	adc	r25, r25
     802:	82 5e       	subi	r24, 0xE2	; 226
     804:	9a 4f       	sbci	r25, 0xFA	; 250
     806:	db 01       	movw	r26, r22
     808:	aa 0f       	add	r26, r26
     80a:	bb 1f       	adc	r27, r27
     80c:	bd 01       	movw	r22, r26
     80e:	62 5e       	subi	r22, 0xE2	; 226
     810:	7a 4f       	sbci	r23, 0xFA	; 250
     812:	dc 01       	movw	r26, r24
     814:	2d 91       	ld	r18, X+
     816:	3c 91       	ld	r19, X
     818:	db 01       	movw	r26, r22
     81a:	8d 91       	ld	r24, X+
     81c:	9c 91       	ld	r25, X
     81e:	82 17       	cp	r24, r18
     820:	93 07       	cpc	r25, r19
     822:	d4 f1       	brlt	.+116    	; 0x898 <dist_comp+0xa8>
     824:	80 91 ec 04 	lds	r24, 0x04EC
     828:	90 91 ed 04 	lds	r25, 0x04ED
     82c:	8c 17       	cp	r24, r28
     82e:	9d 07       	cpc	r25, r29
     830:	51 f1       	breq	.+84     	; 0x886 <dist_comp+0x96>
     832:	a0 81       	ld	r26, Z
     834:	b1 81       	ldd	r27, Z+1	; 0x01
     836:	aa 0f       	add	r26, r26
     838:	bb 1f       	adc	r27, r27
     83a:	a4 0f       	add	r26, r20
     83c:	b5 1f       	adc	r27, r21
     83e:	cd 93       	st	X+, r28
     840:	dc 93       	st	X, r29
     842:	80 81       	ld	r24, Z
     844:	91 81       	ldd	r25, Z+1	; 0x01
     846:	01 96       	adiw	r24, 0x01	; 1
     848:	91 83       	std	Z+1, r25	; 0x01
     84a:	80 83       	st	Z, r24
     84c:	9e 01       	movw	r18, r28
     84e:	d9 01       	movw	r26, r18
     850:	aa 0f       	add	r26, r26
     852:	bb 1f       	adc	r27, r27
     854:	a2 51       	subi	r26, 0x12	; 18
     856:	bb 4f       	sbci	r27, 0xFB	; 251
     858:	2d 91       	ld	r18, X+
     85a:	3c 91       	ld	r19, X
     85c:	a0 81       	ld	r26, Z
     85e:	b1 81       	ldd	r27, Z+1	; 0x01
     860:	aa 0f       	add	r26, r26
     862:	bb 1f       	adc	r27, r27
     864:	a4 0f       	add	r26, r20
     866:	b5 1f       	adc	r27, r21
     868:	2d 93       	st	X+, r18
     86a:	3c 93       	st	X, r19
     86c:	60 81       	ld	r22, Z
     86e:	71 81       	ldd	r23, Z+1	; 0x01
     870:	6f 5f       	subi	r22, 0xFF	; 255
     872:	7f 4f       	sbci	r23, 0xFF	; 255
     874:	71 83       	std	Z+1, r23	; 0x01
     876:	60 83       	st	Z, r22
     878:	60 91 ec 04 	lds	r22, 0x04EC
     87c:	70 91 ed 04 	lds	r23, 0x04ED
     880:	26 17       	cp	r18, r22
     882:	37 07       	cpc	r19, r23
     884:	21 f7       	brne	.-56     	; 0x84e <dist_comp+0x5e>
     886:	60 81       	ld	r22, Z
     888:	71 81       	ldd	r23, Z+1	; 0x01
     88a:	ca 01       	movw	r24, r20
     88c:	12 de       	rcall	.-988    	; 0x4b2 <reverse>
     88e:	d0 93 ed 04 	sts	0x04ED, r29
     892:	c0 93 ec 04 	sts	0x04EC, r28
     896:	38 c0       	rjmp	.+112    	; 0x908 <dist_comp+0x118>
     898:	80 91 ec 04 	lds	r24, 0x04EC
     89c:	90 91 ed 04 	lds	r25, 0x04ED
     8a0:	80 17       	cp	r24, r16
     8a2:	91 07       	cpc	r25, r17
     8a4:	49 f1       	breq	.+82     	; 0x8f8 <dist_comp+0x108>
     8a6:	a0 81       	ld	r26, Z
     8a8:	b1 81       	ldd	r27, Z+1	; 0x01
     8aa:	aa 0f       	add	r26, r26
     8ac:	bb 1f       	adc	r27, r27
     8ae:	a4 0f       	add	r26, r20
     8b0:	b5 1f       	adc	r27, r21
     8b2:	0d 93       	st	X+, r16
     8b4:	1c 93       	st	X, r17
     8b6:	80 81       	ld	r24, Z
     8b8:	91 81       	ldd	r25, Z+1	; 0x01
     8ba:	01 96       	adiw	r24, 0x01	; 1
     8bc:	91 83       	std	Z+1, r25	; 0x01
     8be:	80 83       	st	Z, r24
     8c0:	98 01       	movw	r18, r16
     8c2:	d9 01       	movw	r26, r18
     8c4:	aa 0f       	add	r26, r26
     8c6:	bb 1f       	adc	r27, r27
     8c8:	a2 51       	subi	r26, 0x12	; 18
     8ca:	bb 4f       	sbci	r27, 0xFB	; 251
     8cc:	2d 91       	ld	r18, X+
     8ce:	3c 91       	ld	r19, X
     8d0:	a0 81       	ld	r26, Z
     8d2:	b1 81       	ldd	r27, Z+1	; 0x01
     8d4:	aa 0f       	add	r26, r26
     8d6:	bb 1f       	adc	r27, r27
     8d8:	a4 0f       	add	r26, r20
     8da:	b5 1f       	adc	r27, r21
     8dc:	2d 93       	st	X+, r18
     8de:	3c 93       	st	X, r19
     8e0:	80 81       	ld	r24, Z
     8e2:	91 81       	ldd	r25, Z+1	; 0x01
     8e4:	01 96       	adiw	r24, 0x01	; 1
     8e6:	91 83       	std	Z+1, r25	; 0x01
     8e8:	80 83       	st	Z, r24
     8ea:	80 91 ec 04 	lds	r24, 0x04EC
     8ee:	90 91 ed 04 	lds	r25, 0x04ED
     8f2:	28 17       	cp	r18, r24
     8f4:	39 07       	cpc	r19, r25
     8f6:	29 f7       	brne	.-54     	; 0x8c2 <dist_comp+0xd2>
     8f8:	60 81       	ld	r22, Z
     8fa:	71 81       	ldd	r23, Z+1	; 0x01
     8fc:	ca 01       	movw	r24, r20
     8fe:	d9 dd       	rcall	.-1102   	; 0x4b2 <reverse>
     900:	10 93 ed 04 	sts	0x04ED, r17
     904:	00 93 ec 04 	sts	0x04EC, r16
     908:	df 91       	pop	r29
     90a:	cf 91       	pop	r28
     90c:	1f 91       	pop	r17
     90e:	0f 91       	pop	r16
     910:	08 95       	ret

00000912 <timer1_init>:
     912:	e1 e8       	ldi	r30, 0x81	; 129
     914:	f0 e0       	ldi	r31, 0x00	; 0
     916:	10 82       	st	Z, r1
     918:	8c ef       	ldi	r24, 0xFC	; 252
     91a:	80 93 85 00 	sts	0x0085, r24
     91e:	81 e0       	ldi	r24, 0x01	; 1
     920:	80 93 84 00 	sts	0x0084, r24
     924:	93 e0       	ldi	r25, 0x03	; 3
     926:	90 93 89 00 	sts	0x0089, r25
     92a:	8f ef       	ldi	r24, 0xFF	; 255
     92c:	80 93 88 00 	sts	0x0088, r24
     930:	90 93 8b 00 	sts	0x008B, r25
     934:	80 93 8a 00 	sts	0x008A, r24
     938:	90 93 8d 00 	sts	0x008D, r25
     93c:	80 93 8c 00 	sts	0x008C, r24
     940:	90 93 87 00 	sts	0x0087, r25
     944:	80 93 86 00 	sts	0x0086, r24
     948:	8b ea       	ldi	r24, 0xAB	; 171
     94a:	80 93 80 00 	sts	0x0080, r24
     94e:	10 92 82 00 	sts	0x0082, r1
     952:	8c e0       	ldi	r24, 0x0C	; 12
     954:	80 83       	st	Z, r24
     956:	08 95       	ret

00000958 <timer5_init>:
     958:	e1 e2       	ldi	r30, 0x21	; 33
     95a:	f1 e0       	ldi	r31, 0x01	; 1
     95c:	10 82       	st	Z, r1
     95e:	8f ef       	ldi	r24, 0xFF	; 255
     960:	80 93 25 01 	sts	0x0125, r24
     964:	91 e0       	ldi	r25, 0x01	; 1
     966:	90 93 24 01 	sts	0x0124, r25
     96a:	10 92 29 01 	sts	0x0129, r1
     96e:	80 93 28 01 	sts	0x0128, r24
     972:	10 92 2b 01 	sts	0x012B, r1
     976:	80 93 2a 01 	sts	0x012A, r24
     97a:	10 92 2d 01 	sts	0x012D, r1
     97e:	80 93 2c 01 	sts	0x012C, r24
     982:	89 ea       	ldi	r24, 0xA9	; 169
     984:	80 93 20 01 	sts	0x0120, r24
     988:	8b e0       	ldi	r24, 0x0B	; 11
     98a:	80 83       	st	Z, r24
     98c:	08 95       	ret

0000098e <buzzer_pin_config>:
     98e:	9b 9a       	sbi	0x13, 3	; 19
     990:	a3 98       	cbi	0x14, 3	; 20
     992:	08 95       	ret

00000994 <motion_pin_config>:
     994:	81 b1       	in	r24, 0x01	; 1
     996:	8f 60       	ori	r24, 0x0F	; 15
     998:	81 b9       	out	0x01, r24	; 1
     99a:	82 b1       	in	r24, 0x02	; 2
     99c:	80 7f       	andi	r24, 0xF0	; 240
     99e:	82 b9       	out	0x02, r24	; 2
     9a0:	ea e0       	ldi	r30, 0x0A	; 10
     9a2:	f1 e0       	ldi	r31, 0x01	; 1
     9a4:	80 81       	ld	r24, Z
     9a6:	88 61       	ori	r24, 0x18	; 24
     9a8:	80 83       	st	Z, r24
     9aa:	eb e0       	ldi	r30, 0x0B	; 11
     9ac:	f1 e0       	ldi	r31, 0x01	; 1
     9ae:	80 81       	ld	r24, Z
     9b0:	88 61       	ori	r24, 0x18	; 24
     9b2:	80 83       	st	Z, r24
     9b4:	08 95       	ret

000009b6 <servo1_pin_config>:
     9b6:	25 9a       	sbi	0x04, 5	; 4
     9b8:	2d 9a       	sbi	0x05, 5	; 5
     9ba:	08 95       	ret

000009bc <servo2_pin_config>:
     9bc:	26 9a       	sbi	0x04, 6	; 4
     9be:	2e 9a       	sbi	0x05, 6	; 5
     9c0:	08 95       	ret

000009c2 <servo3_pin_config>:
     9c2:	27 9a       	sbi	0x04, 7	; 4
     9c4:	2f 9a       	sbi	0x05, 7	; 5
     9c6:	08 95       	ret

000009c8 <demux_pin_config>:
     9c8:	e1 e0       	ldi	r30, 0x01	; 1
     9ca:	f1 e0       	ldi	r31, 0x01	; 1
     9cc:	80 81       	ld	r24, Z
     9ce:	8f ef       	ldi	r24, 0xFF	; 255
     9d0:	80 83       	st	Z, r24
     9d2:	e2 e0       	ldi	r30, 0x02	; 2
     9d4:	f1 e0       	ldi	r31, 0x01	; 1
     9d6:	80 81       	ld	r24, Z
     9d8:	8e 7f       	andi	r24, 0xFE	; 254
     9da:	80 83       	st	Z, r24
     9dc:	08 95       	ret

000009de <adc_pin_config>:
     9de:	10 ba       	out	0x10, r1	; 16
     9e0:	11 ba       	out	0x11, r1	; 17
     9e2:	10 92 07 01 	sts	0x0107, r1
     9e6:	10 92 08 01 	sts	0x0108, r1
     9ea:	08 95       	ret

000009ec <port_init>:
     9ec:	d0 df       	rcall	.-96     	; 0x98e <buzzer_pin_config>
     9ee:	d2 df       	rcall	.-92     	; 0x994 <motion_pin_config>
     9f0:	e2 df       	rcall	.-60     	; 0x9b6 <servo1_pin_config>
     9f2:	e4 df       	rcall	.-56     	; 0x9bc <servo2_pin_config>
     9f4:	e6 df       	rcall	.-52     	; 0x9c2 <servo3_pin_config>
     9f6:	e8 df       	rcall	.-48     	; 0x9c8 <demux_pin_config>
     9f8:	97 db       	rcall	.-2258   	; 0x128 <lcd_port_config>
     9fa:	f1 cf       	rjmp	.-30     	; 0x9de <adc_pin_config>
     9fc:	08 95       	ret

000009fe <__vector_6>:
     9fe:	1f 92       	push	r1
     a00:	0f 92       	push	r0
     a02:	0f b6       	in	r0, 0x3f	; 63
     a04:	0f 92       	push	r0
     a06:	11 24       	eor	r1, r1
     a08:	8f 93       	push	r24
     a0a:	9f 93       	push	r25
     a0c:	af 93       	push	r26
     a0e:	bf 93       	push	r27
     a10:	80 91 cc 04 	lds	r24, 0x04CC
     a14:	90 91 cd 04 	lds	r25, 0x04CD
     a18:	a0 91 ce 04 	lds	r26, 0x04CE
     a1c:	b0 91 cf 04 	lds	r27, 0x04CF
     a20:	01 96       	adiw	r24, 0x01	; 1
     a22:	a1 1d       	adc	r26, r1
     a24:	b1 1d       	adc	r27, r1
     a26:	80 93 cc 04 	sts	0x04CC, r24
     a2a:	90 93 cd 04 	sts	0x04CD, r25
     a2e:	a0 93 ce 04 	sts	0x04CE, r26
     a32:	b0 93 cf 04 	sts	0x04CF, r27
     a36:	bf 91       	pop	r27
     a38:	af 91       	pop	r26
     a3a:	9f 91       	pop	r25
     a3c:	8f 91       	pop	r24
     a3e:	0f 90       	pop	r0
     a40:	0f be       	out	0x3f, r0	; 63
     a42:	0f 90       	pop	r0
     a44:	1f 90       	pop	r1
     a46:	18 95       	reti

00000a48 <__vector_5>:
     a48:	1f 92       	push	r1
     a4a:	0f 92       	push	r0
     a4c:	0f b6       	in	r0, 0x3f	; 63
     a4e:	0f 92       	push	r0
     a50:	11 24       	eor	r1, r1
     a52:	8f 93       	push	r24
     a54:	9f 93       	push	r25
     a56:	af 93       	push	r26
     a58:	bf 93       	push	r27
     a5a:	80 91 d0 04 	lds	r24, 0x04D0
     a5e:	90 91 d1 04 	lds	r25, 0x04D1
     a62:	a0 91 d2 04 	lds	r26, 0x04D2
     a66:	b0 91 d3 04 	lds	r27, 0x04D3
     a6a:	01 96       	adiw	r24, 0x01	; 1
     a6c:	a1 1d       	adc	r26, r1
     a6e:	b1 1d       	adc	r27, r1
     a70:	80 93 d0 04 	sts	0x04D0, r24
     a74:	90 93 d1 04 	sts	0x04D1, r25
     a78:	a0 93 d2 04 	sts	0x04D2, r26
     a7c:	b0 93 d3 04 	sts	0x04D3, r27
     a80:	bf 91       	pop	r27
     a82:	af 91       	pop	r26
     a84:	9f 91       	pop	r25
     a86:	8f 91       	pop	r24
     a88:	0f 90       	pop	r0
     a8a:	0f be       	out	0x3f, r0	; 63
     a8c:	0f 90       	pop	r0
     a8e:	1f 90       	pop	r1
     a90:	18 95       	reti

00000a92 <motion_set>:
     a92:	92 b1       	in	r25, 0x02	; 2
     a94:	90 7f       	andi	r25, 0xF0	; 240
     a96:	8f 70       	andi	r24, 0x0F	; 15
     a98:	98 2b       	or	r25, r24
     a9a:	92 b9       	out	0x02, r25	; 2
     a9c:	08 95       	ret

00000a9e <back>:
     a9e:	86 e0       	ldi	r24, 0x06	; 6
     aa0:	f8 cf       	rjmp	.-16     	; 0xa92 <motion_set>
     aa2:	08 95       	ret

00000aa4 <forward>:
     aa4:	89 e0       	ldi	r24, 0x09	; 9
     aa6:	f5 cf       	rjmp	.-22     	; 0xa92 <motion_set>
     aa8:	08 95       	ret

00000aaa <right>:
     aaa:	85 e0       	ldi	r24, 0x05	; 5
     aac:	f2 cf       	rjmp	.-28     	; 0xa92 <motion_set>
     aae:	08 95       	ret

00000ab0 <left>:
     ab0:	8a e0       	ldi	r24, 0x0A	; 10
     ab2:	ef cf       	rjmp	.-34     	; 0xa92 <motion_set>
     ab4:	08 95       	ret

00000ab6 <soft_right>:
     ab6:	84 e0       	ldi	r24, 0x04	; 4
     ab8:	ec cf       	rjmp	.-40     	; 0xa92 <motion_set>
     aba:	08 95       	ret

00000abc <soft_left>:
     abc:	82 e0       	ldi	r24, 0x02	; 2
     abe:	e9 cf       	rjmp	.-46     	; 0xa92 <motion_set>
     ac0:	08 95       	ret

00000ac2 <stop>:
     ac2:	80 e0       	ldi	r24, 0x00	; 0
     ac4:	e6 cf       	rjmp	.-52     	; 0xa92 <motion_set>
     ac6:	08 95       	ret

00000ac8 <servo_3>:
     ac8:	68 2f       	mov	r22, r24
     aca:	e2 e0       	ldi	r30, 0x02	; 2
     acc:	f1 e0       	ldi	r31, 0x01	; 1
     ace:	80 81       	ld	r24, Z
     ad0:	81 60       	ori	r24, 0x01	; 1
     ad2:	80 83       	st	Z, r24
     ad4:	26 e6       	ldi	r18, 0x66	; 102
     ad6:	86 ee       	ldi	r24, 0xE6	; 230
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	21 50       	subi	r18, 0x01	; 1
     adc:	80 40       	sbci	r24, 0x00	; 0
     ade:	90 40       	sbci	r25, 0x00	; 0
     ae0:	e1 f7       	brne	.-8      	; 0xada <servo_3+0x12>
     ae2:	10 92 8d 00 	sts	0x008D, r1
     ae6:	70 e0       	ldi	r23, 0x00	; 0
     ae8:	80 e0       	ldi	r24, 0x00	; 0
     aea:	90 e0       	ldi	r25, 0x00	; 0
     aec:	0e 94 5e 13 	call	0x26bc	; 0x26bc <__floatunsisf>
     af0:	2b e7       	ldi	r18, 0x7B	; 123
     af2:	34 e1       	ldi	r19, 0x14	; 20
     af4:	4e ee       	ldi	r20, 0xEE	; 238
     af6:	5f e3       	ldi	r21, 0x3F	; 63
     af8:	0e 94 ca 12 	call	0x2594	; 0x2594 <__divsf3>
     afc:	20 e0       	ldi	r18, 0x00	; 0
     afe:	30 e0       	ldi	r19, 0x00	; 0
     b00:	4c e0       	ldi	r20, 0x0C	; 12
     b02:	52 e4       	ldi	r21, 0x42	; 66
     b04:	0e 94 66 12 	call	0x24cc	; 0x24cc <__addsf3>
     b08:	0e 94 32 13 	call	0x2664	; 0x2664 <__fixunssfsi>
     b0c:	60 93 8c 00 	sts	0x008C, r22
     b10:	08 95       	ret

00000b12 <servo_4>:
     b12:	68 2f       	mov	r22, r24
     b14:	e2 e0       	ldi	r30, 0x02	; 2
     b16:	f1 e0       	ldi	r31, 0x01	; 1
     b18:	80 81       	ld	r24, Z
     b1a:	8e 7f       	andi	r24, 0xFE	; 254
     b1c:	80 83       	st	Z, r24
     b1e:	26 e6       	ldi	r18, 0x66	; 102
     b20:	86 ee       	ldi	r24, 0xE6	; 230
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	21 50       	subi	r18, 0x01	; 1
     b26:	80 40       	sbci	r24, 0x00	; 0
     b28:	90 40       	sbci	r25, 0x00	; 0
     b2a:	e1 f7       	brne	.-8      	; 0xb24 <servo_4+0x12>
     b2c:	10 92 8d 00 	sts	0x008D, r1
     b30:	70 e0       	ldi	r23, 0x00	; 0
     b32:	80 e0       	ldi	r24, 0x00	; 0
     b34:	90 e0       	ldi	r25, 0x00	; 0
     b36:	0e 94 5e 13 	call	0x26bc	; 0x26bc <__floatunsisf>
     b3a:	2b e7       	ldi	r18, 0x7B	; 123
     b3c:	34 e1       	ldi	r19, 0x14	; 20
     b3e:	4e ee       	ldi	r20, 0xEE	; 238
     b40:	5f e3       	ldi	r21, 0x3F	; 63
     b42:	0e 94 ca 12 	call	0x2594	; 0x2594 <__divsf3>
     b46:	20 e0       	ldi	r18, 0x00	; 0
     b48:	30 e0       	ldi	r19, 0x00	; 0
     b4a:	4c e0       	ldi	r20, 0x0C	; 12
     b4c:	52 e4       	ldi	r21, 0x42	; 66
     b4e:	0e 94 66 12 	call	0x24cc	; 0x24cc <__addsf3>
     b52:	0e 94 32 13 	call	0x2664	; 0x2664 <__fixunssfsi>
     b56:	60 93 8c 00 	sts	0x008C, r22
     b5a:	08 95       	ret

00000b5c <servo_1_free>:
     b5c:	83 e0       	ldi	r24, 0x03	; 3
     b5e:	80 93 89 00 	sts	0x0089, r24
     b62:	8f ef       	ldi	r24, 0xFF	; 255
     b64:	80 93 88 00 	sts	0x0088, r24
     b68:	08 95       	ret

00000b6a <servo_2_free>:
     b6a:	83 e0       	ldi	r24, 0x03	; 3
     b6c:	80 93 8b 00 	sts	0x008B, r24
     b70:	8f ef       	ldi	r24, 0xFF	; 255
     b72:	80 93 8a 00 	sts	0x008A, r24
     b76:	08 95       	ret

00000b78 <servo_3_free>:
     b78:	83 e0       	ldi	r24, 0x03	; 3
     b7a:	80 93 8d 00 	sts	0x008D, r24
     b7e:	8f ef       	ldi	r24, 0xFF	; 255
     b80:	80 93 8c 00 	sts	0x008C, r24
     b84:	08 95       	ret

00000b86 <servo_4_free>:
     b86:	83 e0       	ldi	r24, 0x03	; 3
     b88:	80 93 8d 00 	sts	0x008D, r24
     b8c:	8f ef       	ldi	r24, 0xFF	; 255
     b8e:	80 93 8c 00 	sts	0x008C, r24
     b92:	08 95       	ret

00000b94 <ADC_Conversion>:
     b94:	88 30       	cpi	r24, 0x08	; 8
     b96:	18 f0       	brcs	.+6      	; 0xb9e <ADC_Conversion+0xa>
     b98:	98 e0       	ldi	r25, 0x08	; 8
     b9a:	90 93 7b 00 	sts	0x007B, r25
     b9e:	87 70       	andi	r24, 0x07	; 7
     ba0:	80 62       	ori	r24, 0x20	; 32
     ba2:	80 93 7c 00 	sts	0x007C, r24
     ba6:	ea e7       	ldi	r30, 0x7A	; 122
     ba8:	f0 e0       	ldi	r31, 0x00	; 0
     baa:	80 81       	ld	r24, Z
     bac:	80 64       	ori	r24, 0x40	; 64
     bae:	80 83       	st	Z, r24
     bb0:	80 81       	ld	r24, Z
     bb2:	84 ff       	sbrs	r24, 4
     bb4:	fd cf       	rjmp	.-6      	; 0xbb0 <ADC_Conversion+0x1c>
     bb6:	80 91 79 00 	lds	r24, 0x0079
     bba:	ea e7       	ldi	r30, 0x7A	; 122
     bbc:	f0 e0       	ldi	r31, 0x00	; 0
     bbe:	90 81       	ld	r25, Z
     bc0:	90 61       	ori	r25, 0x10	; 16
     bc2:	90 83       	st	Z, r25
     bc4:	10 92 7b 00 	sts	0x007B, r1
     bc8:	08 95       	ret

00000bca <LCD_Function>:
     bca:	cf 93       	push	r28
     bcc:	df 93       	push	r29
     bce:	ec 01       	movw	r28, r24
     bd0:	1c db       	rcall	.-2504   	; 0x20a <lcd_init>
     bd2:	c3 30       	cpi	r28, 0x03	; 3
     bd4:	d1 05       	cpc	r29, r1
     bd6:	09 f4       	brne	.+2      	; 0xbda <LCD_Function+0x10>
     bd8:	35 c0       	rjmp	.+106    	; 0xc44 <LCD_Function+0x7a>
     bda:	2c f4       	brge	.+10     	; 0xbe6 <LCD_Function+0x1c>
     bdc:	20 97       	sbiw	r28, 0x00	; 0
     bde:	51 f0       	breq	.+20     	; 0xbf4 <LCD_Function+0x2a>
     be0:	21 97       	sbiw	r28, 0x01	; 1
     be2:	71 f0       	breq	.+28     	; 0xc00 <LCD_Function+0x36>
     be4:	34 c0       	rjmp	.+104    	; 0xc4e <LCD_Function+0x84>
     be6:	c5 30       	cpi	r28, 0x05	; 5
     be8:	d1 05       	cpc	r29, r1
     bea:	81 f0       	breq	.+32     	; 0xc0c <LCD_Function+0x42>
     bec:	04 f1       	brlt	.+64     	; 0xc2e <LCD_Function+0x64>
     bee:	26 97       	sbiw	r28, 0x06	; 6
     bf0:	99 f0       	breq	.+38     	; 0xc18 <LCD_Function+0x4e>
     bf2:	2d c0       	rjmp	.+90     	; 0xc4e <LCD_Function+0x84>
     bf4:	82 e8       	ldi	r24, 0x82	; 130
     bf6:	e4 da       	rcall	.-2616   	; 0x1c0 <lcd_wr_command>
     bf8:	83 e7       	ldi	r24, 0x73	; 115
     bfa:	94 e0       	ldi	r25, 0x04	; 4
     bfc:	3f db       	rcall	.-2434   	; 0x27c <lcd_string>
     bfe:	27 c0       	rjmp	.+78     	; 0xc4e <LCD_Function+0x84>
     c00:	82 e8       	ldi	r24, 0x82	; 130
     c02:	de da       	rcall	.-2628   	; 0x1c0 <lcd_wr_command>
     c04:	81 e8       	ldi	r24, 0x81	; 129
     c06:	94 e0       	ldi	r25, 0x04	; 4
     c08:	39 db       	rcall	.-2446   	; 0x27c <lcd_string>
     c0a:	21 c0       	rjmp	.+66     	; 0xc4e <LCD_Function+0x84>
     c0c:	82 e8       	ldi	r24, 0x82	; 130
     c0e:	d8 da       	rcall	.-2640   	; 0x1c0 <lcd_wr_command>
     c10:	8f e8       	ldi	r24, 0x8F	; 143
     c12:	94 e0       	ldi	r25, 0x04	; 4
     c14:	33 db       	rcall	.-2458   	; 0x27c <lcd_string>
     c16:	1b c0       	rjmp	.+54     	; 0xc4e <LCD_Function+0x84>
     c18:	85 e8       	ldi	r24, 0x85	; 133
     c1a:	d2 da       	rcall	.-2652   	; 0x1c0 <lcd_wr_command>
     c1c:	87 e9       	ldi	r24, 0x97	; 151
     c1e:	94 e0       	ldi	r25, 0x04	; 4
     c20:	2d db       	rcall	.-2470   	; 0x27c <lcd_string>
     c22:	80 ec       	ldi	r24, 0xC0	; 192
     c24:	cd da       	rcall	.-2662   	; 0x1c0 <lcd_wr_command>
     c26:	8d e9       	ldi	r24, 0x9D	; 157
     c28:	94 e0       	ldi	r25, 0x04	; 4
     c2a:	28 db       	rcall	.-2480   	; 0x27c <lcd_string>
     c2c:	10 c0       	rjmp	.+32     	; 0xc4e <LCD_Function+0x84>
     c2e:	85 e8       	ldi	r24, 0x85	; 133
     c30:	c7 da       	rcall	.-2674   	; 0x1c0 <lcd_wr_command>
     c32:	8c ea       	ldi	r24, 0xAC	; 172
     c34:	94 e0       	ldi	r25, 0x04	; 4
     c36:	22 db       	rcall	.-2492   	; 0x27c <lcd_string>
     c38:	82 ec       	ldi	r24, 0xC2	; 194
     c3a:	c2 da       	rcall	.-2684   	; 0x1c0 <lcd_wr_command>
     c3c:	83 eb       	ldi	r24, 0xB3	; 179
     c3e:	94 e0       	ldi	r25, 0x04	; 4
     c40:	1d db       	rcall	.-2502   	; 0x27c <lcd_string>
     c42:	05 c0       	rjmp	.+10     	; 0xc4e <LCD_Function+0x84>
     c44:	82 e8       	ldi	r24, 0x82	; 130
     c46:	bc da       	rcall	.-2696   	; 0x1c0 <lcd_wr_command>
     c48:	81 ec       	ldi	r24, 0xC1	; 193
     c4a:	94 e0       	ldi	r25, 0x04	; 4
     c4c:	17 db       	rcall	.-2514   	; 0x27c <lcd_string>
     c4e:	df 91       	pop	r29
     c50:	cf 91       	pop	r28
     c52:	08 95       	ret

00000c54 <m_pick>:
     c54:	10 92 89 00 	sts	0x0089, r1
     c58:	83 e5       	ldi	r24, 0x53	; 83
     c5a:	80 93 88 00 	sts	0x0088, r24
     c5e:	2f ef       	ldi	r18, 0xFF	; 255
     c60:	8f eb       	ldi	r24, 0xBF	; 191
     c62:	91 e2       	ldi	r25, 0x21	; 33
     c64:	21 50       	subi	r18, 0x01	; 1
     c66:	80 40       	sbci	r24, 0x00	; 0
     c68:	90 40       	sbci	r25, 0x00	; 0
     c6a:	e1 f7       	brne	.-8      	; 0xc64 <m_pick+0x10>
     c6c:	00 c0       	rjmp	.+0      	; 0xc6e <m_pick+0x1a>
     c6e:	00 00       	nop
     c70:	75 df       	rcall	.-278    	; 0xb5c <servo_1_free>
     c72:	88 e7       	ldi	r24, 0x78	; 120
     c74:	29 df       	rcall	.-430    	; 0xac8 <servo_3>
     c76:	2f ef       	ldi	r18, 0xFF	; 255
     c78:	8f eb       	ldi	r24, 0xBF	; 191
     c7a:	91 e2       	ldi	r25, 0x21	; 33
     c7c:	21 50       	subi	r18, 0x01	; 1
     c7e:	80 40       	sbci	r24, 0x00	; 0
     c80:	90 40       	sbci	r25, 0x00	; 0
     c82:	e1 f7       	brne	.-8      	; 0xc7c <m_pick+0x28>
     c84:	00 c0       	rjmp	.+0      	; 0xc86 <m_pick+0x32>
     c86:	00 00       	nop
     c88:	77 df       	rcall	.-274    	; 0xb78 <servo_3_free>
     c8a:	10 92 8b 00 	sts	0x008B, r1
     c8e:	89 e5       	ldi	r24, 0x59	; 89
     c90:	80 93 8a 00 	sts	0x008A, r24
     c94:	2f ef       	ldi	r18, 0xFF	; 255
     c96:	8f ef       	ldi	r24, 0xFF	; 255
     c98:	9c e2       	ldi	r25, 0x2C	; 44
     c9a:	21 50       	subi	r18, 0x01	; 1
     c9c:	80 40       	sbci	r24, 0x00	; 0
     c9e:	90 40       	sbci	r25, 0x00	; 0
     ca0:	e1 f7       	brne	.-8      	; 0xc9a <m_pick+0x46>
     ca2:	00 c0       	rjmp	.+0      	; 0xca4 <m_pick+0x50>
     ca4:	00 00       	nop
     ca6:	84 e1       	ldi	r24, 0x14	; 20
     ca8:	0f df       	rcall	.-482    	; 0xac8 <servo_3>
     caa:	2f ef       	ldi	r18, 0xFF	; 255
     cac:	8f eb       	ldi	r24, 0xBF	; 191
     cae:	91 e2       	ldi	r25, 0x21	; 33
     cb0:	21 50       	subi	r18, 0x01	; 1
     cb2:	80 40       	sbci	r24, 0x00	; 0
     cb4:	90 40       	sbci	r25, 0x00	; 0
     cb6:	e1 f7       	brne	.-8      	; 0xcb0 <m_pick+0x5c>
     cb8:	00 c0       	rjmp	.+0      	; 0xcba <m_pick+0x66>
     cba:	00 00       	nop
     cbc:	10 92 8b 00 	sts	0x008B, r1
     cc0:	83 e2       	ldi	r24, 0x23	; 35
     cc2:	80 93 8a 00 	sts	0x008A, r24
     cc6:	2f ef       	ldi	r18, 0xFF	; 255
     cc8:	8f ef       	ldi	r24, 0xFF	; 255
     cca:	9c e2       	ldi	r25, 0x2C	; 44
     ccc:	21 50       	subi	r18, 0x01	; 1
     cce:	80 40       	sbci	r24, 0x00	; 0
     cd0:	90 40       	sbci	r25, 0x00	; 0
     cd2:	e1 f7       	brne	.-8      	; 0xccc <m_pick+0x78>
     cd4:	00 c0       	rjmp	.+0      	; 0xcd6 <m_pick+0x82>
     cd6:	00 00       	nop
     cd8:	08 95       	ret

00000cda <s_pick>:
     cda:	10 92 89 00 	sts	0x0089, r1
     cde:	87 e4       	ldi	r24, 0x47	; 71
     ce0:	80 93 88 00 	sts	0x0088, r24
     ce4:	2f ef       	ldi	r18, 0xFF	; 255
     ce6:	8f eb       	ldi	r24, 0xBF	; 191
     ce8:	91 e2       	ldi	r25, 0x21	; 33
     cea:	21 50       	subi	r18, 0x01	; 1
     cec:	80 40       	sbci	r24, 0x00	; 0
     cee:	90 40       	sbci	r25, 0x00	; 0
     cf0:	e1 f7       	brne	.-8      	; 0xcea <s_pick+0x10>
     cf2:	00 c0       	rjmp	.+0      	; 0xcf4 <s_pick+0x1a>
     cf4:	00 00       	nop
     cf6:	32 df       	rcall	.-412    	; 0xb5c <servo_1_free>
     cf8:	88 e2       	ldi	r24, 0x28	; 40
     cfa:	0b df       	rcall	.-490    	; 0xb12 <servo_4>
     cfc:	2f ef       	ldi	r18, 0xFF	; 255
     cfe:	8f ef       	ldi	r24, 0xFF	; 255
     d00:	9c e2       	ldi	r25, 0x2C	; 44
     d02:	21 50       	subi	r18, 0x01	; 1
     d04:	80 40       	sbci	r24, 0x00	; 0
     d06:	90 40       	sbci	r25, 0x00	; 0
     d08:	e1 f7       	brne	.-8      	; 0xd02 <s_pick+0x28>
     d0a:	00 c0       	rjmp	.+0      	; 0xd0c <s_pick+0x32>
     d0c:	00 00       	nop
     d0e:	3b df       	rcall	.-394    	; 0xb86 <servo_4_free>
     d10:	10 92 8b 00 	sts	0x008B, r1
     d14:	88 e5       	ldi	r24, 0x58	; 88
     d16:	80 93 8a 00 	sts	0x008A, r24
     d1a:	2f ef       	ldi	r18, 0xFF	; 255
     d1c:	8f e7       	ldi	r24, 0x7F	; 127
     d1e:	93 e4       	ldi	r25, 0x43	; 67
     d20:	21 50       	subi	r18, 0x01	; 1
     d22:	80 40       	sbci	r24, 0x00	; 0
     d24:	90 40       	sbci	r25, 0x00	; 0
     d26:	e1 f7       	brne	.-8      	; 0xd20 <s_pick+0x46>
     d28:	00 c0       	rjmp	.+0      	; 0xd2a <s_pick+0x50>
     d2a:	00 00       	nop
     d2c:	80 ea       	ldi	r24, 0xA0	; 160
     d2e:	f1 de       	rcall	.-542    	; 0xb12 <servo_4>
     d30:	2f ef       	ldi	r18, 0xFF	; 255
     d32:	8f eb       	ldi	r24, 0xBF	; 191
     d34:	91 e2       	ldi	r25, 0x21	; 33
     d36:	21 50       	subi	r18, 0x01	; 1
     d38:	80 40       	sbci	r24, 0x00	; 0
     d3a:	90 40       	sbci	r25, 0x00	; 0
     d3c:	e1 f7       	brne	.-8      	; 0xd36 <s_pick+0x5c>
     d3e:	00 c0       	rjmp	.+0      	; 0xd40 <s_pick+0x66>
     d40:	00 00       	nop
     d42:	10 92 8b 00 	sts	0x008B, r1
     d46:	83 e2       	ldi	r24, 0x23	; 35
     d48:	80 93 8a 00 	sts	0x008A, r24
     d4c:	2f ef       	ldi	r18, 0xFF	; 255
     d4e:	8f ef       	ldi	r24, 0xFF	; 255
     d50:	9c e2       	ldi	r25, 0x2C	; 44
     d52:	21 50       	subi	r18, 0x01	; 1
     d54:	80 40       	sbci	r24, 0x00	; 0
     d56:	90 40       	sbci	r25, 0x00	; 0
     d58:	e1 f7       	brne	.-8      	; 0xd52 <s_pick+0x78>
     d5a:	00 c0       	rjmp	.+0      	; 0xd5c <s_pick+0x82>
     d5c:	00 00       	nop
     d5e:	05 df       	rcall	.-502    	; 0xb6a <servo_2_free>
     d60:	10 92 89 00 	sts	0x0089, r1
     d64:	83 e5       	ldi	r24, 0x53	; 83
     d66:	80 93 88 00 	sts	0x0088, r24
     d6a:	2f ef       	ldi	r18, 0xFF	; 255
     d6c:	8f eb       	ldi	r24, 0xBF	; 191
     d6e:	91 e2       	ldi	r25, 0x21	; 33
     d70:	21 50       	subi	r18, 0x01	; 1
     d72:	80 40       	sbci	r24, 0x00	; 0
     d74:	90 40       	sbci	r25, 0x00	; 0
     d76:	e1 f7       	brne	.-8      	; 0xd70 <s_pick+0x96>
     d78:	00 c0       	rjmp	.+0      	; 0xd7a <s_pick+0xa0>
     d7a:	00 00       	nop
     d7c:	ef ce       	rjmp	.-546    	; 0xb5c <servo_1_free>
     d7e:	08 95       	ret

00000d80 <inv_place>:
     d80:	2f ef       	ldi	r18, 0xFF	; 255
     d82:	8f e7       	ldi	r24, 0x7F	; 127
     d84:	96 e1       	ldi	r25, 0x16	; 22
     d86:	21 50       	subi	r18, 0x01	; 1
     d88:	80 40       	sbci	r24, 0x00	; 0
     d8a:	90 40       	sbci	r25, 0x00	; 0
     d8c:	e1 f7       	brne	.-8      	; 0xd86 <inv_place+0x6>
     d8e:	00 c0       	rjmp	.+0      	; 0xd90 <inv_place+0x10>
     d90:	00 00       	nop
     d92:	10 92 89 00 	sts	0x0089, r1
     d96:	83 e2       	ldi	r24, 0x23	; 35
     d98:	80 93 88 00 	sts	0x0088, r24
     d9c:	2f ef       	ldi	r18, 0xFF	; 255
     d9e:	8f ef       	ldi	r24, 0xFF	; 255
     da0:	9c e2       	ldi	r25, 0x2C	; 44
     da2:	21 50       	subi	r18, 0x01	; 1
     da4:	80 40       	sbci	r24, 0x00	; 0
     da6:	90 40       	sbci	r25, 0x00	; 0
     da8:	e1 f7       	brne	.-8      	; 0xda2 <inv_place+0x22>
     daa:	00 c0       	rjmp	.+0      	; 0xdac <inv_place+0x2c>
     dac:	00 00       	nop
     dae:	d6 de       	rcall	.-596    	; 0xb5c <servo_1_free>
     db0:	8e e1       	ldi	r24, 0x1E	; 30
     db2:	8a de       	rcall	.-748    	; 0xac8 <servo_3>
     db4:	2f ef       	ldi	r18, 0xFF	; 255
     db6:	8f eb       	ldi	r24, 0xBF	; 191
     db8:	91 e2       	ldi	r25, 0x21	; 33
     dba:	21 50       	subi	r18, 0x01	; 1
     dbc:	80 40       	sbci	r24, 0x00	; 0
     dbe:	90 40       	sbci	r25, 0x00	; 0
     dc0:	e1 f7       	brne	.-8      	; 0xdba <inv_place+0x3a>
     dc2:	00 c0       	rjmp	.+0      	; 0xdc4 <inv_place+0x44>
     dc4:	00 00       	nop
     dc6:	10 92 8b 00 	sts	0x008B, r1
     dca:	8b e3       	ldi	r24, 0x3B	; 59
     dcc:	80 93 8a 00 	sts	0x008A, r24
     dd0:	2f ef       	ldi	r18, 0xFF	; 255
     dd2:	8f ef       	ldi	r24, 0xFF	; 255
     dd4:	9c e2       	ldi	r25, 0x2C	; 44
     dd6:	21 50       	subi	r18, 0x01	; 1
     dd8:	80 40       	sbci	r24, 0x00	; 0
     dda:	90 40       	sbci	r25, 0x00	; 0
     ddc:	e1 f7       	brne	.-8      	; 0xdd6 <inv_place+0x56>
     dde:	00 c0       	rjmp	.+0      	; 0xde0 <inv_place+0x60>
     de0:	00 00       	nop
     de2:	89 e6       	ldi	r24, 0x69	; 105
     de4:	71 de       	rcall	.-798    	; 0xac8 <servo_3>
     de6:	2f ef       	ldi	r18, 0xFF	; 255
     de8:	8f eb       	ldi	r24, 0xBF	; 191
     dea:	91 e2       	ldi	r25, 0x21	; 33
     dec:	21 50       	subi	r18, 0x01	; 1
     dee:	80 40       	sbci	r24, 0x00	; 0
     df0:	90 40       	sbci	r25, 0x00	; 0
     df2:	e1 f7       	brne	.-8      	; 0xdec <inv_place+0x6c>
     df4:	00 c0       	rjmp	.+0      	; 0xdf6 <inv_place+0x76>
     df6:	00 00       	nop
     df8:	bf de       	rcall	.-642    	; 0xb78 <servo_3_free>
     dfa:	10 92 8b 00 	sts	0x008B, r1
     dfe:	83 e2       	ldi	r24, 0x23	; 35
     e00:	80 93 8a 00 	sts	0x008A, r24
     e04:	2f ef       	ldi	r18, 0xFF	; 255
     e06:	8f ef       	ldi	r24, 0xFF	; 255
     e08:	9c e2       	ldi	r25, 0x2C	; 44
     e0a:	21 50       	subi	r18, 0x01	; 1
     e0c:	80 40       	sbci	r24, 0x00	; 0
     e0e:	90 40       	sbci	r25, 0x00	; 0
     e10:	e1 f7       	brne	.-8      	; 0xe0a <inv_place+0x8a>
     e12:	00 c0       	rjmp	.+0      	; 0xe14 <inv_place+0x94>
     e14:	00 00       	nop
     e16:	a9 de       	rcall	.-686    	; 0xb6a <servo_2_free>
     e18:	10 92 89 00 	sts	0x0089, r1
     e1c:	86 e5       	ldi	r24, 0x56	; 86
     e1e:	80 93 88 00 	sts	0x0088, r24
     e22:	2f ef       	ldi	r18, 0xFF	; 255
     e24:	8f ef       	ldi	r24, 0xFF	; 255
     e26:	9c e2       	ldi	r25, 0x2C	; 44
     e28:	21 50       	subi	r18, 0x01	; 1
     e2a:	80 40       	sbci	r24, 0x00	; 0
     e2c:	90 40       	sbci	r25, 0x00	; 0
     e2e:	e1 f7       	brne	.-8      	; 0xe28 <inv_place+0xa8>
     e30:	00 c0       	rjmp	.+0      	; 0xe32 <inv_place+0xb2>
     e32:	00 00       	nop
     e34:	93 ce       	rjmp	.-730    	; 0xb5c <servo_1_free>
     e36:	08 95       	ret

00000e38 <forward_inv>:
     e38:	ff 92       	push	r15
     e3a:	0f 93       	push	r16
     e3c:	1f 93       	push	r17
     e3e:	cf 93       	push	r28
     e40:	df 93       	push	r29
     e42:	83 e0       	ldi	r24, 0x03	; 3
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	c1 de       	rcall	.-638    	; 0xbca <LCD_Function>
     e48:	22 e0       	ldi	r18, 0x02	; 2
     e4a:	30 e0       	ldi	r19, 0x00	; 0
     e4c:	40 e0       	ldi	r20, 0x00	; 0
     e4e:	50 e0       	ldi	r21, 0x00	; 0
     e50:	67 e0       	ldi	r22, 0x07	; 7
     e52:	82 e0       	ldi	r24, 0x02	; 2
     e54:	21 da       	rcall	.-3006   	; 0x298 <lcd_print>
     e56:	f1 2c       	mov	r15, r1
     e58:	08 e2       	ldi	r16, 0x28	; 40
     e5a:	11 e0       	ldi	r17, 0x01	; 1
     e5c:	ca e2       	ldi	r28, 0x2A	; 42
     e5e:	d1 e0       	ldi	r29, 0x01	; 1
     e60:	21 de       	rcall	.-958    	; 0xaa4 <forward>
     e62:	80 91 42 04 	lds	r24, 0x0442
     e66:	f8 01       	movw	r30, r16
     e68:	80 83       	st	Z, r24
     e6a:	88 83       	st	Y, r24
     e6c:	81 e0       	ldi	r24, 0x01	; 1
     e6e:	92 de       	rcall	.-732    	; 0xb94 <ADC_Conversion>
     e70:	80 93 1c 05 	sts	0x051C, r24
     e74:	82 e0       	ldi	r24, 0x02	; 2
     e76:	8e de       	rcall	.-740    	; 0xb94 <ADC_Conversion>
     e78:	80 93 11 05 	sts	0x0511, r24
     e7c:	83 e0       	ldi	r24, 0x03	; 3
     e7e:	8a de       	rcall	.-748    	; 0xb94 <ADC_Conversion>
     e80:	80 93 14 05 	sts	0x0514, r24
     e84:	90 91 1c 05 	lds	r25, 0x051C
     e88:	40 91 11 05 	lds	r20, 0x0511
     e8c:	24 2f       	mov	r18, r20
     e8e:	30 e0       	ldi	r19, 0x00	; 0
     e90:	29 0f       	add	r18, r25
     e92:	31 1d       	adc	r19, r1
     e94:	28 0f       	add	r18, r24
     e96:	31 1d       	adc	r19, r1
     e98:	2a 34       	cpi	r18, 0x4A	; 74
     e9a:	31 40       	sbci	r19, 0x01	; 1
     e9c:	6c f5       	brge	.+90     	; 0xef8 <forward_inv+0xc0>
     e9e:	4a 35       	cpi	r20, 0x5A	; 90
     ea0:	58 f5       	brcc	.+86     	; 0xef8 <forward_inv+0xc0>
     ea2:	f1 10       	cpse	r15, r1
     ea4:	29 c0       	rjmp	.+82     	; 0xef8 <forward_inv+0xc0>
     ea6:	2f ef       	ldi	r18, 0xFF	; 255
     ea8:	5f e7       	ldi	r21, 0x7F	; 127
     eaa:	84 e0       	ldi	r24, 0x04	; 4
     eac:	21 50       	subi	r18, 0x01	; 1
     eae:	50 40       	sbci	r21, 0x00	; 0
     eb0:	80 40       	sbci	r24, 0x00	; 0
     eb2:	e1 f7       	brne	.-8      	; 0xeac <forward_inv+0x74>
     eb4:	00 c0       	rjmp	.+0      	; 0xeb6 <forward_inv+0x7e>
     eb6:	00 00       	nop
     eb8:	22 e0       	ldi	r18, 0x02	; 2
     eba:	30 e0       	ldi	r19, 0x00	; 0
     ebc:	41 e0       	ldi	r20, 0x01	; 1
     ebe:	50 e0       	ldi	r21, 0x00	; 0
     ec0:	67 e0       	ldi	r22, 0x07	; 7
     ec2:	82 e0       	ldi	r24, 0x02	; 2
     ec4:	e9 d9       	rcall	.-3118   	; 0x298 <lcd_print>
     ec6:	eb dd       	rcall	.-1066   	; 0xa9e <back>
     ec8:	9f ef       	ldi	r25, 0xFF	; 255
     eca:	ef e3       	ldi	r30, 0x3F	; 63
     ecc:	fb e0       	ldi	r31, 0x0B	; 11
     ece:	91 50       	subi	r25, 0x01	; 1
     ed0:	e0 40       	sbci	r30, 0x00	; 0
     ed2:	f0 40       	sbci	r31, 0x00	; 0
     ed4:	e1 f7       	brne	.-8      	; 0xece <forward_inv+0x96>
     ed6:	00 c0       	rjmp	.+0      	; 0xed8 <forward_inv+0xa0>
     ed8:	00 00       	nop
     eda:	f3 dd       	rcall	.-1050   	; 0xac2 <stop>
     edc:	51 df       	rcall	.-350    	; 0xd80 <inv_place>
     ede:	e2 dd       	rcall	.-1084   	; 0xaa4 <forward>
     ee0:	2f ef       	ldi	r18, 0xFF	; 255
     ee2:	5f e7       	ldi	r21, 0x7F	; 127
     ee4:	84 e0       	ldi	r24, 0x04	; 4
     ee6:	21 50       	subi	r18, 0x01	; 1
     ee8:	50 40       	sbci	r21, 0x00	; 0
     eea:	80 40       	sbci	r24, 0x00	; 0
     eec:	e1 f7       	brne	.-8      	; 0xee6 <forward_inv+0xae>
     eee:	00 c0       	rjmp	.+0      	; 0xef0 <forward_inv+0xb8>
     ef0:	00 00       	nop
     ef2:	ff 24       	eor	r15, r15
     ef4:	f3 94       	inc	r15
     ef6:	b4 cf       	rjmp	.-152    	; 0xe60 <forward_inv+0x28>
     ef8:	95 3b       	cpi	r25, 0xB5	; 181
     efa:	60 f0       	brcs	.+24     	; 0xf14 <forward_inv+0xdc>
     efc:	42 38       	cpi	r20, 0x82	; 130
     efe:	50 f4       	brcc	.+20     	; 0xf14 <forward_inv+0xdc>
     f00:	85 3b       	cpi	r24, 0xB5	; 181
     f02:	40 f0       	brcs	.+16     	; 0xf14 <forward_inv+0xdc>
     f04:	80 91 42 04 	lds	r24, 0x0442
     f08:	f8 01       	movw	r30, r16
     f0a:	80 83       	st	Z, r24
     f0c:	80 91 42 04 	lds	r24, 0x0442
     f10:	88 83       	st	Y, r24
     f12:	a6 cf       	rjmp	.-180    	; 0xe60 <forward_inv+0x28>
     f14:	90 35       	cpi	r25, 0x50	; 80
     f16:	98 f4       	brcc	.+38     	; 0xf3e <forward_inv+0x106>
     f18:	43 38       	cpi	r20, 0x83	; 131
     f1a:	30 f1       	brcs	.+76     	; 0xf68 <forward_inv+0x130>
     f1c:	87 39       	cpi	r24, 0x97	; 151
     f1e:	98 f1       	brcs	.+102    	; 0xf86 <forward_inv+0x14e>
     f20:	cd dd       	rcall	.-1126   	; 0xabc <soft_left>
     f22:	80 91 41 04 	lds	r24, 0x0441
     f26:	82 53       	subi	r24, 0x32	; 50
     f28:	f8 01       	movw	r30, r16
     f2a:	80 83       	st	Z, r24
     f2c:	80 91 42 04 	lds	r24, 0x0442
     f30:	88 83       	st	Y, r24
     f32:	86 e6       	ldi	r24, 0x66	; 102
     f34:	9e e0       	ldi	r25, 0x0E	; 14
     f36:	01 97       	sbiw	r24, 0x01	; 1
     f38:	f1 f7       	brne	.-4      	; 0xf36 <forward_inv+0xfe>
     f3a:	00 00       	nop
     f3c:	91 cf       	rjmp	.-222    	; 0xe60 <forward_inv+0x28>
     f3e:	86 39       	cpi	r24, 0x96	; 150
     f40:	98 f4       	brcc	.+38     	; 0xf68 <forward_inv+0x130>
     f42:	43 38       	cpi	r20, 0x83	; 131
     f44:	88 f0       	brcs	.+34     	; 0xf68 <forward_inv+0x130>
     f46:	91 35       	cpi	r25, 0x51	; 81
     f48:	78 f0       	brcs	.+30     	; 0xf68 <forward_inv+0x130>
     f4a:	b5 dd       	rcall	.-1174   	; 0xab6 <soft_right>
     f4c:	80 91 42 04 	lds	r24, 0x0442
     f50:	f8 01       	movw	r30, r16
     f52:	80 83       	st	Z, r24
     f54:	80 91 41 04 	lds	r24, 0x0441
     f58:	82 53       	subi	r24, 0x32	; 50
     f5a:	88 83       	st	Y, r24
     f5c:	86 e6       	ldi	r24, 0x66	; 102
     f5e:	9e e0       	ldi	r25, 0x0E	; 14
     f60:	01 97       	sbiw	r24, 0x01	; 1
     f62:	f1 f7       	brne	.-4      	; 0xf60 <forward_inv+0x128>
     f64:	00 00       	nop
     f66:	7c cf       	rjmp	.-264    	; 0xe60 <forward_inv+0x28>
     f68:	84 36       	cpi	r24, 0x64	; 100
     f6a:	08 f0       	brcs	.+2      	; 0xf6e <forward_inv+0x136>
     f6c:	79 cf       	rjmp	.-270    	; 0xe60 <forward_inv+0x28>
     f6e:	45 36       	cpi	r20, 0x65	; 101
     f70:	08 f4       	brcc	.+2      	; 0xf74 <forward_inv+0x13c>
     f72:	76 cf       	rjmp	.-276    	; 0xe60 <forward_inv+0x28>
     f74:	94 36       	cpi	r25, 0x64	; 100
     f76:	08 f0       	brcs	.+2      	; 0xf7a <forward_inv+0x142>
     f78:	73 cf       	rjmp	.-282    	; 0xe60 <forward_inv+0x28>
     f7a:	61 e0       	ldi	r22, 0x01	; 1
     f7c:	70 e0       	ldi	r23, 0x00	; 0
     f7e:	82 e0       	ldi	r24, 0x02	; 2
     f80:	90 e0       	ldi	r25, 0x00	; 0
     f82:	0a d0       	rcall	.+20     	; 0xf98 <forward_wls>
     f84:	03 c0       	rjmp	.+6      	; 0xf8c <forward_inv+0x154>
     f86:	86 39       	cpi	r24, 0x96	; 150
     f88:	f0 f2       	brcs	.-68     	; 0xf46 <forward_inv+0x10e>
     f8a:	ee cf       	rjmp	.-36     	; 0xf68 <forward_inv+0x130>
     f8c:	df 91       	pop	r29
     f8e:	cf 91       	pop	r28
     f90:	1f 91       	pop	r17
     f92:	0f 91       	pop	r16
     f94:	ff 90       	pop	r15
     f96:	08 95       	ret

00000f98 <forward_wls>:
     f98:	af 92       	push	r10
     f9a:	bf 92       	push	r11
     f9c:	cf 92       	push	r12
     f9e:	df 92       	push	r13
     fa0:	ef 92       	push	r14
     fa2:	ff 92       	push	r15
     fa4:	0f 93       	push	r16
     fa6:	1f 93       	push	r17
     fa8:	cf 93       	push	r28
     faa:	df 93       	push	r29
     fac:	ec 01       	movw	r28, r24
     fae:	5b 01       	movw	r10, r22
     fb0:	16 16       	cp	r1, r22
     fb2:	17 06       	cpc	r1, r23
     fb4:	0c f0       	brlt	.+2      	; 0xfb8 <forward_wls+0x20>
     fb6:	d3 c0       	rjmp	.+422    	; 0x115e <forward_wls+0x1c6>
     fb8:	cc 24       	eor	r12, r12
     fba:	c3 94       	inc	r12
     fbc:	d1 2c       	mov	r13, r1
     fbe:	0f 2e       	mov	r0, r31
     fc0:	f8 e2       	ldi	r31, 0x28	; 40
     fc2:	ef 2e       	mov	r14, r31
     fc4:	ff 24       	eor	r15, r15
     fc6:	f3 94       	inc	r15
     fc8:	f0 2d       	mov	r31, r0
     fca:	0a e2       	ldi	r16, 0x2A	; 42
     fcc:	11 e0       	ldi	r17, 0x01	; 1
     fce:	6a dd       	rcall	.-1324   	; 0xaa4 <forward>
     fd0:	80 91 42 04 	lds	r24, 0x0442
     fd4:	f7 01       	movw	r30, r14
     fd6:	80 83       	st	Z, r24
     fd8:	f8 01       	movw	r30, r16
     fda:	80 83       	st	Z, r24
     fdc:	81 e0       	ldi	r24, 0x01	; 1
     fde:	da dd       	rcall	.-1100   	; 0xb94 <ADC_Conversion>
     fe0:	80 93 1c 05 	sts	0x051C, r24
     fe4:	82 e0       	ldi	r24, 0x02	; 2
     fe6:	d6 dd       	rcall	.-1108   	; 0xb94 <ADC_Conversion>
     fe8:	80 93 11 05 	sts	0x0511, r24
     fec:	83 e0       	ldi	r24, 0x03	; 3
     fee:	d2 dd       	rcall	.-1116   	; 0xb94 <ADC_Conversion>
     ff0:	80 93 14 05 	sts	0x0514, r24
     ff4:	c2 30       	cpi	r28, 0x02	; 2
     ff6:	d1 05       	cpc	r29, r1
     ff8:	c1 f4       	brne	.+48     	; 0x102a <forward_wls+0x92>
     ffa:	90 91 1c 05 	lds	r25, 0x051C
     ffe:	20 91 11 05 	lds	r18, 0x0511
    1002:	30 e0       	ldi	r19, 0x00	; 0
    1004:	29 0f       	add	r18, r25
    1006:	31 1d       	adc	r19, r1
    1008:	28 0f       	add	r18, r24
    100a:	31 1d       	adc	r19, r1
    100c:	29 31       	cpi	r18, 0x19	; 25
    100e:	31 40       	sbci	r19, 0x01	; 1
    1010:	0c f4       	brge	.+2      	; 0x1014 <forward_wls+0x7c>
    1012:	45 c0       	rjmp	.+138    	; 0x109e <forward_wls+0x106>
    1014:	2f ef       	ldi	r18, 0xFF	; 255
    1016:	8f eb       	ldi	r24, 0xBF	; 191
    1018:	96 e0       	ldi	r25, 0x06	; 6
    101a:	21 50       	subi	r18, 0x01	; 1
    101c:	80 40       	sbci	r24, 0x00	; 0
    101e:	90 40       	sbci	r25, 0x00	; 0
    1020:	e1 f7       	brne	.-8      	; 0x101a <forward_wls+0x82>
    1022:	00 c0       	rjmp	.+0      	; 0x1024 <forward_wls+0x8c>
    1024:	00 00       	nop
    1026:	4d dd       	rcall	.-1382   	; 0xac2 <stop>
    1028:	93 c0       	rjmp	.+294    	; 0x1150 <forward_wls+0x1b8>
    102a:	c3 30       	cpi	r28, 0x03	; 3
    102c:	d1 05       	cpc	r29, r1
    102e:	49 f4       	brne	.+18     	; 0x1042 <forward_wls+0xaa>
    1030:	90 91 1c 05 	lds	r25, 0x051C
    1034:	99 37       	cpi	r25, 0x79	; 121
    1036:	90 f2       	brcs	.-92     	; 0xfdc <forward_wls+0x44>
    1038:	89 37       	cpi	r24, 0x79	; 121
    103a:	80 f2       	brcs	.-96     	; 0xfdc <forward_wls+0x44>
    103c:	42 dd       	rcall	.-1404   	; 0xac2 <stop>
    103e:	fc de       	rcall	.-520    	; 0xe38 <forward_inv>
    1040:	87 c0       	rjmp	.+270    	; 0x1150 <forward_wls+0x1b8>
    1042:	c1 30       	cpi	r28, 0x01	; 1
    1044:	d1 05       	cpc	r29, r1
    1046:	a1 f4       	brne	.+40     	; 0x1070 <forward_wls+0xd8>
    1048:	8b e0       	ldi	r24, 0x0B	; 11
    104a:	a4 dd       	rcall	.-1208   	; 0xb94 <ADC_Conversion>
    104c:	80 93 1b 05 	sts	0x051B, r24
    1050:	87 34       	cpi	r24, 0x47	; 71
    1052:	08 f4       	brcc	.+2      	; 0x1056 <forward_wls+0xbe>
    1054:	c3 cf       	rjmp	.-122    	; 0xfdc <forward_wls+0x44>
    1056:	80 91 1c 05 	lds	r24, 0x051C
    105a:	80 35       	cpi	r24, 0x50	; 80
    105c:	08 f0       	brcs	.+2      	; 0x1060 <forward_wls+0xc8>
    105e:	be cf       	rjmp	.-132    	; 0xfdc <forward_wls+0x44>
    1060:	80 91 11 05 	lds	r24, 0x0511
    1064:	80 35       	cpi	r24, 0x50	; 80
    1066:	08 f0       	brcs	.+2      	; 0x106a <forward_wls+0xd2>
    1068:	b9 cf       	rjmp	.-142    	; 0xfdc <forward_wls+0x44>
    106a:	2b dd       	rcall	.-1450   	; 0xac2 <stop>
    106c:	8f d0       	rcall	.+286    	; 0x118c <forward_walls>
    106e:	70 c0       	rjmp	.+224    	; 0x1150 <forward_wls+0x1b8>
    1070:	20 97       	sbiw	r28, 0x00	; 0
    1072:	a9 f4       	brne	.+42     	; 0x109e <forward_wls+0x106>
    1074:	90 91 1c 05 	lds	r25, 0x051C
    1078:	20 91 11 05 	lds	r18, 0x0511
    107c:	30 e0       	ldi	r19, 0x00	; 0
    107e:	29 0f       	add	r18, r25
    1080:	31 1d       	adc	r19, r1
    1082:	28 0f       	add	r18, r24
    1084:	31 1d       	adc	r19, r1
    1086:	21 39       	cpi	r18, 0x91	; 145
    1088:	31 40       	sbci	r19, 0x01	; 1
    108a:	4c f0       	brlt	.+18     	; 0x109e <forward_wls+0x106>
    108c:	fc ec       	ldi	r31, 0xCC	; 204
    108e:	2c ee       	ldi	r18, 0xEC	; 236
    1090:	82 e0       	ldi	r24, 0x02	; 2
    1092:	f1 50       	subi	r31, 0x01	; 1
    1094:	20 40       	sbci	r18, 0x00	; 0
    1096:	80 40       	sbci	r24, 0x00	; 0
    1098:	e1 f7       	brne	.-8      	; 0x1092 <forward_wls+0xfa>
    109a:	00 c0       	rjmp	.+0      	; 0x109c <forward_wls+0x104>
    109c:	59 c0       	rjmp	.+178    	; 0x1150 <forward_wls+0x1b8>
    109e:	90 91 1c 05 	lds	r25, 0x051C
    10a2:	9c 33       	cpi	r25, 0x3C	; 60
    10a4:	78 f4       	brcc	.+30     	; 0x10c4 <forward_wls+0x12c>
    10a6:	20 91 11 05 	lds	r18, 0x0511
    10aa:	2d 37       	cpi	r18, 0x7D	; 125
    10ac:	58 f0       	brcs	.+22     	; 0x10c4 <forward_wls+0x12c>
    10ae:	8c 33       	cpi	r24, 0x3C	; 60
    10b0:	48 f4       	brcc	.+18     	; 0x10c4 <forward_wls+0x12c>
    10b2:	80 91 42 04 	lds	r24, 0x0442
    10b6:	f7 01       	movw	r30, r14
    10b8:	80 83       	st	Z, r24
    10ba:	80 91 42 04 	lds	r24, 0x0442
    10be:	f8 01       	movw	r30, r16
    10c0:	80 83       	st	Z, r24
    10c2:	8c cf       	rjmp	.-232    	; 0xfdc <forward_wls+0x44>
    10c4:	98 32       	cpi	r25, 0x28	; 40
    10c6:	78 f4       	brcc	.+30     	; 0x10e6 <forward_wls+0x14e>
    10c8:	20 91 11 05 	lds	r18, 0x0511
    10cc:	2c 33       	cpi	r18, 0x3C	; 60
    10ce:	58 f4       	brcc	.+22     	; 0x10e6 <forward_wls+0x14e>
    10d0:	8d 38       	cpi	r24, 0x8D	; 141
    10d2:	48 f0       	brcs	.+18     	; 0x10e6 <forward_wls+0x14e>
    10d4:	80 91 42 04 	lds	r24, 0x0442
    10d8:	f7 01       	movw	r30, r14
    10da:	80 83       	st	Z, r24
    10dc:	80 91 41 04 	lds	r24, 0x0441
    10e0:	f8 01       	movw	r30, r16
    10e2:	80 83       	st	Z, r24
    10e4:	7b cf       	rjmp	.-266    	; 0xfdc <forward_wls+0x44>
    10e6:	88 32       	cpi	r24, 0x28	; 40
    10e8:	78 f4       	brcc	.+30     	; 0x1108 <forward_wls+0x170>
    10ea:	20 91 11 05 	lds	r18, 0x0511
    10ee:	2c 33       	cpi	r18, 0x3C	; 60
    10f0:	58 f4       	brcc	.+22     	; 0x1108 <forward_wls+0x170>
    10f2:	9d 38       	cpi	r25, 0x8D	; 141
    10f4:	48 f0       	brcs	.+18     	; 0x1108 <forward_wls+0x170>
    10f6:	80 91 41 04 	lds	r24, 0x0441
    10fa:	f7 01       	movw	r30, r14
    10fc:	80 83       	st	Z, r24
    10fe:	80 91 42 04 	lds	r24, 0x0442
    1102:	f8 01       	movw	r30, r16
    1104:	80 83       	st	Z, r24
    1106:	6a cf       	rjmp	.-300    	; 0xfdc <forward_wls+0x44>
    1108:	40 91 11 05 	lds	r20, 0x0511
    110c:	24 2f       	mov	r18, r20
    110e:	30 e0       	ldi	r19, 0x00	; 0
    1110:	29 0f       	add	r18, r25
    1112:	31 1d       	adc	r19, r1
    1114:	28 0f       	add	r18, r24
    1116:	31 1d       	adc	r19, r1
    1118:	28 3c       	cpi	r18, 0xC8	; 200
    111a:	31 05       	cpc	r19, r1
    111c:	0c f0       	brlt	.+2      	; 0x1120 <forward_wls+0x188>
    111e:	5e cf       	rjmp	.-324    	; 0xfdc <forward_wls+0x44>
    1120:	43 53       	subi	r20, 0x33	; 51
    1122:	41 33       	cpi	r20, 0x31	; 49
    1124:	08 f0       	brcs	.+2      	; 0x1128 <forward_wls+0x190>
    1126:	5a cf       	rjmp	.-332    	; 0xfdc <forward_wls+0x44>
    1128:	89 17       	cp	r24, r25
    112a:	10 f5       	brcc	.+68     	; 0x1170 <forward_wls+0x1d8>
    112c:	80 91 40 04 	lds	r24, 0x0440
    1130:	f7 01       	movw	r30, r14
    1132:	80 83       	st	Z, r24
    1134:	80 91 42 04 	lds	r24, 0x0442
    1138:	f8 01       	movw	r30, r16
    113a:	80 83       	st	Z, r24
    113c:	4f cf       	rjmp	.-354    	; 0xfdc <forward_wls+0x44>
    113e:	80 91 42 04 	lds	r24, 0x0442
    1142:	f7 01       	movw	r30, r14
    1144:	80 83       	st	Z, r24
    1146:	80 91 40 04 	lds	r24, 0x0440
    114a:	f8 01       	movw	r30, r16
    114c:	80 83       	st	Z, r24
    114e:	46 cf       	rjmp	.-372    	; 0xfdc <forward_wls+0x44>
    1150:	ff ef       	ldi	r31, 0xFF	; 255
    1152:	cf 1a       	sub	r12, r31
    1154:	df 0a       	sbc	r13, r31
    1156:	ac 14       	cp	r10, r12
    1158:	bd 04       	cpc	r11, r13
    115a:	0c f0       	brlt	.+2      	; 0x115e <forward_wls+0x1c6>
    115c:	38 cf       	rjmp	.-400    	; 0xfce <forward_wls+0x36>
    115e:	26 e6       	ldi	r18, 0x66	; 102
    1160:	86 ee       	ldi	r24, 0xE6	; 230
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	21 50       	subi	r18, 0x01	; 1
    1166:	80 40       	sbci	r24, 0x00	; 0
    1168:	90 40       	sbci	r25, 0x00	; 0
    116a:	e1 f7       	brne	.-8      	; 0x1164 <forward_wls+0x1cc>
    116c:	aa dc       	rcall	.-1708   	; 0xac2 <stop>
    116e:	03 c0       	rjmp	.+6      	; 0x1176 <forward_wls+0x1de>
    1170:	98 17       	cp	r25, r24
    1172:	28 f3       	brcs	.-54     	; 0x113e <forward_wls+0x1a6>
    1174:	33 cf       	rjmp	.-410    	; 0xfdc <forward_wls+0x44>
    1176:	df 91       	pop	r29
    1178:	cf 91       	pop	r28
    117a:	1f 91       	pop	r17
    117c:	0f 91       	pop	r16
    117e:	ff 90       	pop	r15
    1180:	ef 90       	pop	r14
    1182:	df 90       	pop	r13
    1184:	cf 90       	pop	r12
    1186:	bf 90       	pop	r11
    1188:	af 90       	pop	r10
    118a:	08 95       	ret

0000118c <forward_walls>:
    118c:	df 92       	push	r13
    118e:	ef 92       	push	r14
    1190:	ff 92       	push	r15
    1192:	0f 93       	push	r16
    1194:	1f 93       	push	r17
    1196:	cf 93       	push	r28
    1198:	df 93       	push	r29
    119a:	84 dc       	rcall	.-1784   	; 0xaa4 <forward>
    119c:	2f ef       	ldi	r18, 0xFF	; 255
    119e:	8f ef       	ldi	r24, 0xFF	; 255
    11a0:	98 e0       	ldi	r25, 0x08	; 8
    11a2:	21 50       	subi	r18, 0x01	; 1
    11a4:	80 40       	sbci	r24, 0x00	; 0
    11a6:	90 40       	sbci	r25, 0x00	; 0
    11a8:	e1 f7       	brne	.-8      	; 0x11a2 <forward_walls+0x16>
    11aa:	00 c0       	rjmp	.+0      	; 0x11ac <forward_walls+0x20>
    11ac:	00 00       	nop
    11ae:	80 91 42 04 	lds	r24, 0x0442
    11b2:	80 93 28 01 	sts	0x0128, r24
    11b6:	80 93 2a 01 	sts	0x012A, r24
    11ba:	08 e2       	ldi	r16, 0x28	; 40
    11bc:	11 e0       	ldi	r17, 0x01	; 1
    11be:	0f 2e       	mov	r0, r31
    11c0:	f8 e7       	ldi	r31, 0x78	; 120
    11c2:	df 2e       	mov	r13, r31
    11c4:	f0 2d       	mov	r31, r0
    11c6:	ca e2       	ldi	r28, 0x2A	; 42
    11c8:	d1 e0       	ldi	r29, 0x01	; 1
    11ca:	0f 2e       	mov	r0, r31
    11cc:	f5 e7       	ldi	r31, 0x75	; 117
    11ce:	ef 2e       	mov	r14, r31
    11d0:	f0 2d       	mov	r31, r0
    11d2:	0f 2e       	mov	r0, r31
    11d4:	fc ed       	ldi	r31, 0xDC	; 220
    11d6:	ff 2e       	mov	r15, r31
    11d8:	f0 2d       	mov	r31, r0
    11da:	64 dc       	rcall	.-1848   	; 0xaa4 <forward>
    11dc:	8b e0       	ldi	r24, 0x0B	; 11
    11de:	da dc       	rcall	.-1612   	; 0xb94 <ADC_Conversion>
    11e0:	80 93 1b 05 	sts	0x051B, r24
    11e4:	83 e0       	ldi	r24, 0x03	; 3
    11e6:	d6 dc       	rcall	.-1620   	; 0xb94 <ADC_Conversion>
    11e8:	80 93 14 05 	sts	0x0514, r24
    11ec:	82 e0       	ldi	r24, 0x02	; 2
    11ee:	d2 dc       	rcall	.-1628   	; 0xb94 <ADC_Conversion>
    11f0:	80 93 11 05 	sts	0x0511, r24
    11f4:	90 91 14 05 	lds	r25, 0x0514
    11f8:	91 35       	cpi	r25, 0x51	; 81
    11fa:	10 f4       	brcc	.+4      	; 0x1200 <forward_walls+0x74>
    11fc:	81 35       	cpi	r24, 0x51	; 81
    11fe:	58 f0       	brcs	.+22     	; 0x1216 <forward_walls+0x8a>
    1200:	80 91 1b 05 	lds	r24, 0x051B
    1204:	84 36       	cpi	r24, 0x64	; 100
    1206:	38 f4       	brcc	.+14     	; 0x1216 <forward_walls+0x8a>
    1208:	5c dc       	rcall	.-1864   	; 0xac2 <stop>
    120a:	61 e0       	ldi	r22, 0x01	; 1
    120c:	70 e0       	ldi	r23, 0x00	; 0
    120e:	80 e0       	ldi	r24, 0x00	; 0
    1210:	90 e0       	ldi	r25, 0x00	; 0
    1212:	c2 de       	rcall	.-636    	; 0xf98 <forward_wls>
    1214:	2f c0       	rjmp	.+94     	; 0x1274 <forward_walls+0xe8>
    1216:	80 91 1b 05 	lds	r24, 0x051B
    121a:	9d e8       	ldi	r25, 0x8D	; 141
    121c:	98 0f       	add	r25, r24
    121e:	90 31       	cpi	r25, 0x10	; 16
    1220:	68 f4       	brcc	.+26     	; 0x123c <forward_walls+0xb0>
    1222:	f8 01       	movw	r30, r16
    1224:	f0 82       	st	Z, r15
    1226:	f8 82       	st	Y, r15
    1228:	ff ef       	ldi	r31, 0xFF	; 255
    122a:	2f e3       	ldi	r18, 0x3F	; 63
    122c:	82 e0       	ldi	r24, 0x02	; 2
    122e:	f1 50       	subi	r31, 0x01	; 1
    1230:	20 40       	sbci	r18, 0x00	; 0
    1232:	80 40       	sbci	r24, 0x00	; 0
    1234:	e1 f7       	brne	.-8      	; 0x122e <forward_walls+0xa2>
    1236:	00 c0       	rjmp	.+0      	; 0x1238 <forward_walls+0xac>
    1238:	00 00       	nop
    123a:	cf cf       	rjmp	.-98     	; 0x11da <forward_walls+0x4e>
    123c:	83 38       	cpi	r24, 0x83	; 131
    123e:	58 f0       	brcs	.+22     	; 0x1256 <forward_walls+0xca>
    1240:	3a dc       	rcall	.-1932   	; 0xab6 <soft_right>
    1242:	f8 01       	movw	r30, r16
    1244:	e0 82       	st	Z, r14
    1246:	d8 82       	st	Y, r13
    1248:	8c ec       	ldi	r24, 0xCC	; 204
    124a:	9c e1       	ldi	r25, 0x1C	; 28
    124c:	01 97       	sbiw	r24, 0x01	; 1
    124e:	f1 f7       	brne	.-4      	; 0x124c <forward_walls+0xc0>
    1250:	00 c0       	rjmp	.+0      	; 0x1252 <forward_walls+0xc6>
    1252:	00 00       	nop
    1254:	c2 cf       	rjmp	.-124    	; 0x11da <forward_walls+0x4e>
    1256:	81 55       	subi	r24, 0x51	; 81
    1258:	82 32       	cpi	r24, 0x22	; 34
    125a:	08 f0       	brcs	.+2      	; 0x125e <forward_walls+0xd2>
    125c:	be cf       	rjmp	.-132    	; 0x11da <forward_walls+0x4e>
    125e:	2e dc       	rcall	.-1956   	; 0xabc <soft_left>
    1260:	f8 01       	movw	r30, r16
    1262:	d0 82       	st	Z, r13
    1264:	e8 82       	st	Y, r14
    1266:	8c ec       	ldi	r24, 0xCC	; 204
    1268:	9c e1       	ldi	r25, 0x1C	; 28
    126a:	01 97       	sbiw	r24, 0x01	; 1
    126c:	f1 f7       	brne	.-4      	; 0x126a <forward_walls+0xde>
    126e:	00 c0       	rjmp	.+0      	; 0x1270 <forward_walls+0xe4>
    1270:	00 00       	nop
    1272:	b3 cf       	rjmp	.-154    	; 0x11da <forward_walls+0x4e>
    1274:	df 91       	pop	r29
    1276:	cf 91       	pop	r28
    1278:	1f 91       	pop	r17
    127a:	0f 91       	pop	r16
    127c:	ff 90       	pop	r15
    127e:	ef 90       	pop	r14
    1280:	df 90       	pop	r13
    1282:	08 95       	ret

00001284 <right_turn_wls>:
    1284:	0f dc       	rcall	.-2018   	; 0xaa4 <forward>
    1286:	2f ef       	ldi	r18, 0xFF	; 255
    1288:	8f ef       	ldi	r24, 0xFF	; 255
    128a:	98 e0       	ldi	r25, 0x08	; 8
    128c:	21 50       	subi	r18, 0x01	; 1
    128e:	80 40       	sbci	r24, 0x00	; 0
    1290:	90 40       	sbci	r25, 0x00	; 0
    1292:	e1 f7       	brne	.-8      	; 0x128c <right_turn_wls+0x8>
    1294:	00 c0       	rjmp	.+0      	; 0x1296 <right_turn_wls+0x12>
    1296:	00 00       	nop
    1298:	08 dc       	rcall	.-2032   	; 0xaaa <right>
    129a:	2f ef       	ldi	r18, 0xFF	; 255
    129c:	8f ef       	ldi	r24, 0xFF	; 255
    129e:	98 e0       	ldi	r25, 0x08	; 8
    12a0:	21 50       	subi	r18, 0x01	; 1
    12a2:	80 40       	sbci	r24, 0x00	; 0
    12a4:	90 40       	sbci	r25, 0x00	; 0
    12a6:	e1 f7       	brne	.-8      	; 0x12a0 <right_turn_wls+0x1c>
    12a8:	00 c0       	rjmp	.+0      	; 0x12aa <right_turn_wls+0x26>
    12aa:	00 00       	nop
    12ac:	0a dc       	rcall	.-2028   	; 0xac2 <stop>
    12ae:	2f ef       	ldi	r18, 0xFF	; 255
    12b0:	8f e3       	ldi	r24, 0x3F	; 63
    12b2:	92 e0       	ldi	r25, 0x02	; 2
    12b4:	21 50       	subi	r18, 0x01	; 1
    12b6:	80 40       	sbci	r24, 0x00	; 0
    12b8:	90 40       	sbci	r25, 0x00	; 0
    12ba:	e1 f7       	brne	.-8      	; 0x12b4 <right_turn_wls+0x30>
    12bc:	00 c0       	rjmp	.+0      	; 0x12be <right_turn_wls+0x3a>
    12be:	00 00       	nop
    12c0:	f4 db       	rcall	.-2072   	; 0xaaa <right>
    12c2:	84 e6       	ldi	r24, 0x64	; 100
    12c4:	80 93 28 01 	sts	0x0128, r24
    12c8:	80 93 2a 01 	sts	0x012A, r24
    12cc:	83 e0       	ldi	r24, 0x03	; 3
    12ce:	62 dc       	rcall	.-1852   	; 0xb94 <ADC_Conversion>
    12d0:	80 93 14 05 	sts	0x0514, r24
    12d4:	80 35       	cpi	r24, 0x50	; 80
    12d6:	d0 f3       	brcs	.-12     	; 0x12cc <right_turn_wls+0x48>
    12d8:	12 b8       	out	0x02, r1	; 2
    12da:	f3 db       	rcall	.-2074   	; 0xac2 <stop>
    12dc:	2f ef       	ldi	r18, 0xFF	; 255
    12de:	8f ef       	ldi	r24, 0xFF	; 255
    12e0:	98 e0       	ldi	r25, 0x08	; 8
    12e2:	21 50       	subi	r18, 0x01	; 1
    12e4:	80 40       	sbci	r24, 0x00	; 0
    12e6:	90 40       	sbci	r25, 0x00	; 0
    12e8:	e1 f7       	brne	.-8      	; 0x12e2 <right_turn_wls+0x5e>
    12ea:	00 c0       	rjmp	.+0      	; 0x12ec <right_turn_wls+0x68>
    12ec:	00 00       	nop
    12ee:	80 91 42 04 	lds	r24, 0x0442
    12f2:	80 93 28 01 	sts	0x0128, r24
    12f6:	80 91 42 04 	lds	r24, 0x0442
    12fa:	80 93 2a 01 	sts	0x012A, r24
    12fe:	08 95       	ret

00001300 <right_turn_wls_bwall>:
    1300:	d4 db       	rcall	.-2136   	; 0xaaa <right>
    1302:	2f ef       	ldi	r18, 0xFF	; 255
    1304:	8f ef       	ldi	r24, 0xFF	; 255
    1306:	98 e0       	ldi	r25, 0x08	; 8
    1308:	21 50       	subi	r18, 0x01	; 1
    130a:	80 40       	sbci	r24, 0x00	; 0
    130c:	90 40       	sbci	r25, 0x00	; 0
    130e:	e1 f7       	brne	.-8      	; 0x1308 <right_turn_wls_bwall+0x8>
    1310:	00 c0       	rjmp	.+0      	; 0x1312 <right_turn_wls_bwall+0x12>
    1312:	00 00       	nop
    1314:	d6 db       	rcall	.-2132   	; 0xac2 <stop>
    1316:	2f ef       	ldi	r18, 0xFF	; 255
    1318:	8f e3       	ldi	r24, 0x3F	; 63
    131a:	92 e0       	ldi	r25, 0x02	; 2
    131c:	21 50       	subi	r18, 0x01	; 1
    131e:	80 40       	sbci	r24, 0x00	; 0
    1320:	90 40       	sbci	r25, 0x00	; 0
    1322:	e1 f7       	brne	.-8      	; 0x131c <right_turn_wls_bwall+0x1c>
    1324:	00 c0       	rjmp	.+0      	; 0x1326 <right_turn_wls_bwall+0x26>
    1326:	00 00       	nop
    1328:	c0 db       	rcall	.-2176   	; 0xaaa <right>
    132a:	84 e6       	ldi	r24, 0x64	; 100
    132c:	80 93 28 01 	sts	0x0128, r24
    1330:	80 93 2a 01 	sts	0x012A, r24
    1334:	83 e0       	ldi	r24, 0x03	; 3
    1336:	2e dc       	rcall	.-1956   	; 0xb94 <ADC_Conversion>
    1338:	80 93 14 05 	sts	0x0514, r24
    133c:	80 35       	cpi	r24, 0x50	; 80
    133e:	d0 f3       	brcs	.-12     	; 0x1334 <right_turn_wls_bwall+0x34>
    1340:	12 b8       	out	0x02, r1	; 2
    1342:	b3 db       	rcall	.-2202   	; 0xaaa <right>
    1344:	8f ef       	ldi	r24, 0xFF	; 255
    1346:	97 e4       	ldi	r25, 0x47	; 71
    1348:	01 97       	sbiw	r24, 0x01	; 1
    134a:	f1 f7       	brne	.-4      	; 0x1348 <right_turn_wls_bwall+0x48>
    134c:	00 c0       	rjmp	.+0      	; 0x134e <right_turn_wls_bwall+0x4e>
    134e:	00 00       	nop
    1350:	b8 db       	rcall	.-2192   	; 0xac2 <stop>
    1352:	9f ef       	ldi	r25, 0xFF	; 255
    1354:	2f ef       	ldi	r18, 0xFF	; 255
    1356:	88 e0       	ldi	r24, 0x08	; 8
    1358:	91 50       	subi	r25, 0x01	; 1
    135a:	20 40       	sbci	r18, 0x00	; 0
    135c:	80 40       	sbci	r24, 0x00	; 0
    135e:	e1 f7       	brne	.-8      	; 0x1358 <right_turn_wls_bwall+0x58>
    1360:	00 c0       	rjmp	.+0      	; 0x1362 <right_turn_wls_bwall+0x62>
    1362:	00 00       	nop
    1364:	80 91 42 04 	lds	r24, 0x0442
    1368:	80 93 28 01 	sts	0x0128, r24
    136c:	80 91 42 04 	lds	r24, 0x0442
    1370:	80 93 2a 01 	sts	0x012A, r24
    1374:	08 95       	ret

00001376 <left_turn_wls>:
    1376:	96 db       	rcall	.-2260   	; 0xaa4 <forward>
    1378:	2f ef       	ldi	r18, 0xFF	; 255
    137a:	8f e3       	ldi	r24, 0x3F	; 63
    137c:	9b e0       	ldi	r25, 0x0B	; 11
    137e:	21 50       	subi	r18, 0x01	; 1
    1380:	80 40       	sbci	r24, 0x00	; 0
    1382:	90 40       	sbci	r25, 0x00	; 0
    1384:	e1 f7       	brne	.-8      	; 0x137e <left_turn_wls+0x8>
    1386:	00 c0       	rjmp	.+0      	; 0x1388 <left_turn_wls+0x12>
    1388:	00 00       	nop
    138a:	92 db       	rcall	.-2268   	; 0xab0 <left>
    138c:	2f ef       	ldi	r18, 0xFF	; 255
    138e:	8f ef       	ldi	r24, 0xFF	; 255
    1390:	98 e0       	ldi	r25, 0x08	; 8
    1392:	21 50       	subi	r18, 0x01	; 1
    1394:	80 40       	sbci	r24, 0x00	; 0
    1396:	90 40       	sbci	r25, 0x00	; 0
    1398:	e1 f7       	brne	.-8      	; 0x1392 <left_turn_wls+0x1c>
    139a:	00 c0       	rjmp	.+0      	; 0x139c <left_turn_wls+0x26>
    139c:	00 00       	nop
    139e:	91 db       	rcall	.-2270   	; 0xac2 <stop>
    13a0:	2f ef       	ldi	r18, 0xFF	; 255
    13a2:	8f e3       	ldi	r24, 0x3F	; 63
    13a4:	92 e0       	ldi	r25, 0x02	; 2
    13a6:	21 50       	subi	r18, 0x01	; 1
    13a8:	80 40       	sbci	r24, 0x00	; 0
    13aa:	90 40       	sbci	r25, 0x00	; 0
    13ac:	e1 f7       	brne	.-8      	; 0x13a6 <left_turn_wls+0x30>
    13ae:	00 c0       	rjmp	.+0      	; 0x13b0 <left_turn_wls+0x3a>
    13b0:	00 00       	nop
    13b2:	7e db       	rcall	.-2308   	; 0xab0 <left>
    13b4:	84 e6       	ldi	r24, 0x64	; 100
    13b6:	80 93 28 01 	sts	0x0128, r24
    13ba:	80 93 2a 01 	sts	0x012A, r24
    13be:	81 e0       	ldi	r24, 0x01	; 1
    13c0:	e9 db       	rcall	.-2094   	; 0xb94 <ADC_Conversion>
    13c2:	80 93 11 05 	sts	0x0511, r24
    13c6:	80 35       	cpi	r24, 0x50	; 80
    13c8:	d0 f3       	brcs	.-12     	; 0x13be <left_turn_wls+0x48>
    13ca:	12 b8       	out	0x02, r1	; 2
    13cc:	7a db       	rcall	.-2316   	; 0xac2 <stop>
    13ce:	2f ef       	ldi	r18, 0xFF	; 255
    13d0:	8f ef       	ldi	r24, 0xFF	; 255
    13d2:	98 e0       	ldi	r25, 0x08	; 8
    13d4:	21 50       	subi	r18, 0x01	; 1
    13d6:	80 40       	sbci	r24, 0x00	; 0
    13d8:	90 40       	sbci	r25, 0x00	; 0
    13da:	e1 f7       	brne	.-8      	; 0x13d4 <left_turn_wls+0x5e>
    13dc:	00 c0       	rjmp	.+0      	; 0x13de <left_turn_wls+0x68>
    13de:	00 00       	nop
    13e0:	80 91 42 04 	lds	r24, 0x0442
    13e4:	80 93 28 01 	sts	0x0128, r24
    13e8:	80 91 42 04 	lds	r24, 0x0442
    13ec:	80 93 2a 01 	sts	0x012A, r24
    13f0:	08 95       	ret

000013f2 <adc_init>:
}
/* -------------------------------------------------------------INITIALIZATION--------------------------------------------------*/

//Function to Initialize ADC
void adc_init() {
  ADCSRA = 0x00;
    13f2:	ea e7       	ldi	r30, 0x7A	; 122
    13f4:	f0 e0       	ldi	r31, 0x00	; 0
    13f6:	10 82       	st	Z, r1
  ADCSRB = 0x00; //MUX5 = 0
    13f8:	10 92 7b 00 	sts	0x007B, r1
  ADMUX = 0x20; //Vref=5V external --- ADLAR=1 --- MUX4:0 = 0000
    13fc:	80 e2       	ldi	r24, 0x20	; 32
    13fe:	80 93 7c 00 	sts	0x007C, r24
  ACSR = 0x80;
    1402:	80 e8       	ldi	r24, 0x80	; 128
    1404:	80 bf       	out	0x30, r24	; 48
  ADCSRA = 0x86; //ADEN=1 --- ADIE=1 --- ADPS2:0 = 1 1 0
    1406:	86 e8       	ldi	r24, 0x86	; 134
    1408:	80 83       	st	Z, r24
    140a:	08 95       	ret

0000140c <init_devices>:
}

void init_devices(void) {
  cli(); //Clears the global interrupts
    140c:	f8 94       	cli
  port_init();
    140e:	ee da       	rcall	.-2596   	; 0x9ec <port_init>
  adc_init();
    1410:	f0 df       	rcall	.-32     	; 0x13f2 <adc_init>
  timer5_init();
    1412:	a2 da       	rcall	.-2748   	; 0x958 <timer5_init>
  timer1_init();
    1414:	7e da       	rcall	.-2820   	; 0x912 <timer1_init>
  sei(); //Enables the global interrupts
    1416:	78 94       	sei
  lcd_set_4bit(); //These functions need not to be inside interrupt blocked code
    1418:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_set_4bit>
  lcd_init();
    141c:	0c 94 05 01 	jmp	0x20a	; 0x20a <lcd_init>
    1420:	08 95       	ret

00001422 <which_node>:
}
int which_node(int block)
{
	if (block == 1) return b1n;
    1422:	81 30       	cpi	r24, 0x01	; 1
    1424:	91 05       	cpc	r25, r1
    1426:	29 f4       	brne	.+10     	; 0x1432 <which_node+0x10>
    1428:	80 91 59 04 	lds	r24, 0x0459
    142c:	90 91 5a 04 	lds	r25, 0x045A
    1430:	08 95       	ret
	else if (block == 2) return b2n;
    1432:	82 30       	cpi	r24, 0x02	; 2
    1434:	91 05       	cpc	r25, r1
    1436:	29 f4       	brne	.+10     	; 0x1442 <which_node+0x20>
    1438:	80 91 57 04 	lds	r24, 0x0457
    143c:	90 91 58 04 	lds	r25, 0x0458
    1440:	08 95       	ret
	else if (block == 3) return b3n;
    1442:	83 30       	cpi	r24, 0x03	; 3
    1444:	91 05       	cpc	r25, r1
    1446:	29 f4       	brne	.+10     	; 0x1452 <which_node+0x30>
    1448:	80 91 55 04 	lds	r24, 0x0455
    144c:	90 91 56 04 	lds	r25, 0x0456
    1450:	08 95       	ret
	else if (block == 4) return b4n;
    1452:	84 30       	cpi	r24, 0x04	; 4
    1454:	91 05       	cpc	r25, r1
    1456:	29 f4       	brne	.+10     	; 0x1462 <which_node+0x40>
    1458:	80 91 53 04 	lds	r24, 0x0453
    145c:	90 91 54 04 	lds	r25, 0x0454
    1460:	08 95       	ret
	else if (block == 5) return b5n;
    1462:	85 30       	cpi	r24, 0x05	; 5
    1464:	91 05       	cpc	r25, r1
    1466:	29 f4       	brne	.+10     	; 0x1472 <which_node+0x50>
    1468:	80 91 51 04 	lds	r24, 0x0451
    146c:	90 91 52 04 	lds	r25, 0x0452
    1470:	08 95       	ret
	else if (block == 6) return b6n;
    1472:	86 30       	cpi	r24, 0x06	; 6
    1474:	91 05       	cpc	r25, r1
    1476:	29 f4       	brne	.+10     	; 0x1482 <which_node+0x60>
    1478:	80 91 4f 04 	lds	r24, 0x044F
    147c:	90 91 50 04 	lds	r25, 0x0450
    1480:	08 95       	ret
	else if (block == 7) return b7n;
    1482:	87 30       	cpi	r24, 0x07	; 7
    1484:	91 05       	cpc	r25, r1
    1486:	29 f4       	brne	.+10     	; 0x1492 <which_node+0x70>
    1488:	80 91 4d 04 	lds	r24, 0x044D
    148c:	90 91 4e 04 	lds	r25, 0x044E
    1490:	08 95       	ret
	else if (block == 8) return b8n;
    1492:	88 30       	cpi	r24, 0x08	; 8
    1494:	91 05       	cpc	r25, r1
    1496:	29 f4       	brne	.+10     	; 0x14a2 <which_node+0x80>
    1498:	80 91 4b 04 	lds	r24, 0x044B
    149c:	90 91 4c 04 	lds	r25, 0x044C
    14a0:	08 95       	ret
	else if (block == 9) return b9n;
    14a2:	89 30       	cpi	r24, 0x09	; 9
    14a4:	91 05       	cpc	r25, r1
    14a6:	29 f4       	brne	.+10     	; 0x14b2 <which_node+0x90>
    14a8:	80 91 49 04 	lds	r24, 0x0449
    14ac:	90 91 4a 04 	lds	r25, 0x044A
    14b0:	08 95       	ret
	else if (block == 10) return b10n;
    14b2:	8a 30       	cpi	r24, 0x0A	; 10
    14b4:	91 05       	cpc	r25, r1
    14b6:	29 f4       	brne	.+10     	; 0x14c2 <which_node+0xa0>
    14b8:	80 91 47 04 	lds	r24, 0x0447
    14bc:	90 91 48 04 	lds	r25, 0x0448
    14c0:	08 95       	ret
	else if (block == 11) return b11n;
    14c2:	8b 30       	cpi	r24, 0x0B	; 11
    14c4:	91 05       	cpc	r25, r1
    14c6:	29 f4       	brne	.+10     	; 0x14d2 <which_node+0xb0>
    14c8:	80 91 45 04 	lds	r24, 0x0445
    14cc:	90 91 46 04 	lds	r25, 0x0446
    14d0:	08 95       	ret
	else if (block == 12) return b12n;
    14d2:	0c 97       	sbiw	r24, 0x0c	; 12
    14d4:	29 f4       	brne	.+10     	; 0x14e0 <which_node+0xbe>
    14d6:	80 91 43 04 	lds	r24, 0x0443
    14da:	90 91 44 04 	lds	r25, 0x0444
    14de:	08 95       	ret
	return -1;
    14e0:	8f ef       	ldi	r24, 0xFF	; 255
    14e2:	9f ef       	ldi	r25, 0xFF	; 255
}
    14e4:	08 95       	ret

000014e6 <traverse>:
* Logic: uses direction knowledge and the distance array generated by dijkstra to traverse to any node from the current node through shortest path
* Example Call: traverse(path,n,12); //uses direction knowledge and the distance array generated by dijkstra to traverse to any node from the current node through shortest path
*
*/
void traverse(int path[], char face, int u, int *size)
{
    14e6:	3f 92       	push	r3
    14e8:	4f 92       	push	r4
    14ea:	5f 92       	push	r5
    14ec:	6f 92       	push	r6
    14ee:	7f 92       	push	r7
    14f0:	8f 92       	push	r8
    14f2:	9f 92       	push	r9
    14f4:	af 92       	push	r10
    14f6:	bf 92       	push	r11
    14f8:	cf 92       	push	r12
    14fa:	df 92       	push	r13
    14fc:	ef 92       	push	r14
    14fe:	ff 92       	push	r15
    1500:	0f 93       	push	r16
    1502:	1f 93       	push	r17
    1504:	cf 93       	push	r28
    1506:	df 93       	push	r29
    1508:	00 d0       	rcall	.+0      	; 0x150a <traverse+0x24>
    150a:	1f 92       	push	r1
    150c:	cd b7       	in	r28, 0x3d	; 61
    150e:	de b7       	in	r29, 0x3e	; 62
    1510:	b6 2e       	mov	r11, r22
	int ps = *size;
    1512:	d9 01       	movw	r26, r18
    1514:	0d 91       	ld	r16, X+
    1516:	1c 91       	ld	r17, X
	for (int i = 0; i < ps - 1; i++)
    1518:	98 01       	movw	r18, r16
    151a:	21 50       	subi	r18, 0x01	; 1
    151c:	31 09       	sbc	r19, r1
    151e:	12 16       	cp	r1, r18
    1520:	13 06       	cpc	r1, r19
    1522:	0c f0       	brlt	.+2      	; 0x1526 <traverse+0x40>
    1524:	70 c4       	rjmp	.+2272   	; 0x1e06 <traverse+0x920>
    1526:	89 83       	std	Y+1, r24	; 0x01
    1528:	9a 83       	std	Y+2, r25	; 0x02
    152a:	ee 24       	eor	r14, r14
    152c:	e3 94       	inc	r14
    152e:	f1 2c       	mov	r15, r1
    1530:	aa 24       	eor	r10, r10
    1532:	a3 94       	inc	r10
    1534:	91 2c       	mov	r9, r1
    1536:	81 2c       	mov	r8, r1
    1538:	71 2c       	mov	r7, r1
					{
						fdir = 's';
					}
					else if (a == 3)
					{
						fdir = 'w';
    153a:	0f 2e       	mov	r0, r31
    153c:	f7 e7       	ldi	r31, 0x77	; 119
    153e:	6f 2e       	mov	r6, r31
    1540:	f0 2d       	mov	r31, r0
					{
						fdir = 'e';
					}
					else if (a == 2)
					{
						fdir = 's';
    1542:	0f 2e       	mov	r0, r31
    1544:	f3 e7       	ldi	r31, 0x73	; 115
    1546:	5f 2e       	mov	r5, r31
    1548:	f0 2d       	mov	r31, r0
					{
						fdir = 'n';
					}
					else if (a == 1)
					{
						fdir = 'e';
    154a:	0f 2e       	mov	r0, r31
    154c:	f5 e6       	ldi	r31, 0x65	; 101
    154e:	4f 2e       	mov	r4, r31
    1550:	f0 2d       	mov	r31, r0
			{
				if (movement_array[path[i]][a] == path[i + 1])
				{
					if (a == 0)
					{
						fdir = 'n';
    1552:	0f 2e       	mov	r0, r31
    1554:	fe e6       	ldi	r31, 0x6E	; 110
    1556:	3f 2e       	mov	r3, r31
    1558:	f0 2d       	mov	r31, r0
    155a:	e9 81       	ldd	r30, Y+1	; 0x01
    155c:	fa 81       	ldd	r31, Y+2	; 0x02
    155e:	fc 83       	std	Y+4, r31	; 0x04
    1560:	eb 83       	std	Y+3, r30	; 0x03
void traverse(int path[], char face, int u, int *size)
{
	int ps = *size;
	for (int i = 0; i < ps - 1; i++)
	{
		if ((path[i] == 0 && path[i + 1] == 1) || (path[i] == 0 && path[i + 1] == 14))
    1562:	80 81       	ld	r24, Z
    1564:	91 81       	ldd	r25, Z+1	; 0x01
    1566:	00 97       	sbiw	r24, 0x00	; 0
    1568:	09 f0       	breq	.+2      	; 0x156c <traverse+0x86>
    156a:	68 c1       	rjmp	.+720    	; 0x183c <traverse+0x356>
    156c:	82 81       	ldd	r24, Z+2	; 0x02
    156e:	93 81       	ldd	r25, Z+3	; 0x03
    1570:	81 30       	cpi	r24, 0x01	; 1
    1572:	91 05       	cpc	r25, r1
    1574:	19 f0       	breq	.+6      	; 0x157c <traverse+0x96>
    1576:	0e 97       	sbiw	r24, 0x0e	; 14
    1578:	09 f0       	breq	.+2      	; 0x157c <traverse+0x96>
    157a:	d7 c2       	rjmp	.+1454   	; 0x1b2a <traverse+0x644>
*
*/
void traverse(int path[], char face, int u, int *size)
{
	int ps = *size;
	for (int i = 0; i < ps - 1; i++)
    157c:	2a 2d       	mov	r18, r10
    157e:	39 2d       	mov	r19, r9
    1580:	88 2d       	mov	r24, r8
    1582:	97 2d       	mov	r25, r7
    1584:	03 c0       	rjmp	.+6      	; 0x158c <traverse+0xa6>
    1586:	01 96       	adiw	r24, 0x01	; 1
    1588:	2f 5f       	subi	r18, 0xFF	; 255
    158a:	3f 4f       	sbci	r19, 0xFF	; 255
	{
		if ((path[i] == 0 && path[i + 1] == 1) || (path[i] == 0 && path[i + 1] == 14))
		{
			for (int a = 0; a < 4; a++)
			{
				if (movement_array[path[i]][a] == path[i + 1])
    158c:	eb 81       	ldd	r30, Y+3	; 0x03
    158e:	fc 81       	ldd	r31, Y+4	; 0x04
    1590:	a0 81       	ld	r26, Z
    1592:	b1 81       	ldd	r27, Z+1	; 0x01
    1594:	aa 0f       	add	r26, r26
    1596:	bb 1f       	adc	r27, r27
    1598:	aa 0f       	add	r26, r26
    159a:	bb 1f       	adc	r27, r27
    159c:	a8 0f       	add	r26, r24
    159e:	b9 1f       	adc	r27, r25
    15a0:	aa 0f       	add	r26, r26
    15a2:	bb 1f       	adc	r27, r27
    15a4:	aa 5f       	subi	r26, 0xFA	; 250
    15a6:	bd 4f       	sbci	r27, 0xFD	; 253
    15a8:	0d 90       	ld	r0, X+
    15aa:	bc 91       	ld	r27, X
    15ac:	a0 2d       	mov	r26, r0
    15ae:	62 81       	ldd	r22, Z+2	; 0x02
    15b0:	73 81       	ldd	r23, Z+3	; 0x03
    15b2:	a6 17       	cp	r26, r22
    15b4:	b7 07       	cpc	r27, r23
    15b6:	b9 f4       	brne	.+46     	; 0x15e6 <traverse+0x100>
				{
					if (a == 0)
    15b8:	00 97       	sbiw	r24, 0x00	; 0
    15ba:	19 f4       	brne	.+6      	; 0x15c2 <traverse+0xdc>
					{
						fdir = 'n';
    15bc:	30 92 6f 04 	sts	0x046F, r3
    15c0:	e2 cf       	rjmp	.-60     	; 0x1586 <traverse+0xa0>
					}
					else if (a == 1)
    15c2:	81 30       	cpi	r24, 0x01	; 1
    15c4:	91 05       	cpc	r25, r1
    15c6:	19 f4       	brne	.+6      	; 0x15ce <traverse+0xe8>
					{
						fdir = 'e';
    15c8:	40 92 6f 04 	sts	0x046F, r4
    15cc:	dc cf       	rjmp	.-72     	; 0x1586 <traverse+0xa0>
					}
					else if (a == 2)
    15ce:	82 30       	cpi	r24, 0x02	; 2
    15d0:	91 05       	cpc	r25, r1
    15d2:	19 f4       	brne	.+6      	; 0x15da <traverse+0xf4>
					{
						fdir = 's';
    15d4:	50 92 6f 04 	sts	0x046F, r5
    15d8:	d6 cf       	rjmp	.-84     	; 0x1586 <traverse+0xa0>
					}
					else if (a == 3)
    15da:	83 30       	cpi	r24, 0x03	; 3
    15dc:	91 05       	cpc	r25, r1
    15de:	19 f4       	brne	.+6      	; 0x15e6 <traverse+0x100>
					{
						fdir = 'w';
    15e0:	60 92 6f 04 	sts	0x046F, r6
    15e4:	03 c0       	rjmp	.+6      	; 0x15ec <traverse+0x106>
	int ps = *size;
	for (int i = 0; i < ps - 1; i++)
	{
		if ((path[i] == 0 && path[i + 1] == 1) || (path[i] == 0 && path[i + 1] == 14))
		{
			for (int a = 0; a < 4; a++)
    15e6:	24 30       	cpi	r18, 0x04	; 4
    15e8:	31 05       	cpc	r19, r1
    15ea:	6c f2       	brlt	.-102    	; 0x1586 <traverse+0xa0>
					{
						fdir = 'w';
					}
				}
			}
			if (face == 'n' && fdir == 'n')
    15ec:	fe e6       	ldi	r31, 0x6E	; 110
    15ee:	bf 12       	cpse	r11, r31
    15f0:	47 c0       	rjmp	.+142    	; 0x1680 <traverse+0x19a>
    15f2:	80 91 6f 04 	lds	r24, 0x046F
    15f6:	8e 36       	cpi	r24, 0x6E	; 110
    15f8:	71 f4       	brne	.+28     	; 0x1616 <traverse+0x130>
			{
				forward_wls(2,1);
    15fa:	6a 2d       	mov	r22, r10
    15fc:	79 2d       	mov	r23, r9
    15fe:	82 e0       	ldi	r24, 0x02	; 2
    1600:	90 e0       	ldi	r25, 0x00	; 0
    1602:	ca dc       	rcall	.-1644   	; 0xf98 <forward_wls>
				face = fdir;
    1604:	b0 90 6f 04 	lds	r11, 0x046F

void lcd_cursor (char row, char column)
{
	switch (row) {
		case 1: lcd_wr_command (0x80 + column - 1); break;
		case 2: lcd_wr_command (0xc0 + column - 1); break;
    1608:	86 ec       	ldi	r24, 0xC6	; 198
    160a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    160e:	8b 2d       	mov	r24, r11
    1610:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1614:	ec c3       	rjmp	.+2008   	; 0x1dee <traverse+0x908>
			}
			else if (face == 'n' && fdir == 'e')
    1616:	85 36       	cpi	r24, 0x65	; 101
    1618:	79 f4       	brne	.+30     	; 0x1638 <traverse+0x152>
			{
				right_turn_wls();
    161a:	34 de       	rcall	.-920    	; 0x1284 <right_turn_wls>
				forward_wls(2,1);
    161c:	6a 2d       	mov	r22, r10
    161e:	79 2d       	mov	r23, r9
    1620:	82 e0       	ldi	r24, 0x02	; 2
    1622:	90 e0       	ldi	r25, 0x00	; 0
    1624:	b9 dc       	rcall	.-1678   	; 0xf98 <forward_wls>
				face = fdir;
    1626:	b0 90 6f 04 	lds	r11, 0x046F
    162a:	86 ec       	ldi	r24, 0xC6	; 198
    162c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1630:	8b 2d       	mov	r24, r11
    1632:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1636:	db c3       	rjmp	.+1974   	; 0x1dee <traverse+0x908>
			}
			else if (face == 'n' && fdir == 's')
    1638:	83 37       	cpi	r24, 0x73	; 115
    163a:	81 f4       	brne	.+32     	; 0x165c <traverse+0x176>
			{
				right_turn_wls();
    163c:	23 de       	rcall	.-954    	; 0x1284 <right_turn_wls>
				right_turn_wls();
    163e:	22 de       	rcall	.-956    	; 0x1284 <right_turn_wls>
				forward_wls(2,1);
    1640:	6a 2d       	mov	r22, r10
    1642:	79 2d       	mov	r23, r9
    1644:	82 e0       	ldi	r24, 0x02	; 2
    1646:	90 e0       	ldi	r25, 0x00	; 0
    1648:	a7 dc       	rcall	.-1714   	; 0xf98 <forward_wls>
				face = fdir;
    164a:	b0 90 6f 04 	lds	r11, 0x046F
    164e:	86 ec       	ldi	r24, 0xC6	; 198
    1650:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1654:	8b 2d       	mov	r24, r11
    1656:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    165a:	c9 c3       	rjmp	.+1938   	; 0x1dee <traverse+0x908>
			}
			else if (face == 'n' && fdir == 'w')
    165c:	87 37       	cpi	r24, 0x77	; 119
    165e:	09 f0       	breq	.+2      	; 0x1662 <traverse+0x17c>
    1660:	a3 c0       	rjmp	.+326    	; 0x17a8 <traverse+0x2c2>
			{
				left_turn_wls();
    1662:	89 de       	rcall	.-750    	; 0x1376 <left_turn_wls>
				forward_wls(2,1);
    1664:	6a 2d       	mov	r22, r10
    1666:	79 2d       	mov	r23, r9
    1668:	82 e0       	ldi	r24, 0x02	; 2
    166a:	90 e0       	ldi	r25, 0x00	; 0
    166c:	95 dc       	rcall	.-1750   	; 0xf98 <forward_wls>
				face = fdir;
    166e:	b0 90 6f 04 	lds	r11, 0x046F
    1672:	86 ec       	ldi	r24, 0xC6	; 198
    1674:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1678:	8b 2d       	mov	r24, r11
    167a:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    167e:	b7 c3       	rjmp	.+1902   	; 0x1dee <traverse+0x908>
			}
			else if (face == 'e' && fdir == 'e')
    1680:	85 e6       	ldi	r24, 0x65	; 101
    1682:	b8 12       	cpse	r11, r24
    1684:	47 c0       	rjmp	.+142    	; 0x1714 <traverse+0x22e>
    1686:	80 91 6f 04 	lds	r24, 0x046F
    168a:	85 36       	cpi	r24, 0x65	; 101
    168c:	71 f4       	brne	.+28     	; 0x16aa <traverse+0x1c4>
			{
				forward_wls(2,1);
    168e:	6a 2d       	mov	r22, r10
    1690:	79 2d       	mov	r23, r9
    1692:	82 e0       	ldi	r24, 0x02	; 2
    1694:	90 e0       	ldi	r25, 0x00	; 0
    1696:	80 dc       	rcall	.-1792   	; 0xf98 <forward_wls>
				face = fdir;
    1698:	b0 90 6f 04 	lds	r11, 0x046F
    169c:	86 ec       	ldi	r24, 0xC6	; 198
    169e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    16a2:	8b 2d       	mov	r24, r11
    16a4:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    16a8:	a2 c3       	rjmp	.+1860   	; 0x1dee <traverse+0x908>
			}
			else if (face == 'e' && fdir == 's')
    16aa:	83 37       	cpi	r24, 0x73	; 115
    16ac:	79 f4       	brne	.+30     	; 0x16cc <traverse+0x1e6>
			{
				right_turn_wls();
    16ae:	ea dd       	rcall	.-1068   	; 0x1284 <right_turn_wls>
				forward_wls(2,1);
    16b0:	6a 2d       	mov	r22, r10
    16b2:	79 2d       	mov	r23, r9
    16b4:	82 e0       	ldi	r24, 0x02	; 2
    16b6:	90 e0       	ldi	r25, 0x00	; 0
    16b8:	6f dc       	rcall	.-1826   	; 0xf98 <forward_wls>
				face = fdir;
    16ba:	b0 90 6f 04 	lds	r11, 0x046F
    16be:	86 ec       	ldi	r24, 0xC6	; 198
    16c0:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    16c4:	8b 2d       	mov	r24, r11
    16c6:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    16ca:	91 c3       	rjmp	.+1826   	; 0x1dee <traverse+0x908>
			}
			else if (face == 'e' && fdir == 'w')
    16cc:	87 37       	cpi	r24, 0x77	; 119
    16ce:	81 f4       	brne	.+32     	; 0x16f0 <traverse+0x20a>
			{
				right_turn_wls();
    16d0:	d9 dd       	rcall	.-1102   	; 0x1284 <right_turn_wls>
				right_turn_wls();
    16d2:	d8 dd       	rcall	.-1104   	; 0x1284 <right_turn_wls>
				forward_wls(2,1);
    16d4:	6a 2d       	mov	r22, r10
    16d6:	79 2d       	mov	r23, r9
    16d8:	82 e0       	ldi	r24, 0x02	; 2
    16da:	90 e0       	ldi	r25, 0x00	; 0
    16dc:	5d dc       	rcall	.-1862   	; 0xf98 <forward_wls>
				face = fdir;
    16de:	b0 90 6f 04 	lds	r11, 0x046F
    16e2:	86 ec       	ldi	r24, 0xC6	; 198
    16e4:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    16e8:	8b 2d       	mov	r24, r11
    16ea:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    16ee:	7f c3       	rjmp	.+1790   	; 0x1dee <traverse+0x908>
			}
			else if (face == 'e' && fdir == 'n')
    16f0:	8e 36       	cpi	r24, 0x6E	; 110
    16f2:	09 f0       	breq	.+2      	; 0x16f6 <traverse+0x210>
    16f4:	7c c3       	rjmp	.+1784   	; 0x1dee <traverse+0x908>
			{
				left_turn_wls();
    16f6:	3f de       	rcall	.-898    	; 0x1376 <left_turn_wls>
				forward_wls(2,1);
    16f8:	6a 2d       	mov	r22, r10
    16fa:	79 2d       	mov	r23, r9
    16fc:	82 e0       	ldi	r24, 0x02	; 2
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	4b dc       	rcall	.-1898   	; 0xf98 <forward_wls>
				face = fdir;
    1702:	b0 90 6f 04 	lds	r11, 0x046F
    1706:	86 ec       	ldi	r24, 0xC6	; 198
    1708:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    170c:	8b 2d       	mov	r24, r11
    170e:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1712:	6d c3       	rjmp	.+1754   	; 0x1dee <traverse+0x908>
			}
			else if (face == 's' && fdir == 's')
    1714:	93 e7       	ldi	r25, 0x73	; 115
    1716:	b9 12       	cpse	r11, r25
    1718:	47 c0       	rjmp	.+142    	; 0x17a8 <traverse+0x2c2>
    171a:	80 91 6f 04 	lds	r24, 0x046F
    171e:	83 37       	cpi	r24, 0x73	; 115
    1720:	71 f4       	brne	.+28     	; 0x173e <traverse+0x258>
			{
				forward_wls(2,1);
    1722:	6a 2d       	mov	r22, r10
    1724:	79 2d       	mov	r23, r9
    1726:	82 e0       	ldi	r24, 0x02	; 2
    1728:	90 e0       	ldi	r25, 0x00	; 0
    172a:	36 dc       	rcall	.-1940   	; 0xf98 <forward_wls>
				face = fdir;
    172c:	b0 90 6f 04 	lds	r11, 0x046F
    1730:	86 ec       	ldi	r24, 0xC6	; 198
    1732:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1736:	8b 2d       	mov	r24, r11
    1738:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    173c:	58 c3       	rjmp	.+1712   	; 0x1dee <traverse+0x908>
			}
			else if (face == 's' && fdir == 'w')
    173e:	87 37       	cpi	r24, 0x77	; 119
    1740:	79 f4       	brne	.+30     	; 0x1760 <traverse+0x27a>
			{
				right_turn_wls();
    1742:	a0 dd       	rcall	.-1216   	; 0x1284 <right_turn_wls>
				forward_wls(2,1);
    1744:	6a 2d       	mov	r22, r10
    1746:	79 2d       	mov	r23, r9
    1748:	82 e0       	ldi	r24, 0x02	; 2
    174a:	90 e0       	ldi	r25, 0x00	; 0
    174c:	25 dc       	rcall	.-1974   	; 0xf98 <forward_wls>
				face = fdir;
    174e:	b0 90 6f 04 	lds	r11, 0x046F
    1752:	86 ec       	ldi	r24, 0xC6	; 198
    1754:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1758:	8b 2d       	mov	r24, r11
    175a:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    175e:	47 c3       	rjmp	.+1678   	; 0x1dee <traverse+0x908>
			}
			else if (face == 's' && fdir == 'n')
    1760:	8e 36       	cpi	r24, 0x6E	; 110
    1762:	81 f4       	brne	.+32     	; 0x1784 <traverse+0x29e>
			{
				right_turn_wls();
    1764:	8f dd       	rcall	.-1250   	; 0x1284 <right_turn_wls>
				right_turn_wls();
    1766:	8e dd       	rcall	.-1252   	; 0x1284 <right_turn_wls>
				forward_wls(2,1);
    1768:	6a 2d       	mov	r22, r10
    176a:	79 2d       	mov	r23, r9
    176c:	82 e0       	ldi	r24, 0x02	; 2
    176e:	90 e0       	ldi	r25, 0x00	; 0
    1770:	13 dc       	rcall	.-2010   	; 0xf98 <forward_wls>
				face = fdir;
    1772:	b0 90 6f 04 	lds	r11, 0x046F
    1776:	86 ec       	ldi	r24, 0xC6	; 198
    1778:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    177c:	8b 2d       	mov	r24, r11
    177e:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1782:	35 c3       	rjmp	.+1642   	; 0x1dee <traverse+0x908>
			}
			else if (face == 's' && fdir == 'e')
    1784:	85 36       	cpi	r24, 0x65	; 101
    1786:	09 f0       	breq	.+2      	; 0x178a <traverse+0x2a4>
    1788:	32 c3       	rjmp	.+1636   	; 0x1dee <traverse+0x908>
			{
				left_turn_wls();
    178a:	f5 dd       	rcall	.-1046   	; 0x1376 <left_turn_wls>
				forward_wls(2,1);
    178c:	6a 2d       	mov	r22, r10
    178e:	79 2d       	mov	r23, r9
    1790:	82 e0       	ldi	r24, 0x02	; 2
    1792:	90 e0       	ldi	r25, 0x00	; 0
    1794:	01 dc       	rcall	.-2046   	; 0xf98 <forward_wls>
				face = fdir;
    1796:	b0 90 6f 04 	lds	r11, 0x046F
    179a:	86 ec       	ldi	r24, 0xC6	; 198
    179c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    17a0:	8b 2d       	mov	r24, r11
    17a2:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    17a6:	23 c3       	rjmp	.+1606   	; 0x1dee <traverse+0x908>
			}
			else if (face == 'w' && fdir == 'w')
    17a8:	a7 e7       	ldi	r26, 0x77	; 119
    17aa:	ba 12       	cpse	r11, r26
    17ac:	20 c3       	rjmp	.+1600   	; 0x1dee <traverse+0x908>
    17ae:	80 91 6f 04 	lds	r24, 0x046F
    17b2:	87 37       	cpi	r24, 0x77	; 119
    17b4:	71 f4       	brne	.+28     	; 0x17d2 <traverse+0x2ec>
			{
				forward_wls(2,1);
    17b6:	6a 2d       	mov	r22, r10
    17b8:	79 2d       	mov	r23, r9
    17ba:	82 e0       	ldi	r24, 0x02	; 2
    17bc:	90 e0       	ldi	r25, 0x00	; 0
    17be:	ec db       	rcall	.-2088   	; 0xf98 <forward_wls>
				face = fdir;
    17c0:	b0 90 6f 04 	lds	r11, 0x046F
    17c4:	86 ec       	ldi	r24, 0xC6	; 198
    17c6:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    17ca:	8b 2d       	mov	r24, r11
    17cc:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    17d0:	0e c3       	rjmp	.+1564   	; 0x1dee <traverse+0x908>
			}
			else if (face == 'w' && fdir == 'n')
    17d2:	8e 36       	cpi	r24, 0x6E	; 110
    17d4:	79 f4       	brne	.+30     	; 0x17f4 <traverse+0x30e>
			{
				right_turn_wls();
    17d6:	56 dd       	rcall	.-1364   	; 0x1284 <right_turn_wls>
				forward_wls(2,1);
    17d8:	6a 2d       	mov	r22, r10
    17da:	79 2d       	mov	r23, r9
    17dc:	82 e0       	ldi	r24, 0x02	; 2
    17de:	90 e0       	ldi	r25, 0x00	; 0
    17e0:	db db       	rcall	.-2122   	; 0xf98 <forward_wls>
				face = fdir;
    17e2:	b0 90 6f 04 	lds	r11, 0x046F
    17e6:	86 ec       	ldi	r24, 0xC6	; 198
    17e8:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    17ec:	8b 2d       	mov	r24, r11
    17ee:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    17f2:	fd c2       	rjmp	.+1530   	; 0x1dee <traverse+0x908>
			}
			else if (face == 'w' && fdir == 'e')
    17f4:	85 36       	cpi	r24, 0x65	; 101
    17f6:	81 f4       	brne	.+32     	; 0x1818 <traverse+0x332>
			{
				right_turn_wls();
    17f8:	45 dd       	rcall	.-1398   	; 0x1284 <right_turn_wls>
				right_turn_wls();
    17fa:	44 dd       	rcall	.-1400   	; 0x1284 <right_turn_wls>
				forward_wls(2,1);
    17fc:	6a 2d       	mov	r22, r10
    17fe:	79 2d       	mov	r23, r9
    1800:	82 e0       	ldi	r24, 0x02	; 2
    1802:	90 e0       	ldi	r25, 0x00	; 0
    1804:	c9 db       	rcall	.-2158   	; 0xf98 <forward_wls>
				face = fdir;
    1806:	b0 90 6f 04 	lds	r11, 0x046F
    180a:	86 ec       	ldi	r24, 0xC6	; 198
    180c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1810:	8b 2d       	mov	r24, r11
    1812:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1816:	eb c2       	rjmp	.+1494   	; 0x1dee <traverse+0x908>
			}
			else if (face == 'w' && fdir == 's')
    1818:	83 37       	cpi	r24, 0x73	; 115
    181a:	09 f0       	breq	.+2      	; 0x181e <traverse+0x338>
    181c:	e8 c2       	rjmp	.+1488   	; 0x1dee <traverse+0x908>
			{
				left_turn_wls();
    181e:	ab dd       	rcall	.-1194   	; 0x1376 <left_turn_wls>
				forward_wls(2,1);
    1820:	6a 2d       	mov	r22, r10
    1822:	79 2d       	mov	r23, r9
    1824:	82 e0       	ldi	r24, 0x02	; 2
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	b7 db       	rcall	.-2194   	; 0xf98 <forward_wls>
				face = fdir;
    182a:	b0 90 6f 04 	lds	r11, 0x046F
    182e:	86 ec       	ldi	r24, 0xC6	; 198
    1830:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1834:	8b 2d       	mov	r24, r11
    1836:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    183a:	d9 c2       	rjmp	.+1458   	; 0x1dee <traverse+0x908>
			}
		}
		else if ((path[i] == 2 && path[i + 1] == 13) || (path[i] == 13 && path[i + 1] == 2))
    183c:	82 30       	cpi	r24, 0x02	; 2
    183e:	91 05       	cpc	r25, r1
    1840:	41 f4       	brne	.+16     	; 0x1852 <traverse+0x36c>
    1842:	eb 81       	ldd	r30, Y+3	; 0x03
    1844:	fc 81       	ldd	r31, Y+4	; 0x04
    1846:	82 81       	ldd	r24, Z+2	; 0x02
    1848:	93 81       	ldd	r25, Z+3	; 0x03
    184a:	0d 97       	sbiw	r24, 0x0d	; 13
    184c:	09 f0       	breq	.+2      	; 0x1850 <traverse+0x36a>
    184e:	6d c1       	rjmp	.+730    	; 0x1b2a <traverse+0x644>
    1850:	0c c0       	rjmp	.+24     	; 0x186a <traverse+0x384>
    1852:	0d 97       	sbiw	r24, 0x0d	; 13
    1854:	09 f0       	breq	.+2      	; 0x1858 <traverse+0x372>
    1856:	69 c1       	rjmp	.+722    	; 0x1b2a <traverse+0x644>
    1858:	ab 81       	ldd	r26, Y+3	; 0x03
    185a:	bc 81       	ldd	r27, Y+4	; 0x04
    185c:	12 96       	adiw	r26, 0x02	; 2
    185e:	8d 91       	ld	r24, X+
    1860:	9c 91       	ld	r25, X
    1862:	13 97       	sbiw	r26, 0x03	; 3
    1864:	02 97       	sbiw	r24, 0x02	; 2
    1866:	09 f0       	breq	.+2      	; 0x186a <traverse+0x384>
    1868:	60 c1       	rjmp	.+704    	; 0x1b2a <traverse+0x644>
*
*/
void traverse(int path[], char face, int u, int *size)
{
	int ps = *size;
	for (int i = 0; i < ps - 1; i++)
    186a:	2a 2d       	mov	r18, r10
    186c:	39 2d       	mov	r19, r9
    186e:	88 2d       	mov	r24, r8
    1870:	97 2d       	mov	r25, r7
    1872:	03 c0       	rjmp	.+6      	; 0x187a <traverse+0x394>
    1874:	01 96       	adiw	r24, 0x01	; 1
    1876:	2f 5f       	subi	r18, 0xFF	; 255
    1878:	3f 4f       	sbci	r19, 0xFF	; 255
		}
		else if ((path[i] == 2 && path[i + 1] == 13) || (path[i] == 13 && path[i + 1] == 2))
		{
			for (int a = 0; a < 4; a++)
			{
				if (movement_array[path[i]][a] == path[i + 1])
    187a:	eb 81       	ldd	r30, Y+3	; 0x03
    187c:	fc 81       	ldd	r31, Y+4	; 0x04
    187e:	a0 81       	ld	r26, Z
    1880:	b1 81       	ldd	r27, Z+1	; 0x01
    1882:	aa 0f       	add	r26, r26
    1884:	bb 1f       	adc	r27, r27
    1886:	aa 0f       	add	r26, r26
    1888:	bb 1f       	adc	r27, r27
    188a:	a8 0f       	add	r26, r24
    188c:	b9 1f       	adc	r27, r25
    188e:	aa 0f       	add	r26, r26
    1890:	bb 1f       	adc	r27, r27
    1892:	aa 5f       	subi	r26, 0xFA	; 250
    1894:	bd 4f       	sbci	r27, 0xFD	; 253
    1896:	0d 90       	ld	r0, X+
    1898:	bc 91       	ld	r27, X
    189a:	a0 2d       	mov	r26, r0
    189c:	62 81       	ldd	r22, Z+2	; 0x02
    189e:	73 81       	ldd	r23, Z+3	; 0x03
    18a0:	a6 17       	cp	r26, r22
    18a2:	b7 07       	cpc	r27, r23
    18a4:	b9 f4       	brne	.+46     	; 0x18d4 <traverse+0x3ee>
				{
					if (a == 0)
    18a6:	00 97       	sbiw	r24, 0x00	; 0
    18a8:	19 f4       	brne	.+6      	; 0x18b0 <traverse+0x3ca>
					{
						fdir = 'n';
    18aa:	30 92 6f 04 	sts	0x046F, r3
    18ae:	e2 cf       	rjmp	.-60     	; 0x1874 <traverse+0x38e>
					}
					else if (a == 1)
    18b0:	81 30       	cpi	r24, 0x01	; 1
    18b2:	91 05       	cpc	r25, r1
    18b4:	19 f4       	brne	.+6      	; 0x18bc <traverse+0x3d6>
					{
						fdir = 'e';
    18b6:	40 92 6f 04 	sts	0x046F, r4
    18ba:	dc cf       	rjmp	.-72     	; 0x1874 <traverse+0x38e>
					}
					else if (a == 2)
    18bc:	82 30       	cpi	r24, 0x02	; 2
    18be:	91 05       	cpc	r25, r1
    18c0:	19 f4       	brne	.+6      	; 0x18c8 <traverse+0x3e2>
					{
						fdir = 's';
    18c2:	50 92 6f 04 	sts	0x046F, r5
    18c6:	d6 cf       	rjmp	.-84     	; 0x1874 <traverse+0x38e>
					}
					else if (a == 3)
    18c8:	83 30       	cpi	r24, 0x03	; 3
    18ca:	91 05       	cpc	r25, r1
    18cc:	19 f4       	brne	.+6      	; 0x18d4 <traverse+0x3ee>
					{
						fdir = 'w';
    18ce:	60 92 6f 04 	sts	0x046F, r6
    18d2:	03 c0       	rjmp	.+6      	; 0x18da <traverse+0x3f4>
				lcd_wr_char(face);
			}
		}
		else if ((path[i] == 2 && path[i + 1] == 13) || (path[i] == 13 && path[i + 1] == 2))
		{
			for (int a = 0; a < 4; a++)
    18d4:	24 30       	cpi	r18, 0x04	; 4
    18d6:	31 05       	cpc	r19, r1
    18d8:	6c f2       	brlt	.-102    	; 0x1874 <traverse+0x38e>
					{
						fdir = 'w';
					}
				}
			}
			if (face == 'n' && fdir == 'n')
    18da:	fe e6       	ldi	r31, 0x6E	; 110
    18dc:	bf 12       	cpse	r11, r31
    18de:	47 c0       	rjmp	.+142    	; 0x196e <traverse+0x488>
    18e0:	80 91 6f 04 	lds	r24, 0x046F
    18e4:	8e 36       	cpi	r24, 0x6E	; 110
    18e6:	71 f4       	brne	.+28     	; 0x1904 <traverse+0x41e>
			{
				forward_wls(1,1);
    18e8:	6a 2d       	mov	r22, r10
    18ea:	79 2d       	mov	r23, r9
    18ec:	8a 2d       	mov	r24, r10
    18ee:	99 2d       	mov	r25, r9
    18f0:	53 db       	rcall	.-2394   	; 0xf98 <forward_wls>
				face = fdir;
    18f2:	b0 90 6f 04 	lds	r11, 0x046F
    18f6:	86 ec       	ldi	r24, 0xC6	; 198
    18f8:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    18fc:	8b 2d       	mov	r24, r11
    18fe:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1902:	75 c2       	rjmp	.+1258   	; 0x1dee <traverse+0x908>
			}
			else if (face == 'n' && fdir == 'e')
    1904:	85 36       	cpi	r24, 0x65	; 101
    1906:	79 f4       	brne	.+30     	; 0x1926 <traverse+0x440>
			{
				right_turn_wls();
    1908:	bd dc       	rcall	.-1670   	; 0x1284 <right_turn_wls>
				forward_wls(1,1);
    190a:	6a 2d       	mov	r22, r10
    190c:	79 2d       	mov	r23, r9
    190e:	8a 2d       	mov	r24, r10
    1910:	99 2d       	mov	r25, r9
    1912:	42 db       	rcall	.-2428   	; 0xf98 <forward_wls>
				face = fdir;
    1914:	b0 90 6f 04 	lds	r11, 0x046F
    1918:	86 ec       	ldi	r24, 0xC6	; 198
    191a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    191e:	8b 2d       	mov	r24, r11
    1920:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1924:	64 c2       	rjmp	.+1224   	; 0x1dee <traverse+0x908>
			}
			else if (face == 'n' && fdir == 's')
    1926:	83 37       	cpi	r24, 0x73	; 115
    1928:	81 f4       	brne	.+32     	; 0x194a <traverse+0x464>
			{
				right_turn_wls();
    192a:	ac dc       	rcall	.-1704   	; 0x1284 <right_turn_wls>
				right_turn_wls();
    192c:	ab dc       	rcall	.-1706   	; 0x1284 <right_turn_wls>
				forward_wls(1,1);
    192e:	6a 2d       	mov	r22, r10
    1930:	79 2d       	mov	r23, r9
    1932:	8a 2d       	mov	r24, r10
    1934:	99 2d       	mov	r25, r9
    1936:	30 db       	rcall	.-2464   	; 0xf98 <forward_wls>
				face = fdir;
    1938:	b0 90 6f 04 	lds	r11, 0x046F
    193c:	86 ec       	ldi	r24, 0xC6	; 198
    193e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1942:	8b 2d       	mov	r24, r11
    1944:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1948:	52 c2       	rjmp	.+1188   	; 0x1dee <traverse+0x908>
			}
			else if (face == 'n' && fdir == 'w')
    194a:	87 37       	cpi	r24, 0x77	; 119
    194c:	09 f0       	breq	.+2      	; 0x1950 <traverse+0x46a>
    194e:	a3 c0       	rjmp	.+326    	; 0x1a96 <traverse+0x5b0>
			{
				left_turn_wls();
    1950:	12 dd       	rcall	.-1500   	; 0x1376 <left_turn_wls>
				forward_wls(1,1);
    1952:	6a 2d       	mov	r22, r10
    1954:	79 2d       	mov	r23, r9
    1956:	8a 2d       	mov	r24, r10
    1958:	99 2d       	mov	r25, r9
    195a:	1e db       	rcall	.-2500   	; 0xf98 <forward_wls>
				face = fdir;
    195c:	b0 90 6f 04 	lds	r11, 0x046F
    1960:	86 ec       	ldi	r24, 0xC6	; 198
    1962:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1966:	8b 2d       	mov	r24, r11
    1968:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    196c:	40 c2       	rjmp	.+1152   	; 0x1dee <traverse+0x908>
			}
			else if (face == 'e' && fdir == 'e')
    196e:	85 e6       	ldi	r24, 0x65	; 101
    1970:	b8 12       	cpse	r11, r24
    1972:	47 c0       	rjmp	.+142    	; 0x1a02 <traverse+0x51c>
    1974:	80 91 6f 04 	lds	r24, 0x046F
    1978:	85 36       	cpi	r24, 0x65	; 101
    197a:	71 f4       	brne	.+28     	; 0x1998 <traverse+0x4b2>
			{
				forward_wls(1,1);
    197c:	6a 2d       	mov	r22, r10
    197e:	79 2d       	mov	r23, r9
    1980:	8a 2d       	mov	r24, r10
    1982:	99 2d       	mov	r25, r9
    1984:	09 db       	rcall	.-2542   	; 0xf98 <forward_wls>
				face = fdir;
    1986:	b0 90 6f 04 	lds	r11, 0x046F
    198a:	86 ec       	ldi	r24, 0xC6	; 198
    198c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1990:	8b 2d       	mov	r24, r11
    1992:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1996:	2b c2       	rjmp	.+1110   	; 0x1dee <traverse+0x908>
			}
			else if (face == 'e' && fdir == 's')
    1998:	83 37       	cpi	r24, 0x73	; 115
    199a:	79 f4       	brne	.+30     	; 0x19ba <traverse+0x4d4>
			{
				right_turn_wls();
    199c:	73 dc       	rcall	.-1818   	; 0x1284 <right_turn_wls>
				forward_wls(1,1);
    199e:	6a 2d       	mov	r22, r10
    19a0:	79 2d       	mov	r23, r9
    19a2:	8a 2d       	mov	r24, r10
    19a4:	99 2d       	mov	r25, r9
    19a6:	f8 da       	rcall	.-2576   	; 0xf98 <forward_wls>
				face = fdir;
    19a8:	b0 90 6f 04 	lds	r11, 0x046F
    19ac:	86 ec       	ldi	r24, 0xC6	; 198
    19ae:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    19b2:	8b 2d       	mov	r24, r11
    19b4:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    19b8:	1a c2       	rjmp	.+1076   	; 0x1dee <traverse+0x908>
			}
			else if (face == 'e' && fdir == 'w')
    19ba:	87 37       	cpi	r24, 0x77	; 119
    19bc:	81 f4       	brne	.+32     	; 0x19de <traverse+0x4f8>
			{
				right_turn_wls();
    19be:	62 dc       	rcall	.-1852   	; 0x1284 <right_turn_wls>
				right_turn_wls();
    19c0:	61 dc       	rcall	.-1854   	; 0x1284 <right_turn_wls>
				forward_wls(1,1);
    19c2:	6a 2d       	mov	r22, r10
    19c4:	79 2d       	mov	r23, r9
    19c6:	8a 2d       	mov	r24, r10
    19c8:	99 2d       	mov	r25, r9
    19ca:	e6 da       	rcall	.-2612   	; 0xf98 <forward_wls>
				face = fdir;
    19cc:	b0 90 6f 04 	lds	r11, 0x046F
    19d0:	86 ec       	ldi	r24, 0xC6	; 198
    19d2:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    19d6:	8b 2d       	mov	r24, r11
    19d8:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    19dc:	08 c2       	rjmp	.+1040   	; 0x1dee <traverse+0x908>
			}
			else if (face == 'e' && fdir == 'n')
    19de:	8e 36       	cpi	r24, 0x6E	; 110
    19e0:	09 f0       	breq	.+2      	; 0x19e4 <traverse+0x4fe>
    19e2:	05 c2       	rjmp	.+1034   	; 0x1dee <traverse+0x908>
			{
				left_turn_wls();
    19e4:	c8 dc       	rcall	.-1648   	; 0x1376 <left_turn_wls>
				forward_wls(1,1);
    19e6:	6a 2d       	mov	r22, r10
    19e8:	79 2d       	mov	r23, r9
    19ea:	8a 2d       	mov	r24, r10
    19ec:	99 2d       	mov	r25, r9
    19ee:	d4 da       	rcall	.-2648   	; 0xf98 <forward_wls>
				face = fdir;
    19f0:	b0 90 6f 04 	lds	r11, 0x046F
    19f4:	86 ec       	ldi	r24, 0xC6	; 198
    19f6:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    19fa:	8b 2d       	mov	r24, r11
    19fc:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1a00:	f6 c1       	rjmp	.+1004   	; 0x1dee <traverse+0x908>
			}
			else if (face == 's' && fdir == 's')
    1a02:	93 e7       	ldi	r25, 0x73	; 115
    1a04:	b9 12       	cpse	r11, r25
    1a06:	47 c0       	rjmp	.+142    	; 0x1a96 <traverse+0x5b0>
    1a08:	80 91 6f 04 	lds	r24, 0x046F
    1a0c:	83 37       	cpi	r24, 0x73	; 115
    1a0e:	71 f4       	brne	.+28     	; 0x1a2c <traverse+0x546>
			{
				forward_wls(1,1);
    1a10:	6a 2d       	mov	r22, r10
    1a12:	79 2d       	mov	r23, r9
    1a14:	8a 2d       	mov	r24, r10
    1a16:	99 2d       	mov	r25, r9
    1a18:	bf da       	rcall	.-2690   	; 0xf98 <forward_wls>
				face = fdir;
    1a1a:	b0 90 6f 04 	lds	r11, 0x046F
    1a1e:	86 ec       	ldi	r24, 0xC6	; 198
    1a20:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1a24:	8b 2d       	mov	r24, r11
    1a26:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1a2a:	e1 c1       	rjmp	.+962    	; 0x1dee <traverse+0x908>
			}
			else if (face == 's' && fdir == 'w')
    1a2c:	87 37       	cpi	r24, 0x77	; 119
    1a2e:	79 f4       	brne	.+30     	; 0x1a4e <traverse+0x568>
			{
				right_turn_wls();
    1a30:	29 dc       	rcall	.-1966   	; 0x1284 <right_turn_wls>
				forward_wls(1,1);
    1a32:	6a 2d       	mov	r22, r10
    1a34:	79 2d       	mov	r23, r9
    1a36:	8a 2d       	mov	r24, r10
    1a38:	99 2d       	mov	r25, r9
    1a3a:	ae da       	rcall	.-2724   	; 0xf98 <forward_wls>
				face = fdir;
    1a3c:	b0 90 6f 04 	lds	r11, 0x046F
    1a40:	86 ec       	ldi	r24, 0xC6	; 198
    1a42:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1a46:	8b 2d       	mov	r24, r11
    1a48:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1a4c:	d0 c1       	rjmp	.+928    	; 0x1dee <traverse+0x908>
			}
			else if (face == 's' && fdir == 'n')
    1a4e:	8e 36       	cpi	r24, 0x6E	; 110
    1a50:	81 f4       	brne	.+32     	; 0x1a72 <traverse+0x58c>
			{
				right_turn_wls();
    1a52:	18 dc       	rcall	.-2000   	; 0x1284 <right_turn_wls>
				right_turn_wls();
    1a54:	17 dc       	rcall	.-2002   	; 0x1284 <right_turn_wls>
				forward_wls(1,1);
    1a56:	6a 2d       	mov	r22, r10
    1a58:	79 2d       	mov	r23, r9
    1a5a:	8a 2d       	mov	r24, r10
    1a5c:	99 2d       	mov	r25, r9
    1a5e:	9c da       	rcall	.-2760   	; 0xf98 <forward_wls>
				face = fdir;
    1a60:	b0 90 6f 04 	lds	r11, 0x046F
    1a64:	86 ec       	ldi	r24, 0xC6	; 198
    1a66:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1a6a:	8b 2d       	mov	r24, r11
    1a6c:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1a70:	be c1       	rjmp	.+892    	; 0x1dee <traverse+0x908>
			}
			else if (face == 's' && fdir == 'e')
    1a72:	85 36       	cpi	r24, 0x65	; 101
    1a74:	09 f0       	breq	.+2      	; 0x1a78 <traverse+0x592>
    1a76:	bb c1       	rjmp	.+886    	; 0x1dee <traverse+0x908>
			{
				left_turn_wls();
    1a78:	7e dc       	rcall	.-1796   	; 0x1376 <left_turn_wls>
				forward_wls(1,1);
    1a7a:	6a 2d       	mov	r22, r10
    1a7c:	79 2d       	mov	r23, r9
    1a7e:	8a 2d       	mov	r24, r10
    1a80:	99 2d       	mov	r25, r9
    1a82:	8a da       	rcall	.-2796   	; 0xf98 <forward_wls>
				face = fdir;
    1a84:	b0 90 6f 04 	lds	r11, 0x046F
    1a88:	86 ec       	ldi	r24, 0xC6	; 198
    1a8a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1a8e:	8b 2d       	mov	r24, r11
    1a90:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1a94:	ac c1       	rjmp	.+856    	; 0x1dee <traverse+0x908>
			}
			else if (face == 'w' && fdir == 'w')
    1a96:	a7 e7       	ldi	r26, 0x77	; 119
    1a98:	ba 12       	cpse	r11, r26
    1a9a:	a9 c1       	rjmp	.+850    	; 0x1dee <traverse+0x908>
    1a9c:	80 91 6f 04 	lds	r24, 0x046F
    1aa0:	87 37       	cpi	r24, 0x77	; 119
    1aa2:	71 f4       	brne	.+28     	; 0x1ac0 <traverse+0x5da>
			{
				forward_wls(1,1);
    1aa4:	6a 2d       	mov	r22, r10
    1aa6:	79 2d       	mov	r23, r9
    1aa8:	8a 2d       	mov	r24, r10
    1aaa:	99 2d       	mov	r25, r9
    1aac:	75 da       	rcall	.-2838   	; 0xf98 <forward_wls>
				face = fdir;
    1aae:	b0 90 6f 04 	lds	r11, 0x046F
    1ab2:	86 ec       	ldi	r24, 0xC6	; 198
    1ab4:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1ab8:	8b 2d       	mov	r24, r11
    1aba:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1abe:	97 c1       	rjmp	.+814    	; 0x1dee <traverse+0x908>
			}
			else if (face == 'w' && fdir == 'n')
    1ac0:	8e 36       	cpi	r24, 0x6E	; 110
    1ac2:	79 f4       	brne	.+30     	; 0x1ae2 <traverse+0x5fc>
			{
				right_turn_wls();
    1ac4:	df db       	rcall	.-2114   	; 0x1284 <right_turn_wls>
				forward_wls(1,1);
    1ac6:	6a 2d       	mov	r22, r10
    1ac8:	79 2d       	mov	r23, r9
    1aca:	8a 2d       	mov	r24, r10
    1acc:	99 2d       	mov	r25, r9
    1ace:	64 da       	rcall	.-2872   	; 0xf98 <forward_wls>
				face = fdir;
    1ad0:	b0 90 6f 04 	lds	r11, 0x046F
    1ad4:	86 ec       	ldi	r24, 0xC6	; 198
    1ad6:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1ada:	8b 2d       	mov	r24, r11
    1adc:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1ae0:	86 c1       	rjmp	.+780    	; 0x1dee <traverse+0x908>
			}
			else if (face == 'w' && fdir == 'e')
    1ae2:	85 36       	cpi	r24, 0x65	; 101
    1ae4:	81 f4       	brne	.+32     	; 0x1b06 <traverse+0x620>
			{
				right_turn_wls();
    1ae6:	ce db       	rcall	.-2148   	; 0x1284 <right_turn_wls>
				right_turn_wls();
    1ae8:	cd db       	rcall	.-2150   	; 0x1284 <right_turn_wls>
				forward_wls(1,1);
    1aea:	6a 2d       	mov	r22, r10
    1aec:	79 2d       	mov	r23, r9
    1aee:	8a 2d       	mov	r24, r10
    1af0:	99 2d       	mov	r25, r9
    1af2:	52 da       	rcall	.-2908   	; 0xf98 <forward_wls>
				face = fdir;
    1af4:	b0 90 6f 04 	lds	r11, 0x046F
    1af8:	86 ec       	ldi	r24, 0xC6	; 198
    1afa:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1afe:	8b 2d       	mov	r24, r11
    1b00:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1b04:	74 c1       	rjmp	.+744    	; 0x1dee <traverse+0x908>
			}
			else if (face == 'w' && fdir == 's')
    1b06:	83 37       	cpi	r24, 0x73	; 115
    1b08:	09 f0       	breq	.+2      	; 0x1b0c <traverse+0x626>
    1b0a:	71 c1       	rjmp	.+738    	; 0x1dee <traverse+0x908>
			{
				left_turn_wls();
    1b0c:	34 dc       	rcall	.-1944   	; 0x1376 <left_turn_wls>
				forward_wls(1,1);
    1b0e:	6a 2d       	mov	r22, r10
    1b10:	79 2d       	mov	r23, r9
    1b12:	8a 2d       	mov	r24, r10
    1b14:	99 2d       	mov	r25, r9
    1b16:	40 da       	rcall	.-2944   	; 0xf98 <forward_wls>
				face = fdir;
    1b18:	b0 90 6f 04 	lds	r11, 0x046F
    1b1c:	86 ec       	ldi	r24, 0xC6	; 198
    1b1e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1b22:	8b 2d       	mov	r24, r11
    1b24:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1b28:	62 c1       	rjmp	.+708    	; 0x1dee <traverse+0x908>
*
*/
void traverse(int path[], char face, int u, int *size)
{
	int ps = *size;
	for (int i = 0; i < ps - 1; i++)
    1b2a:	4a 2d       	mov	r20, r10
    1b2c:	59 2d       	mov	r21, r9
    1b2e:	28 2d       	mov	r18, r8
    1b30:	37 2d       	mov	r19, r7
    1b32:	04 c0       	rjmp	.+8      	; 0x1b3c <traverse+0x656>
    1b34:	2f 5f       	subi	r18, 0xFF	; 255
    1b36:	3f 4f       	sbci	r19, 0xFF	; 255
    1b38:	4f 5f       	subi	r20, 0xFF	; 255
    1b3a:	5f 4f       	sbci	r21, 0xFF	; 255
    1b3c:	d9 01       	movw	r26, r18
		}
		else
		{
			for (int a = 0; a < 4; a++)
			{
				if (movement_array[path[i]][a] == path[i + 1])
    1b3e:	eb 81       	ldd	r30, Y+3	; 0x03
    1b40:	fc 81       	ldd	r31, Y+4	; 0x04
    1b42:	80 81       	ld	r24, Z
    1b44:	91 81       	ldd	r25, Z+1	; 0x01
    1b46:	88 0f       	add	r24, r24
    1b48:	99 1f       	adc	r25, r25
    1b4a:	88 0f       	add	r24, r24
    1b4c:	99 1f       	adc	r25, r25
    1b4e:	82 0f       	add	r24, r18
    1b50:	93 1f       	adc	r25, r19
    1b52:	88 0f       	add	r24, r24
    1b54:	99 1f       	adc	r25, r25
    1b56:	8a 5f       	subi	r24, 0xFA	; 250
    1b58:	9d 4f       	sbci	r25, 0xFD	; 253
    1b5a:	fc 01       	movw	r30, r24
    1b5c:	80 81       	ld	r24, Z
    1b5e:	91 81       	ldd	r25, Z+1	; 0x01
    1b60:	eb 81       	ldd	r30, Y+3	; 0x03
    1b62:	fc 81       	ldd	r31, Y+4	; 0x04
    1b64:	c2 80       	ldd	r12, Z+2	; 0x02
    1b66:	d3 80       	ldd	r13, Z+3	; 0x03
    1b68:	8c 15       	cp	r24, r12
    1b6a:	9d 05       	cpc	r25, r13
    1b6c:	b9 f4       	brne	.+46     	; 0x1b9c <traverse+0x6b6>
				{
					if (a == 0)
    1b6e:	10 97       	sbiw	r26, 0x00	; 0
    1b70:	19 f4       	brne	.+6      	; 0x1b78 <traverse+0x692>
					{
						fdir = 'n';
    1b72:	30 92 6f 04 	sts	0x046F, r3
    1b76:	de cf       	rjmp	.-68     	; 0x1b34 <traverse+0x64e>
					}
					else if (a == 1)
    1b78:	21 30       	cpi	r18, 0x01	; 1
    1b7a:	31 05       	cpc	r19, r1
    1b7c:	19 f4       	brne	.+6      	; 0x1b84 <traverse+0x69e>
					{
						fdir = 'e';
    1b7e:	40 92 6f 04 	sts	0x046F, r4
    1b82:	d8 cf       	rjmp	.-80     	; 0x1b34 <traverse+0x64e>
					}
					else if (a == 2)
    1b84:	22 30       	cpi	r18, 0x02	; 2
    1b86:	31 05       	cpc	r19, r1
    1b88:	19 f4       	brne	.+6      	; 0x1b90 <traverse+0x6aa>
					{
						fdir = 's';
    1b8a:	50 92 6f 04 	sts	0x046F, r5
    1b8e:	d2 cf       	rjmp	.-92     	; 0x1b34 <traverse+0x64e>
					}
					else if (a == 3)
    1b90:	23 30       	cpi	r18, 0x03	; 3
    1b92:	31 05       	cpc	r19, r1
    1b94:	19 f4       	brne	.+6      	; 0x1b9c <traverse+0x6b6>
					{
						fdir = 'w';
    1b96:	60 92 6f 04 	sts	0x046F, r6
    1b9a:	03 c0       	rjmp	.+6      	; 0x1ba2 <traverse+0x6bc>
				lcd_wr_char(face);
			}
		}
		else
		{
			for (int a = 0; a < 4; a++)
    1b9c:	44 30       	cpi	r20, 0x04	; 4
    1b9e:	51 05       	cpc	r21, r1
    1ba0:	4c f2       	brlt	.-110    	; 0x1b34 <traverse+0x64e>
					{
						fdir = 'w';
					}
				}
			}
			if (face == 'n' && fdir == 'n')
    1ba2:	fe e6       	ldi	r31, 0x6E	; 110
    1ba4:	bf 12       	cpse	r11, r31
    1ba6:	47 c0       	rjmp	.+142    	; 0x1c36 <traverse+0x750>
    1ba8:	80 91 6f 04 	lds	r24, 0x046F
    1bac:	8e 36       	cpi	r24, 0x6E	; 110
    1bae:	71 f4       	brne	.+28     	; 0x1bcc <traverse+0x6e6>
			{
				forward_wls(0,1);
    1bb0:	6a 2d       	mov	r22, r10
    1bb2:	79 2d       	mov	r23, r9
    1bb4:	88 2d       	mov	r24, r8
    1bb6:	97 2d       	mov	r25, r7
    1bb8:	ef d9       	rcall	.-3106   	; 0xf98 <forward_wls>
				face = fdir;
    1bba:	b0 90 6f 04 	lds	r11, 0x046F
    1bbe:	86 ec       	ldi	r24, 0xC6	; 198
    1bc0:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1bc4:	8b 2d       	mov	r24, r11
    1bc6:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1bca:	11 c1       	rjmp	.+546    	; 0x1dee <traverse+0x908>
			}
			else if (face == 'n' && fdir == 'e')
    1bcc:	85 36       	cpi	r24, 0x65	; 101
    1bce:	79 f4       	brne	.+30     	; 0x1bee <traverse+0x708>
			{
				right_turn_wls();
    1bd0:	59 db       	rcall	.-2382   	; 0x1284 <right_turn_wls>
				forward_wls(0,1);
    1bd2:	6a 2d       	mov	r22, r10
    1bd4:	79 2d       	mov	r23, r9
    1bd6:	88 2d       	mov	r24, r8
    1bd8:	97 2d       	mov	r25, r7
    1bda:	de d9       	rcall	.-3140   	; 0xf98 <forward_wls>
				face = fdir;
    1bdc:	b0 90 6f 04 	lds	r11, 0x046F
    1be0:	86 ec       	ldi	r24, 0xC6	; 198
    1be2:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1be6:	8b 2d       	mov	r24, r11
    1be8:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1bec:	00 c1       	rjmp	.+512    	; 0x1dee <traverse+0x908>
			}
			else if (face == 'n' && fdir == 's')
    1bee:	83 37       	cpi	r24, 0x73	; 115
    1bf0:	81 f4       	brne	.+32     	; 0x1c12 <traverse+0x72c>
			{
				right_turn_wls();
    1bf2:	48 db       	rcall	.-2416   	; 0x1284 <right_turn_wls>
				right_turn_wls();
    1bf4:	47 db       	rcall	.-2418   	; 0x1284 <right_turn_wls>
				forward_wls(0,1);
    1bf6:	6a 2d       	mov	r22, r10
    1bf8:	79 2d       	mov	r23, r9
    1bfa:	88 2d       	mov	r24, r8
    1bfc:	97 2d       	mov	r25, r7
    1bfe:	cc d9       	rcall	.-3176   	; 0xf98 <forward_wls>
				face = fdir;
    1c00:	b0 90 6f 04 	lds	r11, 0x046F
    1c04:	86 ec       	ldi	r24, 0xC6	; 198
    1c06:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1c0a:	8b 2d       	mov	r24, r11
    1c0c:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1c10:	ee c0       	rjmp	.+476    	; 0x1dee <traverse+0x908>
			}
			else if (face == 'n' && fdir == 'w')
    1c12:	87 37       	cpi	r24, 0x77	; 119
    1c14:	09 f0       	breq	.+2      	; 0x1c18 <traverse+0x732>
    1c16:	a3 c0       	rjmp	.+326    	; 0x1d5e <traverse+0x878>
			{
				left_turn_wls();
    1c18:	ae db       	rcall	.-2212   	; 0x1376 <left_turn_wls>
				forward_wls(0,1);
    1c1a:	6a 2d       	mov	r22, r10
    1c1c:	79 2d       	mov	r23, r9
    1c1e:	88 2d       	mov	r24, r8
    1c20:	97 2d       	mov	r25, r7
    1c22:	ba d9       	rcall	.-3212   	; 0xf98 <forward_wls>
				face = fdir;
    1c24:	b0 90 6f 04 	lds	r11, 0x046F
    1c28:	86 ec       	ldi	r24, 0xC6	; 198
    1c2a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1c2e:	8b 2d       	mov	r24, r11
    1c30:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1c34:	dc c0       	rjmp	.+440    	; 0x1dee <traverse+0x908>
			}
			else if (face == 'e' && fdir == 'e')
    1c36:	85 e6       	ldi	r24, 0x65	; 101
    1c38:	b8 12       	cpse	r11, r24
    1c3a:	47 c0       	rjmp	.+142    	; 0x1cca <traverse+0x7e4>
    1c3c:	80 91 6f 04 	lds	r24, 0x046F
    1c40:	85 36       	cpi	r24, 0x65	; 101
    1c42:	71 f4       	brne	.+28     	; 0x1c60 <traverse+0x77a>
			{
				forward_wls(0,1);
    1c44:	6a 2d       	mov	r22, r10
    1c46:	79 2d       	mov	r23, r9
    1c48:	88 2d       	mov	r24, r8
    1c4a:	97 2d       	mov	r25, r7
    1c4c:	a5 d9       	rcall	.-3254   	; 0xf98 <forward_wls>
				face = fdir;
    1c4e:	b0 90 6f 04 	lds	r11, 0x046F
    1c52:	86 ec       	ldi	r24, 0xC6	; 198
    1c54:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1c58:	8b 2d       	mov	r24, r11
    1c5a:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1c5e:	c7 c0       	rjmp	.+398    	; 0x1dee <traverse+0x908>
			}
			else if (face == 'e' && fdir == 's')
    1c60:	83 37       	cpi	r24, 0x73	; 115
    1c62:	79 f4       	brne	.+30     	; 0x1c82 <traverse+0x79c>
			{
				right_turn_wls();
    1c64:	0f db       	rcall	.-2530   	; 0x1284 <right_turn_wls>
				forward_wls(0,1);
    1c66:	6a 2d       	mov	r22, r10
    1c68:	79 2d       	mov	r23, r9
    1c6a:	88 2d       	mov	r24, r8
    1c6c:	97 2d       	mov	r25, r7
    1c6e:	94 d9       	rcall	.-3288   	; 0xf98 <forward_wls>
				face = fdir;
    1c70:	b0 90 6f 04 	lds	r11, 0x046F
    1c74:	86 ec       	ldi	r24, 0xC6	; 198
    1c76:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1c7a:	8b 2d       	mov	r24, r11
    1c7c:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1c80:	b6 c0       	rjmp	.+364    	; 0x1dee <traverse+0x908>
			}
			else if (face == 'e' && fdir == 'w')
    1c82:	87 37       	cpi	r24, 0x77	; 119
    1c84:	81 f4       	brne	.+32     	; 0x1ca6 <traverse+0x7c0>
			{
				right_turn_wls();
    1c86:	fe da       	rcall	.-2564   	; 0x1284 <right_turn_wls>
				right_turn_wls();
    1c88:	fd da       	rcall	.-2566   	; 0x1284 <right_turn_wls>
				forward_wls(0,1);
    1c8a:	6a 2d       	mov	r22, r10
    1c8c:	79 2d       	mov	r23, r9
    1c8e:	88 2d       	mov	r24, r8
    1c90:	97 2d       	mov	r25, r7
    1c92:	82 d9       	rcall	.-3324   	; 0xf98 <forward_wls>
				face = fdir;
    1c94:	b0 90 6f 04 	lds	r11, 0x046F
    1c98:	86 ec       	ldi	r24, 0xC6	; 198
    1c9a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1c9e:	8b 2d       	mov	r24, r11
    1ca0:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1ca4:	a4 c0       	rjmp	.+328    	; 0x1dee <traverse+0x908>
			}
			else if (face == 'e' && fdir == 'n')
    1ca6:	8e 36       	cpi	r24, 0x6E	; 110
    1ca8:	09 f0       	breq	.+2      	; 0x1cac <traverse+0x7c6>
    1caa:	a1 c0       	rjmp	.+322    	; 0x1dee <traverse+0x908>
			{
				left_turn_wls();
    1cac:	64 db       	rcall	.-2360   	; 0x1376 <left_turn_wls>
				forward_wls(0,1);
    1cae:	6a 2d       	mov	r22, r10
    1cb0:	79 2d       	mov	r23, r9
    1cb2:	88 2d       	mov	r24, r8
    1cb4:	97 2d       	mov	r25, r7
    1cb6:	70 d9       	rcall	.-3360   	; 0xf98 <forward_wls>
				face = fdir;
    1cb8:	b0 90 6f 04 	lds	r11, 0x046F
    1cbc:	86 ec       	ldi	r24, 0xC6	; 198
    1cbe:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1cc2:	8b 2d       	mov	r24, r11
    1cc4:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1cc8:	92 c0       	rjmp	.+292    	; 0x1dee <traverse+0x908>
			}
			else if (face == 's' && fdir == 's')
    1cca:	93 e7       	ldi	r25, 0x73	; 115
    1ccc:	b9 12       	cpse	r11, r25
    1cce:	47 c0       	rjmp	.+142    	; 0x1d5e <traverse+0x878>
    1cd0:	80 91 6f 04 	lds	r24, 0x046F
    1cd4:	83 37       	cpi	r24, 0x73	; 115
    1cd6:	71 f4       	brne	.+28     	; 0x1cf4 <traverse+0x80e>
			{
				forward_wls(0,1);
    1cd8:	6a 2d       	mov	r22, r10
    1cda:	79 2d       	mov	r23, r9
    1cdc:	88 2d       	mov	r24, r8
    1cde:	97 2d       	mov	r25, r7
    1ce0:	5b d9       	rcall	.-3402   	; 0xf98 <forward_wls>
				face = fdir;
    1ce2:	b0 90 6f 04 	lds	r11, 0x046F
    1ce6:	86 ec       	ldi	r24, 0xC6	; 198
    1ce8:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1cec:	8b 2d       	mov	r24, r11
    1cee:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1cf2:	7d c0       	rjmp	.+250    	; 0x1dee <traverse+0x908>
			}
			else if (face == 's' && fdir == 'w')
    1cf4:	87 37       	cpi	r24, 0x77	; 119
    1cf6:	79 f4       	brne	.+30     	; 0x1d16 <traverse+0x830>
			{
				right_turn_wls();
    1cf8:	c5 da       	rcall	.-2678   	; 0x1284 <right_turn_wls>
				forward_wls(0,1);
    1cfa:	6a 2d       	mov	r22, r10
    1cfc:	79 2d       	mov	r23, r9
    1cfe:	88 2d       	mov	r24, r8
    1d00:	97 2d       	mov	r25, r7
    1d02:	4a d9       	rcall	.-3436   	; 0xf98 <forward_wls>
				face = fdir;
    1d04:	b0 90 6f 04 	lds	r11, 0x046F
    1d08:	86 ec       	ldi	r24, 0xC6	; 198
    1d0a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1d0e:	8b 2d       	mov	r24, r11
    1d10:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1d14:	6c c0       	rjmp	.+216    	; 0x1dee <traverse+0x908>
			}
			else if (face == 's' && fdir == 'n')
    1d16:	8e 36       	cpi	r24, 0x6E	; 110
    1d18:	81 f4       	brne	.+32     	; 0x1d3a <traverse+0x854>
			{
				right_turn_wls();
    1d1a:	b4 da       	rcall	.-2712   	; 0x1284 <right_turn_wls>
				right_turn_wls();
    1d1c:	b3 da       	rcall	.-2714   	; 0x1284 <right_turn_wls>
				forward_wls(0,1);
    1d1e:	6a 2d       	mov	r22, r10
    1d20:	79 2d       	mov	r23, r9
    1d22:	88 2d       	mov	r24, r8
    1d24:	97 2d       	mov	r25, r7
    1d26:	38 d9       	rcall	.-3472   	; 0xf98 <forward_wls>
				face = fdir;
    1d28:	b0 90 6f 04 	lds	r11, 0x046F
    1d2c:	86 ec       	ldi	r24, 0xC6	; 198
    1d2e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1d32:	8b 2d       	mov	r24, r11
    1d34:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1d38:	5a c0       	rjmp	.+180    	; 0x1dee <traverse+0x908>
			}
			else if (face == 's' && fdir == 'e')
    1d3a:	85 36       	cpi	r24, 0x65	; 101
    1d3c:	09 f0       	breq	.+2      	; 0x1d40 <traverse+0x85a>
    1d3e:	57 c0       	rjmp	.+174    	; 0x1dee <traverse+0x908>
			{
				left_turn_wls();
    1d40:	1a db       	rcall	.-2508   	; 0x1376 <left_turn_wls>
				forward_wls(0,1);
    1d42:	6a 2d       	mov	r22, r10
    1d44:	79 2d       	mov	r23, r9
    1d46:	88 2d       	mov	r24, r8
    1d48:	97 2d       	mov	r25, r7
    1d4a:	26 d9       	rcall	.-3508   	; 0xf98 <forward_wls>
				face = fdir;
    1d4c:	b0 90 6f 04 	lds	r11, 0x046F
    1d50:	86 ec       	ldi	r24, 0xC6	; 198
    1d52:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1d56:	8b 2d       	mov	r24, r11
    1d58:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1d5c:	48 c0       	rjmp	.+144    	; 0x1dee <traverse+0x908>
			}
			else if (face == 'w' && fdir == 'w')
    1d5e:	a7 e7       	ldi	r26, 0x77	; 119
    1d60:	ba 12       	cpse	r11, r26
    1d62:	45 c0       	rjmp	.+138    	; 0x1dee <traverse+0x908>
    1d64:	80 91 6f 04 	lds	r24, 0x046F
    1d68:	87 37       	cpi	r24, 0x77	; 119
    1d6a:	71 f4       	brne	.+28     	; 0x1d88 <traverse+0x8a2>
			{
				forward_wls(0,1);
    1d6c:	6a 2d       	mov	r22, r10
    1d6e:	79 2d       	mov	r23, r9
    1d70:	88 2d       	mov	r24, r8
    1d72:	97 2d       	mov	r25, r7
    1d74:	11 d9       	rcall	.-3550   	; 0xf98 <forward_wls>
				face = fdir;
    1d76:	b0 90 6f 04 	lds	r11, 0x046F
    1d7a:	86 ec       	ldi	r24, 0xC6	; 198
    1d7c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1d80:	8b 2d       	mov	r24, r11
    1d82:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1d86:	33 c0       	rjmp	.+102    	; 0x1dee <traverse+0x908>
			}
			else if (face == 'w' && fdir == 'n')
    1d88:	8e 36       	cpi	r24, 0x6E	; 110
    1d8a:	79 f4       	brne	.+30     	; 0x1daa <traverse+0x8c4>
			{
				right_turn_wls();
    1d8c:	7b da       	rcall	.-2826   	; 0x1284 <right_turn_wls>
				forward_wls(0,1);
    1d8e:	6a 2d       	mov	r22, r10
    1d90:	79 2d       	mov	r23, r9
    1d92:	88 2d       	mov	r24, r8
    1d94:	97 2d       	mov	r25, r7
    1d96:	00 d9       	rcall	.-3584   	; 0xf98 <forward_wls>
				face = fdir;
    1d98:	b0 90 6f 04 	lds	r11, 0x046F
    1d9c:	86 ec       	ldi	r24, 0xC6	; 198
    1d9e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1da2:	8b 2d       	mov	r24, r11
    1da4:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1da8:	22 c0       	rjmp	.+68     	; 0x1dee <traverse+0x908>
			}
			else if (face == 'w' && fdir == 'e')
    1daa:	85 36       	cpi	r24, 0x65	; 101
    1dac:	81 f4       	brne	.+32     	; 0x1dce <traverse+0x8e8>
			{
				right_turn_wls();
    1dae:	6a da       	rcall	.-2860   	; 0x1284 <right_turn_wls>
				right_turn_wls();
    1db0:	69 da       	rcall	.-2862   	; 0x1284 <right_turn_wls>
				forward_wls(0,1);
    1db2:	6a 2d       	mov	r22, r10
    1db4:	79 2d       	mov	r23, r9
    1db6:	88 2d       	mov	r24, r8
    1db8:	97 2d       	mov	r25, r7
    1dba:	ee d8       	rcall	.-3620   	; 0xf98 <forward_wls>
				face = fdir;
    1dbc:	b0 90 6f 04 	lds	r11, 0x046F
    1dc0:	86 ec       	ldi	r24, 0xC6	; 198
    1dc2:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1dc6:	8b 2d       	mov	r24, r11
    1dc8:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1dcc:	10 c0       	rjmp	.+32     	; 0x1dee <traverse+0x908>
			}
			else if (face == 'w' && fdir == 's')
    1dce:	83 37       	cpi	r24, 0x73	; 115
    1dd0:	71 f4       	brne	.+28     	; 0x1dee <traverse+0x908>
			{
				left_turn_wls();
    1dd2:	d1 da       	rcall	.-2654   	; 0x1376 <left_turn_wls>
				forward_wls(0,1);
    1dd4:	6a 2d       	mov	r22, r10
    1dd6:	79 2d       	mov	r23, r9
    1dd8:	88 2d       	mov	r24, r8
    1dda:	97 2d       	mov	r25, r7
    1ddc:	dd d8       	rcall	.-3654   	; 0xf98 <forward_wls>
				face = fdir;
    1dde:	b0 90 6f 04 	lds	r11, 0x046F
    1de2:	86 ec       	ldi	r24, 0xC6	; 198
    1de4:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
				lcd_cursor(2, 7);
				lcd_wr_char(face);
    1de8:	8b 2d       	mov	r24, r11
    1dea:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
    1dee:	bf ef       	ldi	r27, 0xFF	; 255
    1df0:	eb 1a       	sub	r14, r27
    1df2:	fb 0a       	sbc	r15, r27
    1df4:	e9 81       	ldd	r30, Y+1	; 0x01
    1df6:	fa 81       	ldd	r31, Y+2	; 0x02
    1df8:	32 96       	adiw	r30, 0x02	; 2
    1dfa:	fa 83       	std	Y+2, r31	; 0x02
    1dfc:	e9 83       	std	Y+1, r30	; 0x01
*
*/
void traverse(int path[], char face, int u, int *size)
{
	int ps = *size;
	for (int i = 0; i < ps - 1; i++)
    1dfe:	e0 16       	cp	r14, r16
    1e00:	f1 06       	cpc	r15, r17
    1e02:	09 f0       	breq	.+2      	; 0x1e06 <traverse+0x920>
    1e04:	aa cb       	rjmp	.-2220   	; 0x155a <traverse+0x74>
				lcd_wr_char(face);
			}
			
		}
	}
}
    1e06:	0f 90       	pop	r0
    1e08:	0f 90       	pop	r0
    1e0a:	0f 90       	pop	r0
    1e0c:	0f 90       	pop	r0
    1e0e:	df 91       	pop	r29
    1e10:	cf 91       	pop	r28
    1e12:	1f 91       	pop	r17
    1e14:	0f 91       	pop	r16
    1e16:	ff 90       	pop	r15
    1e18:	ef 90       	pop	r14
    1e1a:	df 90       	pop	r13
    1e1c:	cf 90       	pop	r12
    1e1e:	bf 90       	pop	r11
    1e20:	af 90       	pop	r10
    1e22:	9f 90       	pop	r9
    1e24:	8f 90       	pop	r8
    1e26:	7f 90       	pop	r7
    1e28:	6f 90       	pop	r6
    1e2a:	5f 90       	pop	r5
    1e2c:	4f 90       	pop	r4
    1e2e:	3f 90       	pop	r3
    1e30:	08 95       	ret

00001e32 <block_traverse>:

void block_traverse(char face,char fdir)
{
	if (face == 'n' && fdir == 'n')
    1e32:	8e 36       	cpi	r24, 0x6E	; 110
    1e34:	19 f5       	brne	.+70     	; 0x1e7c <block_traverse+0x4a>
    1e36:	6e 36       	cpi	r22, 0x6E	; 110
    1e38:	39 f4       	brne	.+14     	; 0x1e48 <block_traverse+0x16>
    1e3a:	86 ec       	ldi	r24, 0xC6	; 198
    1e3c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
	{
		face = fdir;
		lcd_cursor(2, 7);
		lcd_wr_char(face);
    1e40:	8e e6       	ldi	r24, 0x6E	; 110
    1e42:	0c 94 16 01 	jmp	0x22c	; 0x22c <lcd_wr_char>
    1e46:	08 95       	ret
	}
	else if (face == 'n' && fdir == 'e')
    1e48:	65 36       	cpi	r22, 0x65	; 101
    1e4a:	41 f4       	brne	.+16     	; 0x1e5c <block_traverse+0x2a>
	{
		right_turn_wls();
    1e4c:	1b da       	rcall	.-3018   	; 0x1284 <right_turn_wls>
    1e4e:	86 ec       	ldi	r24, 0xC6	; 198
    1e50:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
		face = fdir;
		lcd_cursor(2, 7);
		lcd_wr_char(face);
    1e54:	85 e6       	ldi	r24, 0x65	; 101
    1e56:	0c 94 16 01 	jmp	0x22c	; 0x22c <lcd_wr_char>
    1e5a:	08 95       	ret
	}
	else if (face == 'n' && fdir == 's')
    1e5c:	63 37       	cpi	r22, 0x73	; 115
    1e5e:	19 f4       	brne	.+6      	; 0x1e66 <block_traverse+0x34>
	{
		right_turn_wls();
    1e60:	11 da       	rcall	.-3038   	; 0x1284 <right_turn_wls>
		right_turn_wls_bwall();
    1e62:	4e ca       	rjmp	.-2916   	; 0x1300 <right_turn_wls_bwall>
		face = fdir;
    1e64:	08 95       	ret
	}
	else if (face == 'n' && fdir == 'w')
    1e66:	67 37       	cpi	r22, 0x77	; 119
    1e68:	09 f0       	breq	.+2      	; 0x1e6c <block_traverse+0x3a>
    1e6a:	5d c0       	rjmp	.+186    	; 0x1f26 <block_traverse+0xf4>
	{
		left_turn_wls();
    1e6c:	84 da       	rcall	.-2808   	; 0x1376 <left_turn_wls>
    1e6e:	86 ec       	ldi	r24, 0xC6	; 198
    1e70:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
		face = fdir;
		lcd_cursor(2, 7);
		lcd_wr_char(face);
    1e74:	87 e7       	ldi	r24, 0x77	; 119
    1e76:	0c 94 16 01 	jmp	0x22c	; 0x22c <lcd_wr_char>
    1e7a:	08 95       	ret
	}
	else if (face == 'e' && fdir == 'e')
    1e7c:	85 36       	cpi	r24, 0x65	; 101
    1e7e:	49 f5       	brne	.+82     	; 0x1ed2 <block_traverse+0xa0>
    1e80:	65 36       	cpi	r22, 0x65	; 101
    1e82:	39 f4       	brne	.+14     	; 0x1e92 <block_traverse+0x60>
    1e84:	86 ec       	ldi	r24, 0xC6	; 198
    1e86:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
	{
		face = fdir;
		lcd_cursor(2, 7);
		lcd_wr_char(face);
    1e8a:	85 e6       	ldi	r24, 0x65	; 101
    1e8c:	0c 94 16 01 	jmp	0x22c	; 0x22c <lcd_wr_char>
    1e90:	08 95       	ret
	}
	else if (face == 'e' && fdir == 's')
    1e92:	63 37       	cpi	r22, 0x73	; 115
    1e94:	41 f4       	brne	.+16     	; 0x1ea6 <block_traverse+0x74>
	{
		right_turn_wls();
    1e96:	f6 d9       	rcall	.-3092   	; 0x1284 <right_turn_wls>
    1e98:	86 ec       	ldi	r24, 0xC6	; 198
    1e9a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
		face = fdir;
		lcd_cursor(2, 7);
		lcd_wr_char(face);
    1e9e:	83 e7       	ldi	r24, 0x73	; 115
    1ea0:	0c 94 16 01 	jmp	0x22c	; 0x22c <lcd_wr_char>
    1ea4:	08 95       	ret
	}
	else if (face == 'e' && fdir == 'w')
    1ea6:	67 37       	cpi	r22, 0x77	; 119
    1ea8:	49 f4       	brne	.+18     	; 0x1ebc <block_traverse+0x8a>
	{
		right_turn_wls();
    1eaa:	ec d9       	rcall	.-3112   	; 0x1284 <right_turn_wls>
		right_turn_wls_bwall();
    1eac:	29 da       	rcall	.-2990   	; 0x1300 <right_turn_wls_bwall>
    1eae:	86 ec       	ldi	r24, 0xC6	; 198
    1eb0:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
		face = fdir;
		lcd_cursor(2, 7);
		lcd_wr_char(face);
    1eb4:	87 e7       	ldi	r24, 0x77	; 119
    1eb6:	0c 94 16 01 	jmp	0x22c	; 0x22c <lcd_wr_char>
    1eba:	08 95       	ret
	}
	else if (face == 'e' && fdir == 'n')
    1ebc:	6e 36       	cpi	r22, 0x6E	; 110
    1ebe:	09 f0       	breq	.+2      	; 0x1ec2 <block_traverse+0x90>
    1ec0:	5b c0       	rjmp	.+182    	; 0x1f78 <block_traverse+0x146>
	{
		left_turn_wls();
    1ec2:	59 da       	rcall	.-2894   	; 0x1376 <left_turn_wls>
    1ec4:	86 ec       	ldi	r24, 0xC6	; 198
    1ec6:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
		face = fdir;
		lcd_cursor(2, 7);
		lcd_wr_char(face);
    1eca:	8e e6       	ldi	r24, 0x6E	; 110
    1ecc:	0c 94 16 01 	jmp	0x22c	; 0x22c <lcd_wr_char>
    1ed0:	08 95       	ret
	}
	else if (face == 's' && fdir == 's')
    1ed2:	83 37       	cpi	r24, 0x73	; 115
    1ed4:	41 f5       	brne	.+80     	; 0x1f26 <block_traverse+0xf4>
    1ed6:	63 37       	cpi	r22, 0x73	; 115
    1ed8:	39 f4       	brne	.+14     	; 0x1ee8 <block_traverse+0xb6>
    1eda:	86 ec       	ldi	r24, 0xC6	; 198
    1edc:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
	{
		face = fdir;
		lcd_cursor(2, 7);
		lcd_wr_char(face);
    1ee0:	83 e7       	ldi	r24, 0x73	; 115
    1ee2:	0c 94 16 01 	jmp	0x22c	; 0x22c <lcd_wr_char>
    1ee6:	08 95       	ret
	}
	else if (face == 's' && fdir == 'w')
    1ee8:	67 37       	cpi	r22, 0x77	; 119
    1eea:	41 f4       	brne	.+16     	; 0x1efc <block_traverse+0xca>
	{
		right_turn_wls();
    1eec:	cb d9       	rcall	.-3178   	; 0x1284 <right_turn_wls>
    1eee:	86 ec       	ldi	r24, 0xC6	; 198
    1ef0:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
		face = fdir;
		lcd_cursor(2, 7);
		lcd_wr_char(face);
    1ef4:	87 e7       	ldi	r24, 0x77	; 119
    1ef6:	0c 94 16 01 	jmp	0x22c	; 0x22c <lcd_wr_char>
    1efa:	08 95       	ret
	}
	else if (face == 's' && fdir == 'n')
    1efc:	6e 36       	cpi	r22, 0x6E	; 110
    1efe:	49 f4       	brne	.+18     	; 0x1f12 <block_traverse+0xe0>
	{
		right_turn_wls();
    1f00:	c1 d9       	rcall	.-3198   	; 0x1284 <right_turn_wls>
		right_turn_wls_bwall();
    1f02:	fe d9       	rcall	.-3076   	; 0x1300 <right_turn_wls_bwall>
    1f04:	86 ec       	ldi	r24, 0xC6	; 198
    1f06:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
		face = fdir;
		lcd_cursor(2, 7);
		lcd_wr_char(face);
    1f0a:	8e e6       	ldi	r24, 0x6E	; 110
    1f0c:	0c 94 16 01 	jmp	0x22c	; 0x22c <lcd_wr_char>
    1f10:	08 95       	ret
	}
	else if (face == 's' && fdir == 'e')
    1f12:	65 36       	cpi	r22, 0x65	; 101
    1f14:	89 f5       	brne	.+98     	; 0x1f78 <block_traverse+0x146>
	{
		left_turn_wls();
    1f16:	2f da       	rcall	.-2978   	; 0x1376 <left_turn_wls>
    1f18:	86 ec       	ldi	r24, 0xC6	; 198
    1f1a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
		face = fdir;
		lcd_cursor(2, 7);
		lcd_wr_char(face);
    1f1e:	85 e6       	ldi	r24, 0x65	; 101
    1f20:	0c 94 16 01 	jmp	0x22c	; 0x22c <lcd_wr_char>
    1f24:	08 95       	ret
	}
	else if (face == 'w' && fdir == 'w')
    1f26:	87 37       	cpi	r24, 0x77	; 119
    1f28:	39 f5       	brne	.+78     	; 0x1f78 <block_traverse+0x146>
    1f2a:	67 37       	cpi	r22, 0x77	; 119
    1f2c:	39 f4       	brne	.+14     	; 0x1f3c <block_traverse+0x10a>
    1f2e:	86 ec       	ldi	r24, 0xC6	; 198
    1f30:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
	{
		face = fdir;
		lcd_cursor(2, 7);
		lcd_wr_char(face);
    1f34:	87 e7       	ldi	r24, 0x77	; 119
    1f36:	0c 94 16 01 	jmp	0x22c	; 0x22c <lcd_wr_char>
    1f3a:	08 95       	ret
	}
	else if (face == 'w' && fdir == 'n')
    1f3c:	6e 36       	cpi	r22, 0x6E	; 110
    1f3e:	41 f4       	brne	.+16     	; 0x1f50 <block_traverse+0x11e>
	{
		right_turn_wls();
    1f40:	a1 d9       	rcall	.-3262   	; 0x1284 <right_turn_wls>
    1f42:	86 ec       	ldi	r24, 0xC6	; 198
    1f44:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
		face = fdir;
		lcd_cursor(2, 7);
		lcd_wr_char(face);
    1f48:	8e e6       	ldi	r24, 0x6E	; 110
    1f4a:	0c 94 16 01 	jmp	0x22c	; 0x22c <lcd_wr_char>
    1f4e:	08 95       	ret
	}
	else if (face == 'w' && fdir == 'e')
    1f50:	65 36       	cpi	r22, 0x65	; 101
    1f52:	49 f4       	brne	.+18     	; 0x1f66 <block_traverse+0x134>
	{
		right_turn_wls();
    1f54:	97 d9       	rcall	.-3282   	; 0x1284 <right_turn_wls>
		right_turn_wls_bwall();
    1f56:	d4 d9       	rcall	.-3160   	; 0x1300 <right_turn_wls_bwall>
    1f58:	86 ec       	ldi	r24, 0xC6	; 198
    1f5a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
		face = fdir;
		lcd_cursor(2, 7);
		lcd_wr_char(face);
    1f5e:	85 e6       	ldi	r24, 0x65	; 101
    1f60:	0c 94 16 01 	jmp	0x22c	; 0x22c <lcd_wr_char>
    1f64:	08 95       	ret
	}
	else if (face == 'w' && fdir == 's')
    1f66:	63 37       	cpi	r22, 0x73	; 115
    1f68:	39 f4       	brne	.+14     	; 0x1f78 <block_traverse+0x146>
	{
		left_turn_wls();
    1f6a:	05 da       	rcall	.-3062   	; 0x1376 <left_turn_wls>
    1f6c:	86 ec       	ldi	r24, 0xC6	; 198
    1f6e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
		face = fdir;
		lcd_cursor(2, 7);
		lcd_wr_char(face);
    1f72:	83 e7       	ldi	r24, 0x73	; 115
    1f74:	0c 94 16 01 	jmp	0x22c	; 0x22c <lcd_wr_char>
    1f78:	08 95       	ret

00001f7a <block_choose>:
	}
}

void block_choose(int bnode,int block_placed[],char face,char fdir)
{
    1f7a:	cf 93       	push	r28
    1f7c:	df 93       	push	r29
    1f7e:	eb 01       	movw	r28, r22
	if (bnode == 2)
    1f80:	82 30       	cpi	r24, 0x02	; 2
    1f82:	91 05       	cpc	r25, r1
    1f84:	99 f5       	brne	.+102    	; 0x1fec <block_choose+0x72>
	{
		if (block_placed[0] == 0)
    1f86:	28 81       	ld	r18, Y
    1f88:	39 81       	ldd	r19, Y+1	; 0x01
    1f8a:	23 2b       	or	r18, r19
    1f8c:	a9 f4       	brne	.+42     	; 0x1fb8 <block_choose+0x3e>
		{
			fdir = 'w';
			block_traverse(face,fdir);
    1f8e:	67 e7       	ldi	r22, 0x77	; 119
    1f90:	84 2f       	mov	r24, r20
    1f92:	4f df       	rcall	.-354    	; 0x1e32 <block_traverse>
			block_placed[0] = 1;
    1f94:	81 e0       	ldi	r24, 0x01	; 1
    1f96:	90 e0       	ldi	r25, 0x00	; 0
    1f98:	99 83       	std	Y+1, r25	; 0x01
    1f9a:	88 83       	st	Y, r24
			back();
    1f9c:	0e 94 4f 05 	call	0xa9e	; 0xa9e <back>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1fa0:	2f ef       	ldi	r18, 0xFF	; 255
    1fa2:	8f ef       	ldi	r24, 0xFF	; 255
    1fa4:	98 e0       	ldi	r25, 0x08	; 8
    1fa6:	21 50       	subi	r18, 0x01	; 1
    1fa8:	80 40       	sbci	r24, 0x00	; 0
    1faa:	90 40       	sbci	r25, 0x00	; 0
    1fac:	e1 f7       	brne	.-8      	; 0x1fa6 <block_choose+0x2c>
    1fae:	00 c0       	rjmp	.+0      	; 0x1fb0 <block_choose+0x36>
    1fb0:	00 00       	nop
			_delay_ms(200);
			stop();
    1fb2:	0e 94 61 05 	call	0xac2	; 0xac2 <stop>
    1fb6:	25 c1       	rjmp	.+586    	; 0x2202 <__stack+0x3>
		}
		else if (block_placed[1] == 0)
    1fb8:	2a 81       	ldd	r18, Y+2	; 0x02
    1fba:	3b 81       	ldd	r19, Y+3	; 0x03
    1fbc:	23 2b       	or	r18, r19
    1fbe:	09 f0       	breq	.+2      	; 0x1fc2 <block_choose+0x48>
    1fc0:	20 c1       	rjmp	.+576    	; 0x2202 <__stack+0x3>
		{
			fdir = 'e';
			block_traverse(face,fdir);
    1fc2:	65 e6       	ldi	r22, 0x65	; 101
    1fc4:	84 2f       	mov	r24, r20
    1fc6:	35 df       	rcall	.-406    	; 0x1e32 <block_traverse>
			block_placed[1] = 1;
    1fc8:	81 e0       	ldi	r24, 0x01	; 1
    1fca:	90 e0       	ldi	r25, 0x00	; 0
    1fcc:	9b 83       	std	Y+3, r25	; 0x03
    1fce:	8a 83       	std	Y+2, r24	; 0x02
			back();
    1fd0:	0e 94 4f 05 	call	0xa9e	; 0xa9e <back>
    1fd4:	2f ef       	ldi	r18, 0xFF	; 255
    1fd6:	8f ef       	ldi	r24, 0xFF	; 255
    1fd8:	98 e0       	ldi	r25, 0x08	; 8
    1fda:	21 50       	subi	r18, 0x01	; 1
    1fdc:	80 40       	sbci	r24, 0x00	; 0
    1fde:	90 40       	sbci	r25, 0x00	; 0
    1fe0:	e1 f7       	brne	.-8      	; 0x1fda <block_choose+0x60>
    1fe2:	00 c0       	rjmp	.+0      	; 0x1fe4 <block_choose+0x6a>
    1fe4:	00 00       	nop
			_delay_ms(200);
			stop();
    1fe6:	0e 94 61 05 	call	0xac2	; 0xac2 <stop>
    1fea:	0b c1       	rjmp	.+534    	; 0x2202 <__stack+0x3>
		}
	}
	else if (bnode == 13)
    1fec:	8d 30       	cpi	r24, 0x0D	; 13
    1fee:	91 05       	cpc	r25, r1
    1ff0:	99 f5       	brne	.+102    	; 0x2058 <block_choose+0xde>
	{
		if (block_placed[2] == 0)
    1ff2:	2c 81       	ldd	r18, Y+4	; 0x04
    1ff4:	3d 81       	ldd	r19, Y+5	; 0x05
    1ff6:	23 2b       	or	r18, r19
    1ff8:	a9 f4       	brne	.+42     	; 0x2024 <block_choose+0xaa>
		{
			fdir = 'w';
			block_traverse(face,fdir);
    1ffa:	67 e7       	ldi	r22, 0x77	; 119
    1ffc:	84 2f       	mov	r24, r20
    1ffe:	19 df       	rcall	.-462    	; 0x1e32 <block_traverse>
			block_placed[2] = 1;
    2000:	81 e0       	ldi	r24, 0x01	; 1
    2002:	90 e0       	ldi	r25, 0x00	; 0
    2004:	9d 83       	std	Y+5, r25	; 0x05
    2006:	8c 83       	std	Y+4, r24	; 0x04
			back();
    2008:	0e 94 4f 05 	call	0xa9e	; 0xa9e <back>
    200c:	2f ef       	ldi	r18, 0xFF	; 255
    200e:	8f ef       	ldi	r24, 0xFF	; 255
    2010:	98 e0       	ldi	r25, 0x08	; 8
    2012:	21 50       	subi	r18, 0x01	; 1
    2014:	80 40       	sbci	r24, 0x00	; 0
    2016:	90 40       	sbci	r25, 0x00	; 0
    2018:	e1 f7       	brne	.-8      	; 0x2012 <block_choose+0x98>
    201a:	00 c0       	rjmp	.+0      	; 0x201c <block_choose+0xa2>
    201c:	00 00       	nop
			_delay_ms(200);
			stop();
    201e:	0e 94 61 05 	call	0xac2	; 0xac2 <stop>
    2022:	ef c0       	rjmp	.+478    	; 0x2202 <__stack+0x3>
		}
		else if (block_placed[3] == 0)
    2024:	2e 81       	ldd	r18, Y+6	; 0x06
    2026:	3f 81       	ldd	r19, Y+7	; 0x07
    2028:	23 2b       	or	r18, r19
    202a:	09 f0       	breq	.+2      	; 0x202e <block_choose+0xb4>
    202c:	ea c0       	rjmp	.+468    	; 0x2202 <__stack+0x3>
		{
			fdir = 'e';
			block_traverse(face,fdir);
    202e:	65 e6       	ldi	r22, 0x65	; 101
    2030:	84 2f       	mov	r24, r20
    2032:	ff de       	rcall	.-514    	; 0x1e32 <block_traverse>
			block_placed[3] = 1;
    2034:	81 e0       	ldi	r24, 0x01	; 1
    2036:	90 e0       	ldi	r25, 0x00	; 0
    2038:	9f 83       	std	Y+7, r25	; 0x07
    203a:	8e 83       	std	Y+6, r24	; 0x06
			back();
    203c:	0e 94 4f 05 	call	0xa9e	; 0xa9e <back>
    2040:	2f ef       	ldi	r18, 0xFF	; 255
    2042:	8f ef       	ldi	r24, 0xFF	; 255
    2044:	98 e0       	ldi	r25, 0x08	; 8
    2046:	21 50       	subi	r18, 0x01	; 1
    2048:	80 40       	sbci	r24, 0x00	; 0
    204a:	90 40       	sbci	r25, 0x00	; 0
    204c:	e1 f7       	brne	.-8      	; 0x2046 <block_choose+0xcc>
    204e:	00 c0       	rjmp	.+0      	; 0x2050 <block_choose+0xd6>
    2050:	00 00       	nop
			_delay_ms(200);
			stop();
    2052:	0e 94 61 05 	call	0xac2	; 0xac2 <stop>
    2056:	d5 c0       	rjmp	.+426    	; 0x2202 <__stack+0x3>
		}
	}
	else if (bnode == 4)
    2058:	84 30       	cpi	r24, 0x04	; 4
    205a:	91 05       	cpc	r25, r1
    205c:	99 f5       	brne	.+102    	; 0x20c4 <block_choose+0x14a>
	{
		if (block_placed[4] == 0)
    205e:	28 85       	ldd	r18, Y+8	; 0x08
    2060:	39 85       	ldd	r19, Y+9	; 0x09
    2062:	23 2b       	or	r18, r19
    2064:	a9 f4       	brne	.+42     	; 0x2090 <block_choose+0x116>
		{
			fdir = 'w';
			block_traverse(face,fdir);
    2066:	67 e7       	ldi	r22, 0x77	; 119
    2068:	84 2f       	mov	r24, r20
    206a:	e3 de       	rcall	.-570    	; 0x1e32 <block_traverse>
			block_placed[4] = 1;
    206c:	81 e0       	ldi	r24, 0x01	; 1
    206e:	90 e0       	ldi	r25, 0x00	; 0
    2070:	99 87       	std	Y+9, r25	; 0x09
    2072:	88 87       	std	Y+8, r24	; 0x08
			back();
    2074:	0e 94 4f 05 	call	0xa9e	; 0xa9e <back>
    2078:	2f ef       	ldi	r18, 0xFF	; 255
    207a:	8f ef       	ldi	r24, 0xFF	; 255
    207c:	98 e0       	ldi	r25, 0x08	; 8
    207e:	21 50       	subi	r18, 0x01	; 1
    2080:	80 40       	sbci	r24, 0x00	; 0
    2082:	90 40       	sbci	r25, 0x00	; 0
    2084:	e1 f7       	brne	.-8      	; 0x207e <block_choose+0x104>
    2086:	00 c0       	rjmp	.+0      	; 0x2088 <block_choose+0x10e>
    2088:	00 00       	nop
			_delay_ms(200);
			stop();
    208a:	0e 94 61 05 	call	0xac2	; 0xac2 <stop>
    208e:	b9 c0       	rjmp	.+370    	; 0x2202 <__stack+0x3>
		}
		else if (block_placed[5] == 0)
    2090:	2a 85       	ldd	r18, Y+10	; 0x0a
    2092:	3b 85       	ldd	r19, Y+11	; 0x0b
    2094:	23 2b       	or	r18, r19
    2096:	09 f0       	breq	.+2      	; 0x209a <block_choose+0x120>
    2098:	b4 c0       	rjmp	.+360    	; 0x2202 <__stack+0x3>
		{
			fdir = 'e';
			block_traverse(face,fdir);
    209a:	65 e6       	ldi	r22, 0x65	; 101
    209c:	84 2f       	mov	r24, r20
    209e:	c9 de       	rcall	.-622    	; 0x1e32 <block_traverse>
			block_placed[5] = 1;
    20a0:	81 e0       	ldi	r24, 0x01	; 1
    20a2:	90 e0       	ldi	r25, 0x00	; 0
    20a4:	9b 87       	std	Y+11, r25	; 0x0b
    20a6:	8a 87       	std	Y+10, r24	; 0x0a
			back();
    20a8:	0e 94 4f 05 	call	0xa9e	; 0xa9e <back>
    20ac:	2f ef       	ldi	r18, 0xFF	; 255
    20ae:	8f ef       	ldi	r24, 0xFF	; 255
    20b0:	98 e0       	ldi	r25, 0x08	; 8
    20b2:	21 50       	subi	r18, 0x01	; 1
    20b4:	80 40       	sbci	r24, 0x00	; 0
    20b6:	90 40       	sbci	r25, 0x00	; 0
    20b8:	e1 f7       	brne	.-8      	; 0x20b2 <block_choose+0x138>
    20ba:	00 c0       	rjmp	.+0      	; 0x20bc <block_choose+0x142>
    20bc:	00 00       	nop
			_delay_ms(200);
			stop();
    20be:	0e 94 61 05 	call	0xac2	; 0xac2 <stop>
    20c2:	9f c0       	rjmp	.+318    	; 0x2202 <__stack+0x3>
		}
	}
	else if (bnode == 11)
    20c4:	8b 30       	cpi	r24, 0x0B	; 11
    20c6:	91 05       	cpc	r25, r1
    20c8:	99 f5       	brne	.+102    	; 0x2130 <block_choose+0x1b6>
	{
		if (block_placed[6] == 0)
    20ca:	2c 85       	ldd	r18, Y+12	; 0x0c
    20cc:	3d 85       	ldd	r19, Y+13	; 0x0d
    20ce:	23 2b       	or	r18, r19
    20d0:	a9 f4       	brne	.+42     	; 0x20fc <block_choose+0x182>
		{
			fdir = 'w';
			block_traverse(face,fdir);
    20d2:	67 e7       	ldi	r22, 0x77	; 119
    20d4:	84 2f       	mov	r24, r20
    20d6:	ad de       	rcall	.-678    	; 0x1e32 <block_traverse>
			block_placed[6] = 1;
    20d8:	81 e0       	ldi	r24, 0x01	; 1
    20da:	90 e0       	ldi	r25, 0x00	; 0
    20dc:	9d 87       	std	Y+13, r25	; 0x0d
    20de:	8c 87       	std	Y+12, r24	; 0x0c
			back();
    20e0:	0e 94 4f 05 	call	0xa9e	; 0xa9e <back>
    20e4:	2f ef       	ldi	r18, 0xFF	; 255
    20e6:	8f ef       	ldi	r24, 0xFF	; 255
    20e8:	98 e0       	ldi	r25, 0x08	; 8
    20ea:	21 50       	subi	r18, 0x01	; 1
    20ec:	80 40       	sbci	r24, 0x00	; 0
    20ee:	90 40       	sbci	r25, 0x00	; 0
    20f0:	e1 f7       	brne	.-8      	; 0x20ea <block_choose+0x170>
    20f2:	00 c0       	rjmp	.+0      	; 0x20f4 <block_choose+0x17a>
    20f4:	00 00       	nop
			_delay_ms(200);
			stop();
    20f6:	0e 94 61 05 	call	0xac2	; 0xac2 <stop>
    20fa:	83 c0       	rjmp	.+262    	; 0x2202 <__stack+0x3>
		}
		else if (block_placed[7] == 0)
    20fc:	2e 85       	ldd	r18, Y+14	; 0x0e
    20fe:	3f 85       	ldd	r19, Y+15	; 0x0f
    2100:	23 2b       	or	r18, r19
    2102:	09 f0       	breq	.+2      	; 0x2106 <block_choose+0x18c>
    2104:	7e c0       	rjmp	.+252    	; 0x2202 <__stack+0x3>
		{
			fdir = 'e';
			block_traverse(face,fdir);
    2106:	65 e6       	ldi	r22, 0x65	; 101
    2108:	84 2f       	mov	r24, r20
    210a:	93 de       	rcall	.-730    	; 0x1e32 <block_traverse>
			block_placed[7] = 1;
    210c:	81 e0       	ldi	r24, 0x01	; 1
    210e:	90 e0       	ldi	r25, 0x00	; 0
    2110:	9f 87       	std	Y+15, r25	; 0x0f
    2112:	8e 87       	std	Y+14, r24	; 0x0e
			back();
    2114:	0e 94 4f 05 	call	0xa9e	; 0xa9e <back>
    2118:	2f ef       	ldi	r18, 0xFF	; 255
    211a:	8f ef       	ldi	r24, 0xFF	; 255
    211c:	98 e0       	ldi	r25, 0x08	; 8
    211e:	21 50       	subi	r18, 0x01	; 1
    2120:	80 40       	sbci	r24, 0x00	; 0
    2122:	90 40       	sbci	r25, 0x00	; 0
    2124:	e1 f7       	brne	.-8      	; 0x211e <block_choose+0x1a4>
    2126:	00 c0       	rjmp	.+0      	; 0x2128 <block_choose+0x1ae>
    2128:	00 00       	nop
			_delay_ms(200);
			stop();
    212a:	0e 94 61 05 	call	0xac2	; 0xac2 <stop>
    212e:	69 c0       	rjmp	.+210    	; 0x2202 <__stack+0x3>
		}
	}
	else if (bnode == 6)
    2130:	86 30       	cpi	r24, 0x06	; 6
    2132:	91 05       	cpc	r25, r1
    2134:	99 f5       	brne	.+102    	; 0x219c <block_choose+0x222>
	{
		if (block_placed[8] == 0)
    2136:	28 89       	ldd	r18, Y+16	; 0x10
    2138:	39 89       	ldd	r19, Y+17	; 0x11
    213a:	23 2b       	or	r18, r19
    213c:	a9 f4       	brne	.+42     	; 0x2168 <block_choose+0x1ee>
		{
			fdir = 'w';
			block_traverse(face,fdir);
    213e:	67 e7       	ldi	r22, 0x77	; 119
    2140:	84 2f       	mov	r24, r20
    2142:	77 de       	rcall	.-786    	; 0x1e32 <block_traverse>
			block_placed[8] = 1;
    2144:	81 e0       	ldi	r24, 0x01	; 1
    2146:	90 e0       	ldi	r25, 0x00	; 0
    2148:	99 8b       	std	Y+17, r25	; 0x11
    214a:	88 8b       	std	Y+16, r24	; 0x10
			back();
    214c:	0e 94 4f 05 	call	0xa9e	; 0xa9e <back>
    2150:	2f ef       	ldi	r18, 0xFF	; 255
    2152:	8f ef       	ldi	r24, 0xFF	; 255
    2154:	98 e0       	ldi	r25, 0x08	; 8
    2156:	21 50       	subi	r18, 0x01	; 1
    2158:	80 40       	sbci	r24, 0x00	; 0
    215a:	90 40       	sbci	r25, 0x00	; 0
    215c:	e1 f7       	brne	.-8      	; 0x2156 <block_choose+0x1dc>
    215e:	00 c0       	rjmp	.+0      	; 0x2160 <block_choose+0x1e6>
    2160:	00 00       	nop
			_delay_ms(200);
			stop();
    2162:	0e 94 61 05 	call	0xac2	; 0xac2 <stop>
    2166:	4d c0       	rjmp	.+154    	; 0x2202 <__stack+0x3>
		}
		else if (block_placed[9] == 0)
    2168:	2a 89       	ldd	r18, Y+18	; 0x12
    216a:	3b 89       	ldd	r19, Y+19	; 0x13
    216c:	23 2b       	or	r18, r19
    216e:	09 f0       	breq	.+2      	; 0x2172 <block_choose+0x1f8>
    2170:	48 c0       	rjmp	.+144    	; 0x2202 <__stack+0x3>
		{
			fdir = 'e';
			block_traverse(face,fdir);
    2172:	65 e6       	ldi	r22, 0x65	; 101
    2174:	84 2f       	mov	r24, r20
    2176:	5d de       	rcall	.-838    	; 0x1e32 <block_traverse>
			block_placed[9] = 1;
    2178:	81 e0       	ldi	r24, 0x01	; 1
    217a:	90 e0       	ldi	r25, 0x00	; 0
    217c:	9b 8b       	std	Y+19, r25	; 0x13
    217e:	8a 8b       	std	Y+18, r24	; 0x12
			back();
    2180:	0e 94 4f 05 	call	0xa9e	; 0xa9e <back>
    2184:	2f ef       	ldi	r18, 0xFF	; 255
    2186:	8f ef       	ldi	r24, 0xFF	; 255
    2188:	98 e0       	ldi	r25, 0x08	; 8
    218a:	21 50       	subi	r18, 0x01	; 1
    218c:	80 40       	sbci	r24, 0x00	; 0
    218e:	90 40       	sbci	r25, 0x00	; 0
    2190:	e1 f7       	brne	.-8      	; 0x218a <block_choose+0x210>
    2192:	00 c0       	rjmp	.+0      	; 0x2194 <block_choose+0x21a>
    2194:	00 00       	nop
			_delay_ms(200);
			stop();
    2196:	0e 94 61 05 	call	0xac2	; 0xac2 <stop>
    219a:	33 c0       	rjmp	.+102    	; 0x2202 <__stack+0x3>
		}
	}
	else if (bnode == 9)
    219c:	09 97       	sbiw	r24, 0x09	; 9
    219e:	89 f5       	brne	.+98     	; 0x2202 <__stack+0x3>
	{
		if (block_placed[10] == 0)
    21a0:	2c 89       	ldd	r18, Y+20	; 0x14
    21a2:	3d 89       	ldd	r19, Y+21	; 0x15
    21a4:	23 2b       	or	r18, r19
    21a6:	a9 f4       	brne	.+42     	; 0x21d2 <block_choose+0x258>
		{
			fdir = 'w';
			block_traverse(face,fdir);
    21a8:	67 e7       	ldi	r22, 0x77	; 119
    21aa:	84 2f       	mov	r24, r20
    21ac:	42 de       	rcall	.-892    	; 0x1e32 <block_traverse>
			block_placed[10] = 1;
    21ae:	81 e0       	ldi	r24, 0x01	; 1
    21b0:	90 e0       	ldi	r25, 0x00	; 0
    21b2:	9d 8b       	std	Y+21, r25	; 0x15
    21b4:	8c 8b       	std	Y+20, r24	; 0x14
			back();
    21b6:	0e 94 4f 05 	call	0xa9e	; 0xa9e <back>
    21ba:	2f ef       	ldi	r18, 0xFF	; 255
    21bc:	8f ef       	ldi	r24, 0xFF	; 255
    21be:	98 e0       	ldi	r25, 0x08	; 8
    21c0:	21 50       	subi	r18, 0x01	; 1
    21c2:	80 40       	sbci	r24, 0x00	; 0
    21c4:	90 40       	sbci	r25, 0x00	; 0
    21c6:	e1 f7       	brne	.-8      	; 0x21c0 <block_choose+0x246>
    21c8:	00 c0       	rjmp	.+0      	; 0x21ca <block_choose+0x250>
    21ca:	00 00       	nop
			_delay_ms(200);
			stop();
    21cc:	0e 94 61 05 	call	0xac2	; 0xac2 <stop>
    21d0:	18 c0       	rjmp	.+48     	; 0x2202 <__stack+0x3>
		}
		else if (block_placed[11] == 0)
    21d2:	2e 89       	ldd	r18, Y+22	; 0x16
    21d4:	3f 89       	ldd	r19, Y+23	; 0x17
    21d6:	23 2b       	or	r18, r19
    21d8:	a1 f4       	brne	.+40     	; 0x2202 <__stack+0x3>
		{
			fdir = 'e';
			block_traverse(face,fdir);
    21da:	65 e6       	ldi	r22, 0x65	; 101
    21dc:	84 2f       	mov	r24, r20
    21de:	29 de       	rcall	.-942    	; 0x1e32 <block_traverse>
			block_placed[11] = 1;
    21e0:	81 e0       	ldi	r24, 0x01	; 1
    21e2:	90 e0       	ldi	r25, 0x00	; 0
    21e4:	9f 8b       	std	Y+23, r25	; 0x17
    21e6:	8e 8b       	std	Y+22, r24	; 0x16
			back();
    21e8:	0e 94 4f 05 	call	0xa9e	; 0xa9e <back>
    21ec:	2f ef       	ldi	r18, 0xFF	; 255
    21ee:	8f ef       	ldi	r24, 0xFF	; 255
    21f0:	98 e0       	ldi	r25, 0x08	; 8
    21f2:	21 50       	subi	r18, 0x01	; 1
    21f4:	80 40       	sbci	r24, 0x00	; 0
    21f6:	90 40       	sbci	r25, 0x00	; 0
    21f8:	e1 f7       	brne	.-8      	; 0x21f2 <block_choose+0x278>
    21fa:	00 c0       	rjmp	.+0      	; 0x21fc <block_choose+0x282>
    21fc:	00 00       	nop
			_delay_ms(200);
			stop();
    21fe:	0e 94 61 05 	call	0xac2	; 0xac2 <stop>
		}
	}
}
    2202:	df 91       	pop	r29
    2204:	cf 91       	pop	r28
    2206:	08 95       	ret

00002208 <main>:
/* --------------------------------------------------------------MAIN-----------------------------------------------------------*/

int main() 
{
    2208:	af 92       	push	r10
    220a:	bf 92       	push	r11
    220c:	cf 92       	push	r12
    220e:	df 92       	push	r13
    2210:	ef 92       	push	r14
    2212:	ff 92       	push	r15
    2214:	0f 93       	push	r16
    2216:	1f 93       	push	r17
    2218:	cf 93       	push	r28
    221a:	df 93       	push	r29
    221c:	1f 92       	push	r1
    221e:	1f 92       	push	r1
    2220:	cd b7       	in	r28, 0x3d	; 61
    2222:	de b7       	in	r29, 0x3e	; 62
  init_devices();
    2224:	f3 d8       	rcall	.-3610   	; 0x140c <init_devices>
  //int house_no;
  int block = 0;
  int bnode;
  int len = 0;
    2226:	1a 82       	std	Y+2, r1	; 0x02
    2228:	19 82       	std	Y+1, r1	; 0x01
  char apfdir = 'w';
  u = 0;
    222a:	10 92 ed 04 	sts	0x04ED, r1
    222e:	10 92 ec 04 	sts	0x04EC, r1
  face = 's';
    2232:	83 e7       	ldi	r24, 0x73	; 115
    2234:	80 93 70 04 	sts	0x0470, r24
  
  forward_wls(0,1);
    2238:	61 e0       	ldi	r22, 0x01	; 1
    223a:	70 e0       	ldi	r23, 0x00	; 0
    223c:	80 e0       	ldi	r24, 0x00	; 0
    223e:	90 e0       	ldi	r25, 0x00	; 0
    2240:	0e 94 cc 07 	call	0xf98	; 0xf98 <forward_wls>
  block = which_material[8];
    2244:	00 91 6b 04 	lds	r16, 0x046B
    2248:	10 91 6c 04 	lds	r17, 0x046C
  lcd_init();
    224c:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_init>
  lcd_print(2,1,block,3);
    2250:	23 e0       	ldi	r18, 0x03	; 3
    2252:	30 e0       	ldi	r19, 0x00	; 0
    2254:	a8 01       	movw	r20, r16
    2256:	61 e0       	ldi	r22, 0x01	; 1
    2258:	82 e0       	ldi	r24, 0x02	; 2
    225a:	0e 94 4c 01 	call	0x298	; 0x298 <lcd_print>
  bnode = which_node(block);
    225e:	c8 01       	movw	r24, r16
    2260:	e0 d8       	rcall	.-3648   	; 0x1422 <which_node>
    2262:	6c 01       	movw	r12, r24
  lcd_print(2,14,bnode,3);
    2264:	23 e0       	ldi	r18, 0x03	; 3
    2266:	30 e0       	ldi	r19, 0x00	; 0
    2268:	ac 01       	movw	r20, r24
    226a:	6e e0       	ldi	r22, 0x0E	; 14
    226c:	82 e0       	ldi	r24, 0x02	; 2
    226e:	0e 94 4c 01 	call	0x298	; 0x298 <lcd_print>
  dijkstra(G,n,u);
    2272:	40 91 ec 04 	lds	r20, 0x04EC
    2276:	50 91 ed 04 	lds	r21, 0x04ED
    227a:	60 91 71 04 	lds	r22, 0x0471
    227e:	70 91 72 04 	lds	r23, 0x0472
    2282:	8e e7       	ldi	r24, 0x7E	; 126
    2284:	92 e0       	ldi	r25, 0x02	; 2
    2286:	0e 94 77 02 	call	0x4ee	; 0x4ee <dijkstra>
  int *path = (int*)malloc(80);
    228a:	80 e5       	ldi	r24, 0x50	; 80
    228c:	90 e0       	ldi	r25, 0x00	; 0
    228e:	b3 d2       	rcall	.+1382   	; 0x27f6 <malloc>
    2290:	a8 2e       	mov	r10, r24
    2292:	b9 2e       	mov	r11, r25
  dist_comp(bnode,bnode,path,&len);
    2294:	9e 01       	movw	r18, r28
    2296:	2f 5f       	subi	r18, 0xFF	; 255
    2298:	3f 4f       	sbci	r19, 0xFF	; 255
    229a:	48 2f       	mov	r20, r24
    229c:	59 2f       	mov	r21, r25
    229e:	b6 01       	movw	r22, r12
    22a0:	c6 01       	movw	r24, r12
    22a2:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <dist_comp>
  
  for(int p = 0;p<len;p++)
    22a6:	89 81       	ldd	r24, Y+1	; 0x01
    22a8:	9a 81       	ldd	r25, Y+2	; 0x02
    22aa:	18 16       	cp	r1, r24
    22ac:	19 06       	cpc	r1, r25
    22ae:	b4 f4       	brge	.+44     	; 0x22dc <main+0xd4>
    22b0:	ea 2c       	mov	r14, r10
    22b2:	fb 2c       	mov	r15, r11
    22b4:	00 e0       	ldi	r16, 0x00	; 0
    22b6:	10 e0       	ldi	r17, 0x00	; 0
  {
	  lcd_print(1,2*p,path[p],2);
    22b8:	f7 01       	movw	r30, r14
    22ba:	41 91       	ld	r20, Z+
    22bc:	51 91       	ld	r21, Z+
    22be:	7f 01       	movw	r14, r30
    22c0:	60 2f       	mov	r22, r16
    22c2:	66 0f       	add	r22, r22
    22c4:	22 e0       	ldi	r18, 0x02	; 2
    22c6:	30 e0       	ldi	r19, 0x00	; 0
    22c8:	81 e0       	ldi	r24, 0x01	; 1
    22ca:	0e 94 4c 01 	call	0x298	; 0x298 <lcd_print>
  lcd_print(2,14,bnode,3);
  dijkstra(G,n,u);
  int *path = (int*)malloc(80);
  dist_comp(bnode,bnode,path,&len);
  
  for(int p = 0;p<len;p++)
    22ce:	0f 5f       	subi	r16, 0xFF	; 255
    22d0:	1f 4f       	sbci	r17, 0xFF	; 255
    22d2:	89 81       	ldd	r24, Y+1	; 0x01
    22d4:	9a 81       	ldd	r25, Y+2	; 0x02
    22d6:	08 17       	cp	r16, r24
    22d8:	19 07       	cpc	r17, r25
    22da:	74 f3       	brlt	.-36     	; 0x22b8 <main+0xb0>
  {
	  lcd_print(1,2*p,path[p],2);
  }
  
  traverse(path,face,u,&len);
    22dc:	40 91 ec 04 	lds	r20, 0x04EC
    22e0:	50 91 ed 04 	lds	r21, 0x04ED
    22e4:	9e 01       	movw	r18, r28
    22e6:	2f 5f       	subi	r18, 0xFF	; 255
    22e8:	3f 4f       	sbci	r19, 0xFF	; 255
    22ea:	60 91 70 04 	lds	r22, 0x0470
    22ee:	8a 2d       	mov	r24, r10
    22f0:	9b 2d       	mov	r25, r11
    22f2:	f9 d8       	rcall	.-3598   	; 0x14e6 <traverse>
    22f4:	86 ec       	ldi	r24, 0xC6	; 198
    22f6:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
  lcd_cursor(2, 7);
  lcd_wr_char(face);
    22fa:	80 91 70 04 	lds	r24, 0x0470
    22fe:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
  free(path);
    2302:	8a 2d       	mov	r24, r10
    2304:	9b 2d       	mov	r25, r11
    2306:	0f d3       	rcall	.+1566   	; 0x2926 <free>
  
  block_choose(bnode,block_placed,face,fdir);
    2308:	20 91 6f 04 	lds	r18, 0x046F
    230c:	40 91 70 04 	lds	r20, 0x0470
    2310:	64 ed       	ldi	r22, 0xD4	; 212
    2312:	74 e0       	ldi	r23, 0x04	; 4
    2314:	c6 01       	movw	r24, r12
    2316:	31 de       	rcall	.-926    	; 0x1f7a <block_choose>
  m_pick();
    2318:	0e 94 2a 06 	call	0xc54	; 0xc54 <m_pick>
    231c:	86 ec       	ldi	r24, 0xC6	; 198
    231e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
  lcd_cursor(2, 7);
  lcd_wr_char(face);
    2322:	80 91 70 04 	lds	r24, 0x0470
    2326:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
  
  lcd_init();
    232a:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_init>
    232e:	ea 2c       	mov	r14, r10
    2330:	fb 2c       	mov	r15, r11
  for(int p = 0;p<=12;p++)
    2332:	00 e0       	ldi	r16, 0x00	; 0
    2334:	10 e0       	ldi	r17, 0x00	; 0
  {
	  if (path[p] == 1) lcd_print(1,1,p,2);
    2336:	f7 01       	movw	r30, r14
    2338:	81 91       	ld	r24, Z+
    233a:	91 91       	ld	r25, Z+
    233c:	7f 01       	movw	r14, r30
    233e:	01 97       	sbiw	r24, 0x01	; 1
    2340:	39 f4       	brne	.+14     	; 0x2350 <main+0x148>
    2342:	22 e0       	ldi	r18, 0x02	; 2
    2344:	30 e0       	ldi	r19, 0x00	; 0
    2346:	a8 01       	movw	r20, r16
    2348:	61 e0       	ldi	r22, 0x01	; 1
    234a:	81 e0       	ldi	r24, 0x01	; 1
    234c:	0e 94 4c 01 	call	0x298	; 0x298 <lcd_print>
  m_pick();
  lcd_cursor(2, 7);
  lcd_wr_char(face);
  
  lcd_init();
  for(int p = 0;p<=12;p++)
    2350:	0f 5f       	subi	r16, 0xFF	; 255
    2352:	1f 4f       	sbci	r17, 0xFF	; 255
    2354:	0d 30       	cpi	r16, 0x0D	; 13
    2356:	11 05       	cpc	r17, r1
    2358:	71 f7       	brne	.-36     	; 0x2336 <main+0x12e>
    235a:	86 ec       	ldi	r24, 0xC6	; 198
    235c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
  {
	  if (path[p] == 1) lcd_print(1,1,p,2);
  }
  apfdir='s';
  lcd_cursor(2, 7);
  lcd_wr_char(face);
    2360:	80 91 70 04 	lds	r24, 0x0470
    2364:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
  //right_turn_wls_bwall();
  face = 'e';
    2368:	85 e6       	ldi	r24, 0x65	; 101
    236a:	80 93 70 04 	sts	0x0470, r24
  //block_traverse(face,apfdir);
  u=bnode;
    236e:	d0 92 ed 04 	sts	0x04ED, r13
    2372:	c0 92 ec 04 	sts	0x04EC, r12
    2376:	86 ec       	ldi	r24, 0xC6	; 198
    2378:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_wr_command>
  
  lcd_cursor(2, 7);
  lcd_wr_char(face);
    237c:	80 91 70 04 	lds	r24, 0x0470
    2380:	0e 94 16 01 	call	0x22c	; 0x22c <lcd_wr_char>
  block = which_material[9];
    2384:	00 91 6d 04 	lds	r16, 0x046D
    2388:	10 91 6e 04 	lds	r17, 0x046E
  lcd_init();
    238c:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_init>
  lcd_print(2,1,block,3);
    2390:	23 e0       	ldi	r18, 0x03	; 3
    2392:	30 e0       	ldi	r19, 0x00	; 0
    2394:	a8 01       	movw	r20, r16
    2396:	61 e0       	ldi	r22, 0x01	; 1
    2398:	82 e0       	ldi	r24, 0x02	; 2
    239a:	0e 94 4c 01 	call	0x298	; 0x298 <lcd_print>
  bnode = which_node(block);
    239e:	c8 01       	movw	r24, r16
    23a0:	40 d8       	rcall	.-3968   	; 0x1422 <which_node>
    23a2:	6c 01       	movw	r12, r24
  lcd_print(2,14,bnode,3);
    23a4:	23 e0       	ldi	r18, 0x03	; 3
    23a6:	30 e0       	ldi	r19, 0x00	; 0
    23a8:	ac 01       	movw	r20, r24
    23aa:	6e e0       	ldi	r22, 0x0E	; 14
    23ac:	82 e0       	ldi	r24, 0x02	; 2
    23ae:	0e 94 4c 01 	call	0x298	; 0x298 <lcd_print>
  dijkstra(G,n,u);
    23b2:	40 91 ec 04 	lds	r20, 0x04EC
    23b6:	50 91 ed 04 	lds	r21, 0x04ED
    23ba:	60 91 71 04 	lds	r22, 0x0471
    23be:	70 91 72 04 	lds	r23, 0x0472
    23c2:	8e e7       	ldi	r24, 0x7E	; 126
    23c4:	92 e0       	ldi	r25, 0x02	; 2
    23c6:	0e 94 77 02 	call	0x4ee	; 0x4ee <dijkstra>
  dist_comp(bnode,bnode,path,&len);
    23ca:	9e 01       	movw	r18, r28
    23cc:	2f 5f       	subi	r18, 0xFF	; 255
    23ce:	3f 4f       	sbci	r19, 0xFF	; 255
    23d0:	4a 2d       	mov	r20, r10
    23d2:	5b 2d       	mov	r21, r11
    23d4:	b6 01       	movw	r22, r12
    23d6:	c6 01       	movw	r24, r12
    23d8:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <dist_comp>
   
   for(int p = 0;p<len;p++)
    23dc:	89 81       	ldd	r24, Y+1	; 0x01
    23de:	9a 81       	ldd	r25, Y+2	; 0x02
    23e0:	18 16       	cp	r1, r24
    23e2:	19 06       	cpc	r1, r25
    23e4:	b4 f4       	brge	.+44     	; 0x2412 <main+0x20a>
    23e6:	ea 2c       	mov	r14, r10
    23e8:	fb 2c       	mov	r15, r11
    23ea:	00 e0       	ldi	r16, 0x00	; 0
    23ec:	10 e0       	ldi	r17, 0x00	; 0
   {
	   lcd_print(1,2*p,path[p],2);
    23ee:	f7 01       	movw	r30, r14
    23f0:	41 91       	ld	r20, Z+
    23f2:	51 91       	ld	r21, Z+
    23f4:	7f 01       	movw	r14, r30
    23f6:	60 2f       	mov	r22, r16
    23f8:	66 0f       	add	r22, r22
    23fa:	22 e0       	ldi	r18, 0x02	; 2
    23fc:	30 e0       	ldi	r19, 0x00	; 0
    23fe:	81 e0       	ldi	r24, 0x01	; 1
    2400:	0e 94 4c 01 	call	0x298	; 0x298 <lcd_print>
  bnode = which_node(block);
  lcd_print(2,14,bnode,3);
  dijkstra(G,n,u);
  dist_comp(bnode,bnode,path,&len);
   
   for(int p = 0;p<len;p++)
    2404:	0f 5f       	subi	r16, 0xFF	; 255
    2406:	1f 4f       	sbci	r17, 0xFF	; 255
    2408:	89 81       	ldd	r24, Y+1	; 0x01
    240a:	9a 81       	ldd	r25, Y+2	; 0x02
    240c:	08 17       	cp	r16, r24
    240e:	19 07       	cpc	r17, r25
    2410:	74 f3       	brlt	.-36     	; 0x23ee <main+0x1e6>
   {
	   lcd_print(1,2*p,path[p],2);
   }
  traverse(path,face,u,&len);
    2412:	40 91 ec 04 	lds	r20, 0x04EC
    2416:	50 91 ed 04 	lds	r21, 0x04ED
    241a:	9e 01       	movw	r18, r28
    241c:	2f 5f       	subi	r18, 0xFF	; 255
    241e:	3f 4f       	sbci	r19, 0xFF	; 255
    2420:	60 91 70 04 	lds	r22, 0x0470
    2424:	8a 2d       	mov	r24, r10
    2426:	9b 2d       	mov	r25, r11
    2428:	5e d8       	rcall	.-3908   	; 0x14e6 <traverse>
  free(path);
    242a:	8a 2d       	mov	r24, r10
    242c:	9b 2d       	mov	r25, r11
    242e:	7b d2       	rcall	.+1270   	; 0x2926 <free>
  
  block_choose(bnode,block_placed,face,fdir);
    2430:	20 91 6f 04 	lds	r18, 0x046F
    2434:	40 91 70 04 	lds	r20, 0x0470
    2438:	64 ed       	ldi	r22, 0xD4	; 212
    243a:	74 e0       	ldi	r23, 0x04	; 4
    243c:	c6 01       	movw	r24, r12
    243e:	9d dd       	rcall	.-1222   	; 0x1f7a <block_choose>
  s_pick();
    2440:	0e 94 6d 06 	call	0xcda	; 0xcda <s_pick>
  lcd_init();
    2444:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_init>
    2448:	ea 2c       	mov	r14, r10
    244a:	fb 2c       	mov	r15, r11
  for(int p = 0;p<=12;p++)
    244c:	00 e0       	ldi	r16, 0x00	; 0
    244e:	10 e0       	ldi	r17, 0x00	; 0
  {
	  if (path[p] == 1) lcd_print(1,1,p,2);
    2450:	f7 01       	movw	r30, r14
    2452:	81 91       	ld	r24, Z+
    2454:	91 91       	ld	r25, Z+
    2456:	7f 01       	movw	r14, r30
    2458:	01 97       	sbiw	r24, 0x01	; 1
    245a:	39 f4       	brne	.+14     	; 0x246a <main+0x262>
    245c:	22 e0       	ldi	r18, 0x02	; 2
    245e:	30 e0       	ldi	r19, 0x00	; 0
    2460:	a8 01       	movw	r20, r16
    2462:	61 e0       	ldi	r22, 0x01	; 1
    2464:	81 e0       	ldi	r24, 0x01	; 1
    2466:	0e 94 4c 01 	call	0x298	; 0x298 <lcd_print>
  free(path);
  
  block_choose(bnode,block_placed,face,fdir);
  s_pick();
  lcd_init();
  for(int p = 0;p<=12;p++)
    246a:	0f 5f       	subi	r16, 0xFF	; 255
    246c:	1f 4f       	sbci	r17, 0xFF	; 255
    246e:	0d 30       	cpi	r16, 0x0D	; 13
    2470:	11 05       	cpc	r17, r1
    2472:	71 f7       	brne	.-36     	; 0x2450 <main+0x248>
  {
	  if (path[p] == 1) lcd_print(1,1,p,2);
  }
  apfdir='n';
  block_traverse(face,apfdir);
    2474:	6e e6       	ldi	r22, 0x6E	; 110
    2476:	80 91 70 04 	lds	r24, 0x0470
    247a:	db dc       	rcall	.-1610   	; 0x1e32 <block_traverse>
  u=bnode;
    247c:	d0 92 ed 04 	sts	0x04ED, r13
    2480:	c0 92 ec 04 	sts	0x04EC, r12
  
  dijkstra(G,n,u);
    2484:	60 91 71 04 	lds	r22, 0x0471
    2488:	70 91 72 04 	lds	r23, 0x0472
    248c:	a6 01       	movw	r20, r12
    248e:	8e e7       	ldi	r24, 0x7E	; 126
    2490:	92 e0       	ldi	r25, 0x02	; 2
    2492:	0e 94 77 02 	call	0x4ee	; 0x4ee <dijkstra>
  //int *path = (int*)malloc(80);
  dist_comp(7,8,path,&len);
    2496:	9e 01       	movw	r18, r28
    2498:	2f 5f       	subi	r18, 0xFF	; 255
    249a:	3f 4f       	sbci	r19, 0xFF	; 255
    249c:	4a 2d       	mov	r20, r10
    249e:	5b 2d       	mov	r21, r11
    24a0:	68 e0       	ldi	r22, 0x08	; 8
    24a2:	70 e0       	ldi	r23, 0x00	; 0
    24a4:	87 e0       	ldi	r24, 0x07	; 7
    24a6:	90 e0       	ldi	r25, 0x00	; 0
    24a8:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <dist_comp>
	  //if (1 == which_material[i])
	  //{
		  //house_no = i;
	  //}
  //}
}
    24ac:	80 e0       	ldi	r24, 0x00	; 0
    24ae:	90 e0       	ldi	r25, 0x00	; 0
    24b0:	0f 90       	pop	r0
    24b2:	0f 90       	pop	r0
    24b4:	df 91       	pop	r29
    24b6:	cf 91       	pop	r28
    24b8:	1f 91       	pop	r17
    24ba:	0f 91       	pop	r16
    24bc:	ff 90       	pop	r15
    24be:	ef 90       	pop	r14
    24c0:	df 90       	pop	r13
    24c2:	cf 90       	pop	r12
    24c4:	bf 90       	pop	r11
    24c6:	af 90       	pop	r10
    24c8:	08 95       	ret

000024ca <__subsf3>:
    24ca:	50 58       	subi	r21, 0x80	; 128

000024cc <__addsf3>:
    24cc:	bb 27       	eor	r27, r27
    24ce:	aa 27       	eor	r26, r26
    24d0:	0e d0       	rcall	.+28     	; 0x24ee <__addsf3x>
    24d2:	48 c1       	rjmp	.+656    	; 0x2764 <__fp_round>
    24d4:	39 d1       	rcall	.+626    	; 0x2748 <__fp_pscA>
    24d6:	30 f0       	brcs	.+12     	; 0x24e4 <__addsf3+0x18>
    24d8:	3e d1       	rcall	.+636    	; 0x2756 <__fp_pscB>
    24da:	20 f0       	brcs	.+8      	; 0x24e4 <__addsf3+0x18>
    24dc:	31 f4       	brne	.+12     	; 0x24ea <__addsf3+0x1e>
    24de:	9f 3f       	cpi	r25, 0xFF	; 255
    24e0:	11 f4       	brne	.+4      	; 0x24e6 <__addsf3+0x1a>
    24e2:	1e f4       	brtc	.+6      	; 0x24ea <__addsf3+0x1e>
    24e4:	2e c1       	rjmp	.+604    	; 0x2742 <__fp_nan>
    24e6:	0e f4       	brtc	.+2      	; 0x24ea <__addsf3+0x1e>
    24e8:	e0 95       	com	r30
    24ea:	e7 fb       	bst	r30, 7
    24ec:	24 c1       	rjmp	.+584    	; 0x2736 <__fp_inf>

000024ee <__addsf3x>:
    24ee:	e9 2f       	mov	r30, r25
    24f0:	4a d1       	rcall	.+660    	; 0x2786 <__fp_split3>
    24f2:	80 f3       	brcs	.-32     	; 0x24d4 <__addsf3+0x8>
    24f4:	ba 17       	cp	r27, r26
    24f6:	62 07       	cpc	r22, r18
    24f8:	73 07       	cpc	r23, r19
    24fa:	84 07       	cpc	r24, r20
    24fc:	95 07       	cpc	r25, r21
    24fe:	18 f0       	brcs	.+6      	; 0x2506 <__addsf3x+0x18>
    2500:	71 f4       	brne	.+28     	; 0x251e <__addsf3x+0x30>
    2502:	9e f5       	brtc	.+102    	; 0x256a <__addsf3x+0x7c>
    2504:	62 c1       	rjmp	.+708    	; 0x27ca <__fp_zero>
    2506:	0e f4       	brtc	.+2      	; 0x250a <__addsf3x+0x1c>
    2508:	e0 95       	com	r30
    250a:	0b 2e       	mov	r0, r27
    250c:	ba 2f       	mov	r27, r26
    250e:	a0 2d       	mov	r26, r0
    2510:	0b 01       	movw	r0, r22
    2512:	b9 01       	movw	r22, r18
    2514:	90 01       	movw	r18, r0
    2516:	0c 01       	movw	r0, r24
    2518:	ca 01       	movw	r24, r20
    251a:	a0 01       	movw	r20, r0
    251c:	11 24       	eor	r1, r1
    251e:	ff 27       	eor	r31, r31
    2520:	59 1b       	sub	r21, r25
    2522:	99 f0       	breq	.+38     	; 0x254a <__addsf3x+0x5c>
    2524:	59 3f       	cpi	r21, 0xF9	; 249
    2526:	50 f4       	brcc	.+20     	; 0x253c <__addsf3x+0x4e>
    2528:	50 3e       	cpi	r21, 0xE0	; 224
    252a:	68 f1       	brcs	.+90     	; 0x2586 <__addsf3x+0x98>
    252c:	1a 16       	cp	r1, r26
    252e:	f0 40       	sbci	r31, 0x00	; 0
    2530:	a2 2f       	mov	r26, r18
    2532:	23 2f       	mov	r18, r19
    2534:	34 2f       	mov	r19, r20
    2536:	44 27       	eor	r20, r20
    2538:	58 5f       	subi	r21, 0xF8	; 248
    253a:	f3 cf       	rjmp	.-26     	; 0x2522 <__addsf3x+0x34>
    253c:	46 95       	lsr	r20
    253e:	37 95       	ror	r19
    2540:	27 95       	ror	r18
    2542:	a7 95       	ror	r26
    2544:	f0 40       	sbci	r31, 0x00	; 0
    2546:	53 95       	inc	r21
    2548:	c9 f7       	brne	.-14     	; 0x253c <__addsf3x+0x4e>
    254a:	7e f4       	brtc	.+30     	; 0x256a <__addsf3x+0x7c>
    254c:	1f 16       	cp	r1, r31
    254e:	ba 0b       	sbc	r27, r26
    2550:	62 0b       	sbc	r22, r18
    2552:	73 0b       	sbc	r23, r19
    2554:	84 0b       	sbc	r24, r20
    2556:	ba f0       	brmi	.+46     	; 0x2586 <__addsf3x+0x98>
    2558:	91 50       	subi	r25, 0x01	; 1
    255a:	a1 f0       	breq	.+40     	; 0x2584 <__addsf3x+0x96>
    255c:	ff 0f       	add	r31, r31
    255e:	bb 1f       	adc	r27, r27
    2560:	66 1f       	adc	r22, r22
    2562:	77 1f       	adc	r23, r23
    2564:	88 1f       	adc	r24, r24
    2566:	c2 f7       	brpl	.-16     	; 0x2558 <__addsf3x+0x6a>
    2568:	0e c0       	rjmp	.+28     	; 0x2586 <__addsf3x+0x98>
    256a:	ba 0f       	add	r27, r26
    256c:	62 1f       	adc	r22, r18
    256e:	73 1f       	adc	r23, r19
    2570:	84 1f       	adc	r24, r20
    2572:	48 f4       	brcc	.+18     	; 0x2586 <__addsf3x+0x98>
    2574:	87 95       	ror	r24
    2576:	77 95       	ror	r23
    2578:	67 95       	ror	r22
    257a:	b7 95       	ror	r27
    257c:	f7 95       	ror	r31
    257e:	9e 3f       	cpi	r25, 0xFE	; 254
    2580:	08 f0       	brcs	.+2      	; 0x2584 <__addsf3x+0x96>
    2582:	b3 cf       	rjmp	.-154    	; 0x24ea <__addsf3+0x1e>
    2584:	93 95       	inc	r25
    2586:	88 0f       	add	r24, r24
    2588:	08 f0       	brcs	.+2      	; 0x258c <__addsf3x+0x9e>
    258a:	99 27       	eor	r25, r25
    258c:	ee 0f       	add	r30, r30
    258e:	97 95       	ror	r25
    2590:	87 95       	ror	r24
    2592:	08 95       	ret

00002594 <__divsf3>:
    2594:	0c d0       	rcall	.+24     	; 0x25ae <__divsf3x>
    2596:	e6 c0       	rjmp	.+460    	; 0x2764 <__fp_round>
    2598:	de d0       	rcall	.+444    	; 0x2756 <__fp_pscB>
    259a:	40 f0       	brcs	.+16     	; 0x25ac <__divsf3+0x18>
    259c:	d5 d0       	rcall	.+426    	; 0x2748 <__fp_pscA>
    259e:	30 f0       	brcs	.+12     	; 0x25ac <__divsf3+0x18>
    25a0:	21 f4       	brne	.+8      	; 0x25aa <__divsf3+0x16>
    25a2:	5f 3f       	cpi	r21, 0xFF	; 255
    25a4:	19 f0       	breq	.+6      	; 0x25ac <__divsf3+0x18>
    25a6:	c7 c0       	rjmp	.+398    	; 0x2736 <__fp_inf>
    25a8:	51 11       	cpse	r21, r1
    25aa:	10 c1       	rjmp	.+544    	; 0x27cc <__fp_szero>
    25ac:	ca c0       	rjmp	.+404    	; 0x2742 <__fp_nan>

000025ae <__divsf3x>:
    25ae:	eb d0       	rcall	.+470    	; 0x2786 <__fp_split3>
    25b0:	98 f3       	brcs	.-26     	; 0x2598 <__divsf3+0x4>

000025b2 <__divsf3_pse>:
    25b2:	99 23       	and	r25, r25
    25b4:	c9 f3       	breq	.-14     	; 0x25a8 <__divsf3+0x14>
    25b6:	55 23       	and	r21, r21
    25b8:	b1 f3       	breq	.-20     	; 0x25a6 <__divsf3+0x12>
    25ba:	95 1b       	sub	r25, r21
    25bc:	55 0b       	sbc	r21, r21
    25be:	bb 27       	eor	r27, r27
    25c0:	aa 27       	eor	r26, r26
    25c2:	62 17       	cp	r22, r18
    25c4:	73 07       	cpc	r23, r19
    25c6:	84 07       	cpc	r24, r20
    25c8:	38 f0       	brcs	.+14     	; 0x25d8 <__divsf3_pse+0x26>
    25ca:	9f 5f       	subi	r25, 0xFF	; 255
    25cc:	5f 4f       	sbci	r21, 0xFF	; 255
    25ce:	22 0f       	add	r18, r18
    25d0:	33 1f       	adc	r19, r19
    25d2:	44 1f       	adc	r20, r20
    25d4:	aa 1f       	adc	r26, r26
    25d6:	a9 f3       	breq	.-22     	; 0x25c2 <__divsf3_pse+0x10>
    25d8:	33 d0       	rcall	.+102    	; 0x2640 <__divsf3_pse+0x8e>
    25da:	0e 2e       	mov	r0, r30
    25dc:	3a f0       	brmi	.+14     	; 0x25ec <__divsf3_pse+0x3a>
    25de:	e0 e8       	ldi	r30, 0x80	; 128
    25e0:	30 d0       	rcall	.+96     	; 0x2642 <__divsf3_pse+0x90>
    25e2:	91 50       	subi	r25, 0x01	; 1
    25e4:	50 40       	sbci	r21, 0x00	; 0
    25e6:	e6 95       	lsr	r30
    25e8:	00 1c       	adc	r0, r0
    25ea:	ca f7       	brpl	.-14     	; 0x25de <__divsf3_pse+0x2c>
    25ec:	29 d0       	rcall	.+82     	; 0x2640 <__divsf3_pse+0x8e>
    25ee:	fe 2f       	mov	r31, r30
    25f0:	27 d0       	rcall	.+78     	; 0x2640 <__divsf3_pse+0x8e>
    25f2:	66 0f       	add	r22, r22
    25f4:	77 1f       	adc	r23, r23
    25f6:	88 1f       	adc	r24, r24
    25f8:	bb 1f       	adc	r27, r27
    25fa:	26 17       	cp	r18, r22
    25fc:	37 07       	cpc	r19, r23
    25fe:	48 07       	cpc	r20, r24
    2600:	ab 07       	cpc	r26, r27
    2602:	b0 e8       	ldi	r27, 0x80	; 128
    2604:	09 f0       	breq	.+2      	; 0x2608 <__divsf3_pse+0x56>
    2606:	bb 0b       	sbc	r27, r27
    2608:	80 2d       	mov	r24, r0
    260a:	bf 01       	movw	r22, r30
    260c:	ff 27       	eor	r31, r31
    260e:	93 58       	subi	r25, 0x83	; 131
    2610:	5f 4f       	sbci	r21, 0xFF	; 255
    2612:	2a f0       	brmi	.+10     	; 0x261e <__divsf3_pse+0x6c>
    2614:	9e 3f       	cpi	r25, 0xFE	; 254
    2616:	51 05       	cpc	r21, r1
    2618:	68 f0       	brcs	.+26     	; 0x2634 <__divsf3_pse+0x82>
    261a:	8d c0       	rjmp	.+282    	; 0x2736 <__fp_inf>
    261c:	d7 c0       	rjmp	.+430    	; 0x27cc <__fp_szero>
    261e:	5f 3f       	cpi	r21, 0xFF	; 255
    2620:	ec f3       	brlt	.-6      	; 0x261c <__divsf3_pse+0x6a>
    2622:	98 3e       	cpi	r25, 0xE8	; 232
    2624:	dc f3       	brlt	.-10     	; 0x261c <__divsf3_pse+0x6a>
    2626:	86 95       	lsr	r24
    2628:	77 95       	ror	r23
    262a:	67 95       	ror	r22
    262c:	b7 95       	ror	r27
    262e:	f7 95       	ror	r31
    2630:	9f 5f       	subi	r25, 0xFF	; 255
    2632:	c9 f7       	brne	.-14     	; 0x2626 <__divsf3_pse+0x74>
    2634:	88 0f       	add	r24, r24
    2636:	91 1d       	adc	r25, r1
    2638:	96 95       	lsr	r25
    263a:	87 95       	ror	r24
    263c:	97 f9       	bld	r25, 7
    263e:	08 95       	ret
    2640:	e1 e0       	ldi	r30, 0x01	; 1
    2642:	66 0f       	add	r22, r22
    2644:	77 1f       	adc	r23, r23
    2646:	88 1f       	adc	r24, r24
    2648:	bb 1f       	adc	r27, r27
    264a:	62 17       	cp	r22, r18
    264c:	73 07       	cpc	r23, r19
    264e:	84 07       	cpc	r24, r20
    2650:	ba 07       	cpc	r27, r26
    2652:	20 f0       	brcs	.+8      	; 0x265c <__divsf3_pse+0xaa>
    2654:	62 1b       	sub	r22, r18
    2656:	73 0b       	sbc	r23, r19
    2658:	84 0b       	sbc	r24, r20
    265a:	ba 0b       	sbc	r27, r26
    265c:	ee 1f       	adc	r30, r30
    265e:	88 f7       	brcc	.-30     	; 0x2642 <__divsf3_pse+0x90>
    2660:	e0 95       	com	r30
    2662:	08 95       	ret

00002664 <__fixunssfsi>:
    2664:	98 d0       	rcall	.+304    	; 0x2796 <__fp_splitA>
    2666:	88 f0       	brcs	.+34     	; 0x268a <__fixunssfsi+0x26>
    2668:	9f 57       	subi	r25, 0x7F	; 127
    266a:	90 f0       	brcs	.+36     	; 0x2690 <__fixunssfsi+0x2c>
    266c:	b9 2f       	mov	r27, r25
    266e:	99 27       	eor	r25, r25
    2670:	b7 51       	subi	r27, 0x17	; 23
    2672:	a0 f0       	brcs	.+40     	; 0x269c <__fixunssfsi+0x38>
    2674:	d1 f0       	breq	.+52     	; 0x26aa <__fixunssfsi+0x46>
    2676:	66 0f       	add	r22, r22
    2678:	77 1f       	adc	r23, r23
    267a:	88 1f       	adc	r24, r24
    267c:	99 1f       	adc	r25, r25
    267e:	1a f0       	brmi	.+6      	; 0x2686 <__fixunssfsi+0x22>
    2680:	ba 95       	dec	r27
    2682:	c9 f7       	brne	.-14     	; 0x2676 <__fixunssfsi+0x12>
    2684:	12 c0       	rjmp	.+36     	; 0x26aa <__fixunssfsi+0x46>
    2686:	b1 30       	cpi	r27, 0x01	; 1
    2688:	81 f0       	breq	.+32     	; 0x26aa <__fixunssfsi+0x46>
    268a:	9f d0       	rcall	.+318    	; 0x27ca <__fp_zero>
    268c:	b1 e0       	ldi	r27, 0x01	; 1
    268e:	08 95       	ret
    2690:	9c c0       	rjmp	.+312    	; 0x27ca <__fp_zero>
    2692:	67 2f       	mov	r22, r23
    2694:	78 2f       	mov	r23, r24
    2696:	88 27       	eor	r24, r24
    2698:	b8 5f       	subi	r27, 0xF8	; 248
    269a:	39 f0       	breq	.+14     	; 0x26aa <__fixunssfsi+0x46>
    269c:	b9 3f       	cpi	r27, 0xF9	; 249
    269e:	cc f3       	brlt	.-14     	; 0x2692 <__fixunssfsi+0x2e>
    26a0:	86 95       	lsr	r24
    26a2:	77 95       	ror	r23
    26a4:	67 95       	ror	r22
    26a6:	b3 95       	inc	r27
    26a8:	d9 f7       	brne	.-10     	; 0x26a0 <__fixunssfsi+0x3c>
    26aa:	3e f4       	brtc	.+14     	; 0x26ba <__fixunssfsi+0x56>
    26ac:	90 95       	com	r25
    26ae:	80 95       	com	r24
    26b0:	70 95       	com	r23
    26b2:	61 95       	neg	r22
    26b4:	7f 4f       	sbci	r23, 0xFF	; 255
    26b6:	8f 4f       	sbci	r24, 0xFF	; 255
    26b8:	9f 4f       	sbci	r25, 0xFF	; 255
    26ba:	08 95       	ret

000026bc <__floatunsisf>:
    26bc:	e8 94       	clt
    26be:	09 c0       	rjmp	.+18     	; 0x26d2 <__floatsisf+0x12>

000026c0 <__floatsisf>:
    26c0:	97 fb       	bst	r25, 7
    26c2:	3e f4       	brtc	.+14     	; 0x26d2 <__floatsisf+0x12>
    26c4:	90 95       	com	r25
    26c6:	80 95       	com	r24
    26c8:	70 95       	com	r23
    26ca:	61 95       	neg	r22
    26cc:	7f 4f       	sbci	r23, 0xFF	; 255
    26ce:	8f 4f       	sbci	r24, 0xFF	; 255
    26d0:	9f 4f       	sbci	r25, 0xFF	; 255
    26d2:	99 23       	and	r25, r25
    26d4:	a9 f0       	breq	.+42     	; 0x2700 <__floatsisf+0x40>
    26d6:	f9 2f       	mov	r31, r25
    26d8:	96 e9       	ldi	r25, 0x96	; 150
    26da:	bb 27       	eor	r27, r27
    26dc:	93 95       	inc	r25
    26de:	f6 95       	lsr	r31
    26e0:	87 95       	ror	r24
    26e2:	77 95       	ror	r23
    26e4:	67 95       	ror	r22
    26e6:	b7 95       	ror	r27
    26e8:	f1 11       	cpse	r31, r1
    26ea:	f8 cf       	rjmp	.-16     	; 0x26dc <__floatsisf+0x1c>
    26ec:	fa f4       	brpl	.+62     	; 0x272c <__floatsisf+0x6c>
    26ee:	bb 0f       	add	r27, r27
    26f0:	11 f4       	brne	.+4      	; 0x26f6 <__floatsisf+0x36>
    26f2:	60 ff       	sbrs	r22, 0
    26f4:	1b c0       	rjmp	.+54     	; 0x272c <__floatsisf+0x6c>
    26f6:	6f 5f       	subi	r22, 0xFF	; 255
    26f8:	7f 4f       	sbci	r23, 0xFF	; 255
    26fa:	8f 4f       	sbci	r24, 0xFF	; 255
    26fc:	9f 4f       	sbci	r25, 0xFF	; 255
    26fe:	16 c0       	rjmp	.+44     	; 0x272c <__floatsisf+0x6c>
    2700:	88 23       	and	r24, r24
    2702:	11 f0       	breq	.+4      	; 0x2708 <__floatsisf+0x48>
    2704:	96 e9       	ldi	r25, 0x96	; 150
    2706:	11 c0       	rjmp	.+34     	; 0x272a <__floatsisf+0x6a>
    2708:	77 23       	and	r23, r23
    270a:	21 f0       	breq	.+8      	; 0x2714 <__floatsisf+0x54>
    270c:	9e e8       	ldi	r25, 0x8E	; 142
    270e:	87 2f       	mov	r24, r23
    2710:	76 2f       	mov	r23, r22
    2712:	05 c0       	rjmp	.+10     	; 0x271e <__floatsisf+0x5e>
    2714:	66 23       	and	r22, r22
    2716:	71 f0       	breq	.+28     	; 0x2734 <__floatsisf+0x74>
    2718:	96 e8       	ldi	r25, 0x86	; 134
    271a:	86 2f       	mov	r24, r22
    271c:	70 e0       	ldi	r23, 0x00	; 0
    271e:	60 e0       	ldi	r22, 0x00	; 0
    2720:	2a f0       	brmi	.+10     	; 0x272c <__floatsisf+0x6c>
    2722:	9a 95       	dec	r25
    2724:	66 0f       	add	r22, r22
    2726:	77 1f       	adc	r23, r23
    2728:	88 1f       	adc	r24, r24
    272a:	da f7       	brpl	.-10     	; 0x2722 <__floatsisf+0x62>
    272c:	88 0f       	add	r24, r24
    272e:	96 95       	lsr	r25
    2730:	87 95       	ror	r24
    2732:	97 f9       	bld	r25, 7
    2734:	08 95       	ret

00002736 <__fp_inf>:
    2736:	97 f9       	bld	r25, 7
    2738:	9f 67       	ori	r25, 0x7F	; 127
    273a:	80 e8       	ldi	r24, 0x80	; 128
    273c:	70 e0       	ldi	r23, 0x00	; 0
    273e:	60 e0       	ldi	r22, 0x00	; 0
    2740:	08 95       	ret

00002742 <__fp_nan>:
    2742:	9f ef       	ldi	r25, 0xFF	; 255
    2744:	80 ec       	ldi	r24, 0xC0	; 192
    2746:	08 95       	ret

00002748 <__fp_pscA>:
    2748:	00 24       	eor	r0, r0
    274a:	0a 94       	dec	r0
    274c:	16 16       	cp	r1, r22
    274e:	17 06       	cpc	r1, r23
    2750:	18 06       	cpc	r1, r24
    2752:	09 06       	cpc	r0, r25
    2754:	08 95       	ret

00002756 <__fp_pscB>:
    2756:	00 24       	eor	r0, r0
    2758:	0a 94       	dec	r0
    275a:	12 16       	cp	r1, r18
    275c:	13 06       	cpc	r1, r19
    275e:	14 06       	cpc	r1, r20
    2760:	05 06       	cpc	r0, r21
    2762:	08 95       	ret

00002764 <__fp_round>:
    2764:	09 2e       	mov	r0, r25
    2766:	03 94       	inc	r0
    2768:	00 0c       	add	r0, r0
    276a:	11 f4       	brne	.+4      	; 0x2770 <__fp_round+0xc>
    276c:	88 23       	and	r24, r24
    276e:	52 f0       	brmi	.+20     	; 0x2784 <__fp_round+0x20>
    2770:	bb 0f       	add	r27, r27
    2772:	40 f4       	brcc	.+16     	; 0x2784 <__fp_round+0x20>
    2774:	bf 2b       	or	r27, r31
    2776:	11 f4       	brne	.+4      	; 0x277c <__fp_round+0x18>
    2778:	60 ff       	sbrs	r22, 0
    277a:	04 c0       	rjmp	.+8      	; 0x2784 <__fp_round+0x20>
    277c:	6f 5f       	subi	r22, 0xFF	; 255
    277e:	7f 4f       	sbci	r23, 0xFF	; 255
    2780:	8f 4f       	sbci	r24, 0xFF	; 255
    2782:	9f 4f       	sbci	r25, 0xFF	; 255
    2784:	08 95       	ret

00002786 <__fp_split3>:
    2786:	57 fd       	sbrc	r21, 7
    2788:	90 58       	subi	r25, 0x80	; 128
    278a:	44 0f       	add	r20, r20
    278c:	55 1f       	adc	r21, r21
    278e:	59 f0       	breq	.+22     	; 0x27a6 <__fp_splitA+0x10>
    2790:	5f 3f       	cpi	r21, 0xFF	; 255
    2792:	71 f0       	breq	.+28     	; 0x27b0 <__fp_splitA+0x1a>
    2794:	47 95       	ror	r20

00002796 <__fp_splitA>:
    2796:	88 0f       	add	r24, r24
    2798:	97 fb       	bst	r25, 7
    279a:	99 1f       	adc	r25, r25
    279c:	61 f0       	breq	.+24     	; 0x27b6 <__fp_splitA+0x20>
    279e:	9f 3f       	cpi	r25, 0xFF	; 255
    27a0:	79 f0       	breq	.+30     	; 0x27c0 <__fp_splitA+0x2a>
    27a2:	87 95       	ror	r24
    27a4:	08 95       	ret
    27a6:	12 16       	cp	r1, r18
    27a8:	13 06       	cpc	r1, r19
    27aa:	14 06       	cpc	r1, r20
    27ac:	55 1f       	adc	r21, r21
    27ae:	f2 cf       	rjmp	.-28     	; 0x2794 <__fp_split3+0xe>
    27b0:	46 95       	lsr	r20
    27b2:	f1 df       	rcall	.-30     	; 0x2796 <__fp_splitA>
    27b4:	08 c0       	rjmp	.+16     	; 0x27c6 <__fp_splitA+0x30>
    27b6:	16 16       	cp	r1, r22
    27b8:	17 06       	cpc	r1, r23
    27ba:	18 06       	cpc	r1, r24
    27bc:	99 1f       	adc	r25, r25
    27be:	f1 cf       	rjmp	.-30     	; 0x27a2 <__fp_splitA+0xc>
    27c0:	86 95       	lsr	r24
    27c2:	71 05       	cpc	r23, r1
    27c4:	61 05       	cpc	r22, r1
    27c6:	08 94       	sec
    27c8:	08 95       	ret

000027ca <__fp_zero>:
    27ca:	e8 94       	clt

000027cc <__fp_szero>:
    27cc:	bb 27       	eor	r27, r27
    27ce:	66 27       	eor	r22, r22
    27d0:	77 27       	eor	r23, r23
    27d2:	cb 01       	movw	r24, r22
    27d4:	97 f9       	bld	r25, 7
    27d6:	08 95       	ret

000027d8 <__umulhisi3>:
    27d8:	a2 9f       	mul	r26, r18
    27da:	b0 01       	movw	r22, r0
    27dc:	b3 9f       	mul	r27, r19
    27de:	c0 01       	movw	r24, r0
    27e0:	a3 9f       	mul	r26, r19
    27e2:	70 0d       	add	r23, r0
    27e4:	81 1d       	adc	r24, r1
    27e6:	11 24       	eor	r1, r1
    27e8:	91 1d       	adc	r25, r1
    27ea:	b2 9f       	mul	r27, r18
    27ec:	70 0d       	add	r23, r0
    27ee:	81 1d       	adc	r24, r1
    27f0:	11 24       	eor	r1, r1
    27f2:	91 1d       	adc	r25, r1
    27f4:	08 95       	ret

000027f6 <malloc>:
    27f6:	cf 93       	push	r28
    27f8:	df 93       	push	r29
    27fa:	82 30       	cpi	r24, 0x02	; 2
    27fc:	91 05       	cpc	r25, r1
    27fe:	10 f4       	brcc	.+4      	; 0x2804 <malloc+0xe>
    2800:	82 e0       	ldi	r24, 0x02	; 2
    2802:	90 e0       	ldi	r25, 0x00	; 0
    2804:	e0 91 44 05 	lds	r30, 0x0544
    2808:	f0 91 45 05 	lds	r31, 0x0545
    280c:	20 e0       	ldi	r18, 0x00	; 0
    280e:	30 e0       	ldi	r19, 0x00	; 0
    2810:	a0 e0       	ldi	r26, 0x00	; 0
    2812:	b0 e0       	ldi	r27, 0x00	; 0
    2814:	30 97       	sbiw	r30, 0x00	; 0
    2816:	39 f1       	breq	.+78     	; 0x2866 <malloc+0x70>
    2818:	40 81       	ld	r20, Z
    281a:	51 81       	ldd	r21, Z+1	; 0x01
    281c:	48 17       	cp	r20, r24
    281e:	59 07       	cpc	r21, r25
    2820:	b8 f0       	brcs	.+46     	; 0x2850 <malloc+0x5a>
    2822:	48 17       	cp	r20, r24
    2824:	59 07       	cpc	r21, r25
    2826:	71 f4       	brne	.+28     	; 0x2844 <malloc+0x4e>
    2828:	82 81       	ldd	r24, Z+2	; 0x02
    282a:	93 81       	ldd	r25, Z+3	; 0x03
    282c:	10 97       	sbiw	r26, 0x00	; 0
    282e:	29 f0       	breq	.+10     	; 0x283a <malloc+0x44>
    2830:	13 96       	adiw	r26, 0x03	; 3
    2832:	9c 93       	st	X, r25
    2834:	8e 93       	st	-X, r24
    2836:	12 97       	sbiw	r26, 0x02	; 2
    2838:	2c c0       	rjmp	.+88     	; 0x2892 <malloc+0x9c>
    283a:	90 93 45 05 	sts	0x0545, r25
    283e:	80 93 44 05 	sts	0x0544, r24
    2842:	27 c0       	rjmp	.+78     	; 0x2892 <malloc+0x9c>
    2844:	21 15       	cp	r18, r1
    2846:	31 05       	cpc	r19, r1
    2848:	31 f0       	breq	.+12     	; 0x2856 <malloc+0x60>
    284a:	42 17       	cp	r20, r18
    284c:	53 07       	cpc	r21, r19
    284e:	18 f0       	brcs	.+6      	; 0x2856 <malloc+0x60>
    2850:	a9 01       	movw	r20, r18
    2852:	db 01       	movw	r26, r22
    2854:	01 c0       	rjmp	.+2      	; 0x2858 <malloc+0x62>
    2856:	ef 01       	movw	r28, r30
    2858:	9a 01       	movw	r18, r20
    285a:	bd 01       	movw	r22, r26
    285c:	df 01       	movw	r26, r30
    285e:	02 80       	ldd	r0, Z+2	; 0x02
    2860:	f3 81       	ldd	r31, Z+3	; 0x03
    2862:	e0 2d       	mov	r30, r0
    2864:	d7 cf       	rjmp	.-82     	; 0x2814 <malloc+0x1e>
    2866:	21 15       	cp	r18, r1
    2868:	31 05       	cpc	r19, r1
    286a:	f9 f0       	breq	.+62     	; 0x28aa <malloc+0xb4>
    286c:	28 1b       	sub	r18, r24
    286e:	39 0b       	sbc	r19, r25
    2870:	24 30       	cpi	r18, 0x04	; 4
    2872:	31 05       	cpc	r19, r1
    2874:	80 f4       	brcc	.+32     	; 0x2896 <malloc+0xa0>
    2876:	8a 81       	ldd	r24, Y+2	; 0x02
    2878:	9b 81       	ldd	r25, Y+3	; 0x03
    287a:	61 15       	cp	r22, r1
    287c:	71 05       	cpc	r23, r1
    287e:	21 f0       	breq	.+8      	; 0x2888 <malloc+0x92>
    2880:	fb 01       	movw	r30, r22
    2882:	93 83       	std	Z+3, r25	; 0x03
    2884:	82 83       	std	Z+2, r24	; 0x02
    2886:	04 c0       	rjmp	.+8      	; 0x2890 <malloc+0x9a>
    2888:	90 93 45 05 	sts	0x0545, r25
    288c:	80 93 44 05 	sts	0x0544, r24
    2890:	fe 01       	movw	r30, r28
    2892:	32 96       	adiw	r30, 0x02	; 2
    2894:	44 c0       	rjmp	.+136    	; 0x291e <malloc+0x128>
    2896:	fe 01       	movw	r30, r28
    2898:	e2 0f       	add	r30, r18
    289a:	f3 1f       	adc	r31, r19
    289c:	81 93       	st	Z+, r24
    289e:	91 93       	st	Z+, r25
    28a0:	22 50       	subi	r18, 0x02	; 2
    28a2:	31 09       	sbc	r19, r1
    28a4:	39 83       	std	Y+1, r19	; 0x01
    28a6:	28 83       	st	Y, r18
    28a8:	3a c0       	rjmp	.+116    	; 0x291e <malloc+0x128>
    28aa:	20 91 42 05 	lds	r18, 0x0542
    28ae:	30 91 43 05 	lds	r19, 0x0543
    28b2:	23 2b       	or	r18, r19
    28b4:	41 f4       	brne	.+16     	; 0x28c6 <malloc+0xd0>
    28b6:	20 91 02 02 	lds	r18, 0x0202
    28ba:	30 91 03 02 	lds	r19, 0x0203
    28be:	30 93 43 05 	sts	0x0543, r19
    28c2:	20 93 42 05 	sts	0x0542, r18
    28c6:	20 91 00 02 	lds	r18, 0x0200
    28ca:	30 91 01 02 	lds	r19, 0x0201
    28ce:	21 15       	cp	r18, r1
    28d0:	31 05       	cpc	r19, r1
    28d2:	41 f4       	brne	.+16     	; 0x28e4 <malloc+0xee>
    28d4:	2d b7       	in	r18, 0x3d	; 61
    28d6:	3e b7       	in	r19, 0x3e	; 62
    28d8:	40 91 04 02 	lds	r20, 0x0204
    28dc:	50 91 05 02 	lds	r21, 0x0205
    28e0:	24 1b       	sub	r18, r20
    28e2:	35 0b       	sbc	r19, r21
    28e4:	e0 91 42 05 	lds	r30, 0x0542
    28e8:	f0 91 43 05 	lds	r31, 0x0543
    28ec:	e2 17       	cp	r30, r18
    28ee:	f3 07       	cpc	r31, r19
    28f0:	a0 f4       	brcc	.+40     	; 0x291a <malloc+0x124>
    28f2:	2e 1b       	sub	r18, r30
    28f4:	3f 0b       	sbc	r19, r31
    28f6:	28 17       	cp	r18, r24
    28f8:	39 07       	cpc	r19, r25
    28fa:	78 f0       	brcs	.+30     	; 0x291a <malloc+0x124>
    28fc:	ac 01       	movw	r20, r24
    28fe:	4e 5f       	subi	r20, 0xFE	; 254
    2900:	5f 4f       	sbci	r21, 0xFF	; 255
    2902:	24 17       	cp	r18, r20
    2904:	35 07       	cpc	r19, r21
    2906:	48 f0       	brcs	.+18     	; 0x291a <malloc+0x124>
    2908:	4e 0f       	add	r20, r30
    290a:	5f 1f       	adc	r21, r31
    290c:	50 93 43 05 	sts	0x0543, r21
    2910:	40 93 42 05 	sts	0x0542, r20
    2914:	81 93       	st	Z+, r24
    2916:	91 93       	st	Z+, r25
    2918:	02 c0       	rjmp	.+4      	; 0x291e <malloc+0x128>
    291a:	e0 e0       	ldi	r30, 0x00	; 0
    291c:	f0 e0       	ldi	r31, 0x00	; 0
    291e:	cf 01       	movw	r24, r30
    2920:	df 91       	pop	r29
    2922:	cf 91       	pop	r28
    2924:	08 95       	ret

00002926 <free>:
    2926:	cf 93       	push	r28
    2928:	df 93       	push	r29
    292a:	00 97       	sbiw	r24, 0x00	; 0
    292c:	09 f4       	brne	.+2      	; 0x2930 <free+0xa>
    292e:	87 c0       	rjmp	.+270    	; 0x2a3e <free+0x118>
    2930:	fc 01       	movw	r30, r24
    2932:	32 97       	sbiw	r30, 0x02	; 2
    2934:	13 82       	std	Z+3, r1	; 0x03
    2936:	12 82       	std	Z+2, r1	; 0x02
    2938:	c0 91 44 05 	lds	r28, 0x0544
    293c:	d0 91 45 05 	lds	r29, 0x0545
    2940:	20 97       	sbiw	r28, 0x00	; 0
    2942:	81 f4       	brne	.+32     	; 0x2964 <free+0x3e>
    2944:	20 81       	ld	r18, Z
    2946:	31 81       	ldd	r19, Z+1	; 0x01
    2948:	28 0f       	add	r18, r24
    294a:	39 1f       	adc	r19, r25
    294c:	80 91 42 05 	lds	r24, 0x0542
    2950:	90 91 43 05 	lds	r25, 0x0543
    2954:	82 17       	cp	r24, r18
    2956:	93 07       	cpc	r25, r19
    2958:	79 f5       	brne	.+94     	; 0x29b8 <free+0x92>
    295a:	f0 93 43 05 	sts	0x0543, r31
    295e:	e0 93 42 05 	sts	0x0542, r30
    2962:	6d c0       	rjmp	.+218    	; 0x2a3e <free+0x118>
    2964:	de 01       	movw	r26, r28
    2966:	20 e0       	ldi	r18, 0x00	; 0
    2968:	30 e0       	ldi	r19, 0x00	; 0
    296a:	ae 17       	cp	r26, r30
    296c:	bf 07       	cpc	r27, r31
    296e:	50 f4       	brcc	.+20     	; 0x2984 <free+0x5e>
    2970:	12 96       	adiw	r26, 0x02	; 2
    2972:	4d 91       	ld	r20, X+
    2974:	5c 91       	ld	r21, X
    2976:	13 97       	sbiw	r26, 0x03	; 3
    2978:	9d 01       	movw	r18, r26
    297a:	41 15       	cp	r20, r1
    297c:	51 05       	cpc	r21, r1
    297e:	09 f1       	breq	.+66     	; 0x29c2 <free+0x9c>
    2980:	da 01       	movw	r26, r20
    2982:	f3 cf       	rjmp	.-26     	; 0x296a <free+0x44>
    2984:	b3 83       	std	Z+3, r27	; 0x03
    2986:	a2 83       	std	Z+2, r26	; 0x02
    2988:	40 81       	ld	r20, Z
    298a:	51 81       	ldd	r21, Z+1	; 0x01
    298c:	84 0f       	add	r24, r20
    298e:	95 1f       	adc	r25, r21
    2990:	8a 17       	cp	r24, r26
    2992:	9b 07       	cpc	r25, r27
    2994:	71 f4       	brne	.+28     	; 0x29b2 <free+0x8c>
    2996:	8d 91       	ld	r24, X+
    2998:	9c 91       	ld	r25, X
    299a:	11 97       	sbiw	r26, 0x01	; 1
    299c:	84 0f       	add	r24, r20
    299e:	95 1f       	adc	r25, r21
    29a0:	02 96       	adiw	r24, 0x02	; 2
    29a2:	91 83       	std	Z+1, r25	; 0x01
    29a4:	80 83       	st	Z, r24
    29a6:	12 96       	adiw	r26, 0x02	; 2
    29a8:	8d 91       	ld	r24, X+
    29aa:	9c 91       	ld	r25, X
    29ac:	13 97       	sbiw	r26, 0x03	; 3
    29ae:	93 83       	std	Z+3, r25	; 0x03
    29b0:	82 83       	std	Z+2, r24	; 0x02
    29b2:	21 15       	cp	r18, r1
    29b4:	31 05       	cpc	r19, r1
    29b6:	29 f4       	brne	.+10     	; 0x29c2 <free+0x9c>
    29b8:	f0 93 45 05 	sts	0x0545, r31
    29bc:	e0 93 44 05 	sts	0x0544, r30
    29c0:	3e c0       	rjmp	.+124    	; 0x2a3e <free+0x118>
    29c2:	d9 01       	movw	r26, r18
    29c4:	13 96       	adiw	r26, 0x03	; 3
    29c6:	fc 93       	st	X, r31
    29c8:	ee 93       	st	-X, r30
    29ca:	12 97       	sbiw	r26, 0x02	; 2
    29cc:	4d 91       	ld	r20, X+
    29ce:	5d 91       	ld	r21, X+
    29d0:	a4 0f       	add	r26, r20
    29d2:	b5 1f       	adc	r27, r21
    29d4:	ea 17       	cp	r30, r26
    29d6:	fb 07       	cpc	r31, r27
    29d8:	79 f4       	brne	.+30     	; 0x29f8 <free+0xd2>
    29da:	80 81       	ld	r24, Z
    29dc:	91 81       	ldd	r25, Z+1	; 0x01
    29de:	84 0f       	add	r24, r20
    29e0:	95 1f       	adc	r25, r21
    29e2:	02 96       	adiw	r24, 0x02	; 2
    29e4:	d9 01       	movw	r26, r18
    29e6:	11 96       	adiw	r26, 0x01	; 1
    29e8:	9c 93       	st	X, r25
    29ea:	8e 93       	st	-X, r24
    29ec:	82 81       	ldd	r24, Z+2	; 0x02
    29ee:	93 81       	ldd	r25, Z+3	; 0x03
    29f0:	13 96       	adiw	r26, 0x03	; 3
    29f2:	9c 93       	st	X, r25
    29f4:	8e 93       	st	-X, r24
    29f6:	12 97       	sbiw	r26, 0x02	; 2
    29f8:	e0 e0       	ldi	r30, 0x00	; 0
    29fa:	f0 e0       	ldi	r31, 0x00	; 0
    29fc:	8a 81       	ldd	r24, Y+2	; 0x02
    29fe:	9b 81       	ldd	r25, Y+3	; 0x03
    2a00:	00 97       	sbiw	r24, 0x00	; 0
    2a02:	19 f0       	breq	.+6      	; 0x2a0a <free+0xe4>
    2a04:	fe 01       	movw	r30, r28
    2a06:	ec 01       	movw	r28, r24
    2a08:	f9 cf       	rjmp	.-14     	; 0x29fc <free+0xd6>
    2a0a:	ce 01       	movw	r24, r28
    2a0c:	02 96       	adiw	r24, 0x02	; 2
    2a0e:	28 81       	ld	r18, Y
    2a10:	39 81       	ldd	r19, Y+1	; 0x01
    2a12:	82 0f       	add	r24, r18
    2a14:	93 1f       	adc	r25, r19
    2a16:	20 91 42 05 	lds	r18, 0x0542
    2a1a:	30 91 43 05 	lds	r19, 0x0543
    2a1e:	28 17       	cp	r18, r24
    2a20:	39 07       	cpc	r19, r25
    2a22:	69 f4       	brne	.+26     	; 0x2a3e <free+0x118>
    2a24:	30 97       	sbiw	r30, 0x00	; 0
    2a26:	29 f4       	brne	.+10     	; 0x2a32 <free+0x10c>
    2a28:	10 92 45 05 	sts	0x0545, r1
    2a2c:	10 92 44 05 	sts	0x0544, r1
    2a30:	02 c0       	rjmp	.+4      	; 0x2a36 <free+0x110>
    2a32:	13 82       	std	Z+3, r1	; 0x03
    2a34:	12 82       	std	Z+2, r1	; 0x02
    2a36:	d0 93 43 05 	sts	0x0543, r29
    2a3a:	c0 93 42 05 	sts	0x0542, r28
    2a3e:	df 91       	pop	r29
    2a40:	cf 91       	pop	r28
    2a42:	08 95       	ret

00002a44 <_exit>:
    2a44:	f8 94       	cli

00002a46 <__stop_program>:
    2a46:	ff cf       	rjmp	.-2      	; 0x2a46 <__stop_program>
