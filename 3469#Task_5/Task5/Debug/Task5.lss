
Task5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000005a  00800200  000005a4  00000638  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005a4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000005c  0080025a  0080025a  00000692  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000692  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000290  00000000  00000000  000006c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00005bf7  00000000  00000000  00000952  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000459  00000000  00000000  00006549  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000324a  00000000  00000000  000069a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000006e4  00000000  00000000  00009bec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006e3  00000000  00000000  0000a2d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000031d0  00000000  00000000  0000a9b3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000002c8  00000000  00000000  0000db83  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	d7 c1       	rjmp	.+942    	; 0x3c4 <__vector_5>
  16:	00 00       	nop
  18:	b0 c1       	rjmp	.+864    	; 0x37a <__vector_6>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e4 ea       	ldi	r30, 0xA4	; 164
  fc:	f5 e0       	ldi	r31, 0x05	; 5
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	aa 35       	cpi	r26, 0x5A	; 90
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	aa e5       	ldi	r26, 0x5A	; 90
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a6 3b       	cpi	r26, 0xB6	; 182
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	3b d2       	rcall	.+1142   	; 0x596 <main>
 120:	3f c2       	rjmp	.+1150   	; 0x5a0 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <lcd_port_config>:
	forward_wls(3,1);
	right_turn_wls();
	forward_wls(0,5);
	forward_wls(2,1);
	right_turn_wls();
	forward_wls(2,1);	
 124:	87 b1       	in	r24, 0x07	; 7
 126:	87 6f       	ori	r24, 0xF7	; 247
 128:	87 b9       	out	0x07, r24	; 7
 12a:	88 b1       	in	r24, 0x08	; 8
 12c:	88 70       	andi	r24, 0x08	; 8
 12e:	88 b9       	out	0x08, r24	; 8
 130:	08 95       	ret

00000132 <lcd_set_4bit>:
 132:	86 e6       	ldi	r24, 0x66	; 102
 134:	9e e0       	ldi	r25, 0x0E	; 14
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <lcd_set_4bit+0x4>
 13a:	00 00       	nop
 13c:	40 98       	cbi	0x08, 0	; 8
 13e:	41 98       	cbi	0x08, 1	; 8
 140:	80 e3       	ldi	r24, 0x30	; 48
 142:	88 b9       	out	0x08, r24	; 8
 144:	42 9a       	sbi	0x08, 2	; 8
 146:	8f ef       	ldi	r24, 0xFF	; 255
 148:	97 e4       	ldi	r25, 0x47	; 71
 14a:	01 97       	sbiw	r24, 0x01	; 1
 14c:	f1 f7       	brne	.-4      	; 0x14a <lcd_set_4bit+0x18>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <lcd_set_4bit+0x1e>
 150:	00 00       	nop
 152:	42 98       	cbi	0x08, 2	; 8
 154:	86 e6       	ldi	r24, 0x66	; 102
 156:	9e e0       	ldi	r25, 0x0E	; 14
 158:	01 97       	sbiw	r24, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <lcd_set_4bit+0x26>
 15c:	00 00       	nop
 15e:	40 98       	cbi	0x08, 0	; 8
 160:	41 98       	cbi	0x08, 1	; 8
 162:	80 e3       	ldi	r24, 0x30	; 48
 164:	88 b9       	out	0x08, r24	; 8
 166:	42 9a       	sbi	0x08, 2	; 8
 168:	8f ef       	ldi	r24, 0xFF	; 255
 16a:	97 e4       	ldi	r25, 0x47	; 71
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <lcd_set_4bit+0x3a>
 170:	00 c0       	rjmp	.+0      	; 0x172 <lcd_set_4bit+0x40>
 172:	00 00       	nop
 174:	42 98       	cbi	0x08, 2	; 8
 176:	86 e6       	ldi	r24, 0x66	; 102
 178:	9e e0       	ldi	r25, 0x0E	; 14
 17a:	01 97       	sbiw	r24, 0x01	; 1
 17c:	f1 f7       	brne	.-4      	; 0x17a <lcd_set_4bit+0x48>
 17e:	00 00       	nop
 180:	40 98       	cbi	0x08, 0	; 8
 182:	41 98       	cbi	0x08, 1	; 8
 184:	80 e3       	ldi	r24, 0x30	; 48
 186:	88 b9       	out	0x08, r24	; 8
 188:	42 9a       	sbi	0x08, 2	; 8
 18a:	8f ef       	ldi	r24, 0xFF	; 255
 18c:	97 e4       	ldi	r25, 0x47	; 71
 18e:	01 97       	sbiw	r24, 0x01	; 1
 190:	f1 f7       	brne	.-4      	; 0x18e <lcd_set_4bit+0x5c>
 192:	00 c0       	rjmp	.+0      	; 0x194 <lcd_set_4bit+0x62>
 194:	00 00       	nop
 196:	42 98       	cbi	0x08, 2	; 8
 198:	86 e6       	ldi	r24, 0x66	; 102
 19a:	9e e0       	ldi	r25, 0x0E	; 14
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	f1 f7       	brne	.-4      	; 0x19c <lcd_set_4bit+0x6a>
 1a0:	00 00       	nop
 1a2:	40 98       	cbi	0x08, 0	; 8
 1a4:	41 98       	cbi	0x08, 1	; 8
 1a6:	80 e2       	ldi	r24, 0x20	; 32
 1a8:	88 b9       	out	0x08, r24	; 8
 1aa:	42 9a       	sbi	0x08, 2	; 8
 1ac:	8f ef       	ldi	r24, 0xFF	; 255
 1ae:	97 e4       	ldi	r25, 0x47	; 71
 1b0:	01 97       	sbiw	r24, 0x01	; 1
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <lcd_set_4bit+0x7e>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <lcd_set_4bit+0x84>
 1b6:	00 00       	nop
 1b8:	42 98       	cbi	0x08, 2	; 8
 1ba:	08 95       	ret

000001bc <lcd_wr_command>:
 1bc:	98 b1       	in	r25, 0x08	; 8
 1be:	9f 70       	andi	r25, 0x0F	; 15
 1c0:	98 b9       	out	0x08, r25	; 8
 1c2:	98 b1       	in	r25, 0x08	; 8
 1c4:	28 2f       	mov	r18, r24
 1c6:	20 7f       	andi	r18, 0xF0	; 240
 1c8:	92 2b       	or	r25, r18
 1ca:	98 b9       	out	0x08, r25	; 8
 1cc:	40 98       	cbi	0x08, 0	; 8
 1ce:	41 98       	cbi	0x08, 1	; 8
 1d0:	42 9a       	sbi	0x08, 2	; 8
 1d2:	ef ef       	ldi	r30, 0xFF	; 255
 1d4:	f7 e4       	ldi	r31, 0x47	; 71
 1d6:	31 97       	sbiw	r30, 0x01	; 1
 1d8:	f1 f7       	brne	.-4      	; 0x1d6 <lcd_wr_command+0x1a>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <lcd_wr_command+0x20>
 1dc:	00 00       	nop
 1de:	42 98       	cbi	0x08, 2	; 8
 1e0:	98 b1       	in	r25, 0x08	; 8
 1e2:	9f 70       	andi	r25, 0x0F	; 15
 1e4:	98 b9       	out	0x08, r25	; 8
 1e6:	98 b1       	in	r25, 0x08	; 8
 1e8:	82 95       	swap	r24
 1ea:	80 7f       	andi	r24, 0xF0	; 240
 1ec:	89 2b       	or	r24, r25
 1ee:	88 b9       	out	0x08, r24	; 8
 1f0:	40 98       	cbi	0x08, 0	; 8
 1f2:	41 98       	cbi	0x08, 1	; 8
 1f4:	42 9a       	sbi	0x08, 2	; 8
 1f6:	8f ef       	ldi	r24, 0xFF	; 255
 1f8:	97 e4       	ldi	r25, 0x47	; 71
 1fa:	01 97       	sbiw	r24, 0x01	; 1
 1fc:	f1 f7       	brne	.-4      	; 0x1fa <lcd_wr_command+0x3e>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <lcd_wr_command+0x44>
 200:	00 00       	nop
 202:	42 98       	cbi	0x08, 2	; 8
 204:	08 95       	ret

00000206 <lcd_init>:
 206:	95 df       	rcall	.-214    	; 0x132 <lcd_set_4bit>
 208:	86 e6       	ldi	r24, 0x66	; 102
 20a:	9e e0       	ldi	r25, 0x0E	; 14
 20c:	01 97       	sbiw	r24, 0x01	; 1
 20e:	f1 f7       	brne	.-4      	; 0x20c <lcd_init+0x6>
 210:	00 00       	nop
 212:	88 e2       	ldi	r24, 0x28	; 40
 214:	d3 df       	rcall	.-90     	; 0x1bc <lcd_wr_command>
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	d1 df       	rcall	.-94     	; 0x1bc <lcd_wr_command>
 21a:	86 e0       	ldi	r24, 0x06	; 6
 21c:	cf df       	rcall	.-98     	; 0x1bc <lcd_wr_command>
 21e:	8e e0       	ldi	r24, 0x0E	; 14
 220:	cd df       	rcall	.-102    	; 0x1bc <lcd_wr_command>
 222:	80 e8       	ldi	r24, 0x80	; 128
 224:	cb cf       	rjmp	.-106    	; 0x1bc <lcd_wr_command>
 226:	08 95       	ret

00000228 <lcd_wr_char>:
 228:	98 b1       	in	r25, 0x08	; 8
 22a:	9f 70       	andi	r25, 0x0F	; 15
 22c:	98 b9       	out	0x08, r25	; 8
 22e:	98 b1       	in	r25, 0x08	; 8
 230:	28 2f       	mov	r18, r24
 232:	20 7f       	andi	r18, 0xF0	; 240
 234:	92 2b       	or	r25, r18
 236:	98 b9       	out	0x08, r25	; 8
 238:	40 9a       	sbi	0x08, 0	; 8
 23a:	41 98       	cbi	0x08, 1	; 8
 23c:	42 9a       	sbi	0x08, 2	; 8
 23e:	ef ef       	ldi	r30, 0xFF	; 255
 240:	f7 e4       	ldi	r31, 0x47	; 71
 242:	31 97       	sbiw	r30, 0x01	; 1
 244:	f1 f7       	brne	.-4      	; 0x242 <lcd_wr_char+0x1a>
 246:	00 c0       	rjmp	.+0      	; 0x248 <lcd_wr_char+0x20>
 248:	00 00       	nop
 24a:	42 98       	cbi	0x08, 2	; 8
 24c:	98 b1       	in	r25, 0x08	; 8
 24e:	9f 70       	andi	r25, 0x0F	; 15
 250:	98 b9       	out	0x08, r25	; 8
 252:	98 b1       	in	r25, 0x08	; 8
 254:	82 95       	swap	r24
 256:	80 7f       	andi	r24, 0xF0	; 240
 258:	89 2b       	or	r24, r25
 25a:	88 b9       	out	0x08, r24	; 8
 25c:	40 9a       	sbi	0x08, 0	; 8
 25e:	41 98       	cbi	0x08, 1	; 8
 260:	42 9a       	sbi	0x08, 2	; 8
 262:	8f ef       	ldi	r24, 0xFF	; 255
 264:	97 e4       	ldi	r25, 0x47	; 71
 266:	01 97       	sbiw	r24, 0x01	; 1
 268:	f1 f7       	brne	.-4      	; 0x266 <lcd_wr_char+0x3e>
 26a:	00 c0       	rjmp	.+0      	; 0x26c <lcd_wr_char+0x44>
 26c:	00 00       	nop
 26e:	42 98       	cbi	0x08, 2	; 8
 270:	08 95       	ret

00000272 <lcd_string>:
 272:	cf 93       	push	r28
 274:	df 93       	push	r29
 276:	ec 01       	movw	r28, r24
 278:	88 81       	ld	r24, Y
 27a:	88 23       	and	r24, r24
 27c:	29 f0       	breq	.+10     	; 0x288 <lcd_string+0x16>
 27e:	21 96       	adiw	r28, 0x01	; 1
 280:	d3 df       	rcall	.-90     	; 0x228 <lcd_wr_char>
 282:	89 91       	ld	r24, Y+
 284:	81 11       	cpse	r24, r1
 286:	fc cf       	rjmp	.-8      	; 0x280 <lcd_string+0xe>
 288:	df 91       	pop	r29
 28a:	cf 91       	pop	r28
 28c:	08 95       	ret

0000028e <timer1_init>:
 28e:	e1 e8       	ldi	r30, 0x81	; 129
 290:	f0 e0       	ldi	r31, 0x00	; 0
 292:	10 82       	st	Z, r1
 294:	8c ef       	ldi	r24, 0xFC	; 252
 296:	80 93 85 00 	sts	0x0085, r24
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	80 93 84 00 	sts	0x0084, r24
 2a0:	93 e0       	ldi	r25, 0x03	; 3
 2a2:	90 93 89 00 	sts	0x0089, r25
 2a6:	8f ef       	ldi	r24, 0xFF	; 255
 2a8:	80 93 88 00 	sts	0x0088, r24
 2ac:	90 93 8b 00 	sts	0x008B, r25
 2b0:	80 93 8a 00 	sts	0x008A, r24
 2b4:	90 93 8d 00 	sts	0x008D, r25
 2b8:	80 93 8c 00 	sts	0x008C, r24
 2bc:	90 93 87 00 	sts	0x0087, r25
 2c0:	80 93 86 00 	sts	0x0086, r24
 2c4:	8b ea       	ldi	r24, 0xAB	; 171
 2c6:	80 93 80 00 	sts	0x0080, r24
 2ca:	10 92 82 00 	sts	0x0082, r1
 2ce:	8c e0       	ldi	r24, 0x0C	; 12
 2d0:	80 83       	st	Z, r24
 2d2:	08 95       	ret

000002d4 <timer5_init>:
 2d4:	e1 e2       	ldi	r30, 0x21	; 33
 2d6:	f1 e0       	ldi	r31, 0x01	; 1
 2d8:	10 82       	st	Z, r1
 2da:	8f ef       	ldi	r24, 0xFF	; 255
 2dc:	80 93 25 01 	sts	0x0125, r24
 2e0:	91 e0       	ldi	r25, 0x01	; 1
 2e2:	90 93 24 01 	sts	0x0124, r25
 2e6:	10 92 29 01 	sts	0x0129, r1
 2ea:	80 93 28 01 	sts	0x0128, r24
 2ee:	10 92 2b 01 	sts	0x012B, r1
 2f2:	80 93 2a 01 	sts	0x012A, r24
 2f6:	10 92 2d 01 	sts	0x012D, r1
 2fa:	80 93 2c 01 	sts	0x012C, r24
 2fe:	89 ea       	ldi	r24, 0xA9	; 169
 300:	80 93 20 01 	sts	0x0120, r24
 304:	8b e0       	ldi	r24, 0x0B	; 11
 306:	80 83       	st	Z, r24
 308:	08 95       	ret

0000030a <buzzer_pin_config>:
 30a:	9b 9a       	sbi	0x13, 3	; 19
 30c:	a3 98       	cbi	0x14, 3	; 20
 30e:	08 95       	ret

00000310 <motion_pin_config>:
 310:	81 b1       	in	r24, 0x01	; 1
 312:	8f 60       	ori	r24, 0x0F	; 15
 314:	81 b9       	out	0x01, r24	; 1
 316:	82 b1       	in	r24, 0x02	; 2
 318:	80 7f       	andi	r24, 0xF0	; 240
 31a:	82 b9       	out	0x02, r24	; 2
 31c:	ea e0       	ldi	r30, 0x0A	; 10
 31e:	f1 e0       	ldi	r31, 0x01	; 1
 320:	80 81       	ld	r24, Z
 322:	88 61       	ori	r24, 0x18	; 24
 324:	80 83       	st	Z, r24
 326:	eb e0       	ldi	r30, 0x0B	; 11
 328:	f1 e0       	ldi	r31, 0x01	; 1
 32a:	80 81       	ld	r24, Z
 32c:	88 61       	ori	r24, 0x18	; 24
 32e:	80 83       	st	Z, r24
 330:	08 95       	ret

00000332 <servo1_pin_config>:
 332:	25 9a       	sbi	0x04, 5	; 4
 334:	2d 9a       	sbi	0x05, 5	; 5
 336:	08 95       	ret

00000338 <servo2_pin_config>:
 338:	26 9a       	sbi	0x04, 6	; 4
 33a:	2e 9a       	sbi	0x05, 6	; 5
 33c:	08 95       	ret

0000033e <servo3_pin_config>:
 33e:	27 9a       	sbi	0x04, 7	; 4
 340:	2f 9a       	sbi	0x05, 7	; 5
 342:	08 95       	ret

00000344 <demux_pin_config>:
 344:	e1 e0       	ldi	r30, 0x01	; 1
 346:	f1 e0       	ldi	r31, 0x01	; 1
 348:	80 81       	ld	r24, Z
 34a:	8f ef       	ldi	r24, 0xFF	; 255
 34c:	80 83       	st	Z, r24
 34e:	e2 e0       	ldi	r30, 0x02	; 2
 350:	f1 e0       	ldi	r31, 0x01	; 1
 352:	80 81       	ld	r24, Z
 354:	8e 7f       	andi	r24, 0xFE	; 254
 356:	80 83       	st	Z, r24
 358:	08 95       	ret

0000035a <adc_pin_config>:
 35a:	10 ba       	out	0x10, r1	; 16
 35c:	11 ba       	out	0x11, r1	; 17
 35e:	10 92 07 01 	sts	0x0107, r1
 362:	10 92 08 01 	sts	0x0108, r1
 366:	08 95       	ret

00000368 <port_init>:
 368:	d0 df       	rcall	.-96     	; 0x30a <buzzer_pin_config>
 36a:	d2 df       	rcall	.-92     	; 0x310 <motion_pin_config>
 36c:	e2 df       	rcall	.-60     	; 0x332 <servo1_pin_config>
 36e:	e4 df       	rcall	.-56     	; 0x338 <servo2_pin_config>
 370:	e6 df       	rcall	.-52     	; 0x33e <servo3_pin_config>
 372:	e8 df       	rcall	.-48     	; 0x344 <demux_pin_config>
 374:	d7 de       	rcall	.-594    	; 0x124 <lcd_port_config>
 376:	f1 cf       	rjmp	.-30     	; 0x35a <adc_pin_config>
 378:	08 95       	ret

0000037a <__vector_6>:
 37a:	1f 92       	push	r1
 37c:	0f 92       	push	r0
 37e:	0f b6       	in	r0, 0x3f	; 63
 380:	0f 92       	push	r0
 382:	11 24       	eor	r1, r1
 384:	8f 93       	push	r24
 386:	9f 93       	push	r25
 388:	af 93       	push	r26
 38a:	bf 93       	push	r27
 38c:	80 91 5a 02 	lds	r24, 0x025A
 390:	90 91 5b 02 	lds	r25, 0x025B
 394:	a0 91 5c 02 	lds	r26, 0x025C
 398:	b0 91 5d 02 	lds	r27, 0x025D
 39c:	01 96       	adiw	r24, 0x01	; 1
 39e:	a1 1d       	adc	r26, r1
 3a0:	b1 1d       	adc	r27, r1
 3a2:	80 93 5a 02 	sts	0x025A, r24
 3a6:	90 93 5b 02 	sts	0x025B, r25
 3aa:	a0 93 5c 02 	sts	0x025C, r26
 3ae:	b0 93 5d 02 	sts	0x025D, r27
 3b2:	bf 91       	pop	r27
 3b4:	af 91       	pop	r26
 3b6:	9f 91       	pop	r25
 3b8:	8f 91       	pop	r24
 3ba:	0f 90       	pop	r0
 3bc:	0f be       	out	0x3f, r0	; 63
 3be:	0f 90       	pop	r0
 3c0:	1f 90       	pop	r1
 3c2:	18 95       	reti

000003c4 <__vector_5>:
 3c4:	1f 92       	push	r1
 3c6:	0f 92       	push	r0
 3c8:	0f b6       	in	r0, 0x3f	; 63
 3ca:	0f 92       	push	r0
 3cc:	11 24       	eor	r1, r1
 3ce:	8f 93       	push	r24
 3d0:	9f 93       	push	r25
 3d2:	af 93       	push	r26
 3d4:	bf 93       	push	r27
 3d6:	80 91 5e 02 	lds	r24, 0x025E
 3da:	90 91 5f 02 	lds	r25, 0x025F
 3de:	a0 91 60 02 	lds	r26, 0x0260
 3e2:	b0 91 61 02 	lds	r27, 0x0261
 3e6:	01 96       	adiw	r24, 0x01	; 1
 3e8:	a1 1d       	adc	r26, r1
 3ea:	b1 1d       	adc	r27, r1
 3ec:	80 93 5e 02 	sts	0x025E, r24
 3f0:	90 93 5f 02 	sts	0x025F, r25
 3f4:	a0 93 60 02 	sts	0x0260, r26
 3f8:	b0 93 61 02 	sts	0x0261, r27
 3fc:	bf 91       	pop	r27
 3fe:	af 91       	pop	r26
 400:	9f 91       	pop	r25
 402:	8f 91       	pop	r24
 404:	0f 90       	pop	r0
 406:	0f be       	out	0x3f, r0	; 63
 408:	0f 90       	pop	r0
 40a:	1f 90       	pop	r1
 40c:	18 95       	reti

0000040e <motion_set>:
 40e:	92 b1       	in	r25, 0x02	; 2
 410:	90 7f       	andi	r25, 0xF0	; 240
 412:	8f 70       	andi	r24, 0x0F	; 15
 414:	98 2b       	or	r25, r24
 416:	92 b9       	out	0x02, r25	; 2
 418:	08 95       	ret

0000041a <right>:
 41a:	85 e0       	ldi	r24, 0x05	; 5
 41c:	f8 cf       	rjmp	.-16     	; 0x40e <motion_set>
 41e:	08 95       	ret

00000420 <left>:
 420:	8a e0       	ldi	r24, 0x0A	; 10
 422:	f5 cf       	rjmp	.-22     	; 0x40e <motion_set>
 424:	08 95       	ret

00000426 <stop>:
 426:	80 e0       	ldi	r24, 0x00	; 0
 428:	f2 cf       	rjmp	.-28     	; 0x40e <motion_set>
 42a:	08 95       	ret

0000042c <ADC_Conversion>:
 42c:	88 30       	cpi	r24, 0x08	; 8
 42e:	18 f0       	brcs	.+6      	; 0x436 <ADC_Conversion+0xa>
 430:	98 e0       	ldi	r25, 0x08	; 8
 432:	90 93 7b 00 	sts	0x007B, r25
 436:	87 70       	andi	r24, 0x07	; 7
 438:	80 62       	ori	r24, 0x20	; 32
 43a:	80 93 7c 00 	sts	0x007C, r24
 43e:	ea e7       	ldi	r30, 0x7A	; 122
 440:	f0 e0       	ldi	r31, 0x00	; 0
 442:	80 81       	ld	r24, Z
 444:	80 64       	ori	r24, 0x40	; 64
 446:	80 83       	st	Z, r24
 448:	80 81       	ld	r24, Z
 44a:	84 ff       	sbrs	r24, 4
 44c:	fd cf       	rjmp	.-6      	; 0x448 <ADC_Conversion+0x1c>
 44e:	80 91 79 00 	lds	r24, 0x0079
 452:	ea e7       	ldi	r30, 0x7A	; 122
 454:	f0 e0       	ldi	r31, 0x00	; 0
 456:	90 81       	ld	r25, Z
 458:	90 61       	ori	r25, 0x10	; 16
 45a:	90 83       	st	Z, r25
 45c:	10 92 7b 00 	sts	0x007B, r1
 460:	08 95       	ret

00000462 <LCD_Function>:
 462:	cf 93       	push	r28
 464:	df 93       	push	r29
 466:	ec 01       	movw	r28, r24
 468:	ce de       	rcall	.-612    	; 0x206 <lcd_init>
 46a:	c3 30       	cpi	r28, 0x03	; 3
 46c:	d1 05       	cpc	r29, r1
 46e:	09 f4       	brne	.+2      	; 0x472 <LCD_Function+0x10>
 470:	35 c0       	rjmp	.+106    	; 0x4dc <LCD_Function+0x7a>
 472:	2c f4       	brge	.+10     	; 0x47e <LCD_Function+0x1c>
 474:	20 97       	sbiw	r28, 0x00	; 0
 476:	51 f0       	breq	.+20     	; 0x48c <LCD_Function+0x2a>
 478:	21 97       	sbiw	r28, 0x01	; 1
 47a:	71 f0       	breq	.+28     	; 0x498 <LCD_Function+0x36>
 47c:	34 c0       	rjmp	.+104    	; 0x4e6 <LCD_Function+0x84>
 47e:	c5 30       	cpi	r28, 0x05	; 5
 480:	d1 05       	cpc	r29, r1
 482:	81 f0       	breq	.+32     	; 0x4a4 <LCD_Function+0x42>
 484:	04 f1       	brlt	.+64     	; 0x4c6 <LCD_Function+0x64>
 486:	26 97       	sbiw	r28, 0x06	; 6
 488:	99 f0       	breq	.+38     	; 0x4b0 <LCD_Function+0x4e>
 48a:	2d c0       	rjmp	.+90     	; 0x4e6 <LCD_Function+0x84>
 48c:	82 e8       	ldi	r24, 0x82	; 130
 48e:	96 de       	rcall	.-724    	; 0x1bc <lcd_wr_command>
 490:	81 e0       	ldi	r24, 0x01	; 1
 492:	92 e0       	ldi	r25, 0x02	; 2
 494:	ee de       	rcall	.-548    	; 0x272 <lcd_string>
 496:	27 c0       	rjmp	.+78     	; 0x4e6 <LCD_Function+0x84>
 498:	82 e8       	ldi	r24, 0x82	; 130
 49a:	90 de       	rcall	.-736    	; 0x1bc <lcd_wr_command>
 49c:	8f e0       	ldi	r24, 0x0F	; 15
 49e:	92 e0       	ldi	r25, 0x02	; 2
 4a0:	e8 de       	rcall	.-560    	; 0x272 <lcd_string>
 4a2:	21 c0       	rjmp	.+66     	; 0x4e6 <LCD_Function+0x84>
 4a4:	82 e8       	ldi	r24, 0x82	; 130
 4a6:	8a de       	rcall	.-748    	; 0x1bc <lcd_wr_command>
 4a8:	8d e1       	ldi	r24, 0x1D	; 29
 4aa:	92 e0       	ldi	r25, 0x02	; 2
 4ac:	e2 de       	rcall	.-572    	; 0x272 <lcd_string>
 4ae:	1b c0       	rjmp	.+54     	; 0x4e6 <LCD_Function+0x84>
 4b0:	85 e8       	ldi	r24, 0x85	; 133
 4b2:	84 de       	rcall	.-760    	; 0x1bc <lcd_wr_command>
 4b4:	85 e2       	ldi	r24, 0x25	; 37
 4b6:	92 e0       	ldi	r25, 0x02	; 2
 4b8:	dc de       	rcall	.-584    	; 0x272 <lcd_string>
 4ba:	80 ec       	ldi	r24, 0xC0	; 192
 4bc:	7f de       	rcall	.-770    	; 0x1bc <lcd_wr_command>
 4be:	8b e2       	ldi	r24, 0x2B	; 43
 4c0:	92 e0       	ldi	r25, 0x02	; 2
 4c2:	d7 de       	rcall	.-594    	; 0x272 <lcd_string>
 4c4:	10 c0       	rjmp	.+32     	; 0x4e6 <LCD_Function+0x84>
 4c6:	85 e8       	ldi	r24, 0x85	; 133
 4c8:	79 de       	rcall	.-782    	; 0x1bc <lcd_wr_command>
 4ca:	8a e3       	ldi	r24, 0x3A	; 58
 4cc:	92 e0       	ldi	r25, 0x02	; 2
 4ce:	d1 de       	rcall	.-606    	; 0x272 <lcd_string>
 4d0:	82 ec       	ldi	r24, 0xC2	; 194
 4d2:	74 de       	rcall	.-792    	; 0x1bc <lcd_wr_command>
 4d4:	81 e4       	ldi	r24, 0x41	; 65
 4d6:	92 e0       	ldi	r25, 0x02	; 2
 4d8:	cc de       	rcall	.-616    	; 0x272 <lcd_string>
 4da:	05 c0       	rjmp	.+10     	; 0x4e6 <LCD_Function+0x84>
 4dc:	82 e8       	ldi	r24, 0x82	; 130
 4de:	6e de       	rcall	.-804    	; 0x1bc <lcd_wr_command>
 4e0:	8f e4       	ldi	r24, 0x4F	; 79
 4e2:	92 e0       	ldi	r25, 0x02	; 2
 4e4:	c6 de       	rcall	.-628    	; 0x272 <lcd_string>
 4e6:	df 91       	pop	r29
 4e8:	cf 91       	pop	r28
 4ea:	08 95       	ret

000004ec <static_reorientation>:
 4ec:	84 e0       	ldi	r24, 0x04	; 4
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	b8 df       	rcall	.-144    	; 0x462 <LCD_Function>
 4f2:	99 df       	rcall	.-206    	; 0x426 <stop>
 4f4:	81 e0       	ldi	r24, 0x01	; 1
 4f6:	9a df       	rcall	.-204    	; 0x42c <ADC_Conversion>
 4f8:	80 93 90 02 	sts	0x0290, r24
 4fc:	82 e0       	ldi	r24, 0x02	; 2
 4fe:	96 df       	rcall	.-212    	; 0x42c <ADC_Conversion>
 500:	80 93 85 02 	sts	0x0285, r24
 504:	8e 36       	cpi	r24, 0x6E	; 110
 506:	80 f5       	brcc	.+96     	; 0x568 <static_reorientation+0x7c>
 508:	86 e9       	ldi	r24, 0x96	; 150
 50a:	80 93 28 01 	sts	0x0128, r24
 50e:	80 93 2a 01 	sts	0x012A, r24
 512:	83 df       	rcall	.-250    	; 0x41a <right>
 514:	2f ef       	ldi	r18, 0xFF	; 255
 516:	8f ef       	ldi	r24, 0xFF	; 255
 518:	91 e1       	ldi	r25, 0x11	; 17
 51a:	21 50       	subi	r18, 0x01	; 1
 51c:	80 40       	sbci	r24, 0x00	; 0
 51e:	90 40       	sbci	r25, 0x00	; 0
 520:	e1 f7       	brne	.-8      	; 0x51a <static_reorientation+0x2e>
 522:	00 c0       	rjmp	.+0      	; 0x524 <static_reorientation+0x38>
 524:	00 00       	nop
 526:	7f df       	rcall	.-258    	; 0x426 <stop>
 528:	8e e6       	ldi	r24, 0x6E	; 110
 52a:	80 93 28 01 	sts	0x0128, r24
 52e:	80 93 2a 01 	sts	0x012A, r24
 532:	76 df       	rcall	.-276    	; 0x420 <left>
 534:	81 e0       	ldi	r24, 0x01	; 1
 536:	7a df       	rcall	.-268    	; 0x42c <ADC_Conversion>
 538:	80 93 90 02 	sts	0x0290, r24
 53c:	82 e0       	ldi	r24, 0x02	; 2
 53e:	76 df       	rcall	.-276    	; 0x42c <ADC_Conversion>
 540:	80 93 85 02 	sts	0x0285, r24
 544:	20 91 90 02 	lds	r18, 0x0290
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	82 0f       	add	r24, r18
 54c:	91 1d       	adc	r25, r1
 54e:	80 3a       	cpi	r24, 0xA0	; 160
 550:	91 05       	cpc	r25, r1
 552:	84 f3       	brlt	.-32     	; 0x534 <static_reorientation+0x48>
 554:	12 b8       	out	0x02, r1	; 2
 556:	67 df       	rcall	.-306    	; 0x426 <stop>
 558:	80 91 00 02 	lds	r24, 0x0200
 55c:	80 93 28 01 	sts	0x0128, r24
 560:	80 91 00 02 	lds	r24, 0x0200
 564:	80 93 2a 01 	sts	0x012A, r24
 568:	08 95       	ret

0000056a <adc_init>:
}
/* -------------------------------------------------------------INITIALIZATION--------------------------------------------------*/

//Function to Initialize ADC
void adc_init() {
  ADCSRA = 0x00;
 56a:	ea e7       	ldi	r30, 0x7A	; 122
 56c:	f0 e0       	ldi	r31, 0x00	; 0
 56e:	10 82       	st	Z, r1
  ADCSRB = 0x00; //MUX5 = 0
 570:	10 92 7b 00 	sts	0x007B, r1
  ADMUX = 0x20; //Vref=5V external --- ADLAR=1 --- MUX4:0 = 0000
 574:	80 e2       	ldi	r24, 0x20	; 32
 576:	80 93 7c 00 	sts	0x007C, r24
  ACSR = 0x80;
 57a:	80 e8       	ldi	r24, 0x80	; 128
 57c:	80 bf       	out	0x30, r24	; 48
  ADCSRA = 0x86; //ADEN=1 --- ADIE=1 --- ADPS2:0 = 1 1 0
 57e:	86 e8       	ldi	r24, 0x86	; 134
 580:	80 83       	st	Z, r24
 582:	08 95       	ret

00000584 <init_devices>:
}

void init_devices(void) {
  cli(); //Clears the global interrupts
 584:	f8 94       	cli
  port_init();
 586:	f0 de       	rcall	.-544    	; 0x368 <port_init>
  adc_init();
 588:	f0 df       	rcall	.-32     	; 0x56a <adc_init>
  timer5_init();
 58a:	a4 de       	rcall	.-696    	; 0x2d4 <timer5_init>
  timer1_init();
 58c:	80 de       	rcall	.-768    	; 0x28e <timer1_init>
  sei(); //Enables the global interrupts
 58e:	78 94       	sei
  lcd_set_4bit(); //These functions need not to be inside interrupt blocked code
 590:	d0 dd       	rcall	.-1120   	; 0x132 <lcd_set_4bit>
  lcd_init();
 592:	39 ce       	rjmp	.-910    	; 0x206 <lcd_init>
 594:	08 95       	ret

00000596 <main>:
}
/* --------------------------------------------------------------MAIN-----------------------------------------------------------*/

int main()
{
	init_devices();
 596:	f6 df       	rcall	.-20     	; 0x584 <init_devices>
	static_reorientation();
 598:	a9 df       	rcall	.-174    	; 0x4ec <static_reorientation>
	//if (1 == which_material[i])
	//{
	//house_no = i;
	//}
	//}*/
}
 59a:	80 e0       	ldi	r24, 0x00	; 0
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	08 95       	ret

000005a0 <_exit>:
 5a0:	f8 94       	cli

000005a2 <__stop_program>:
 5a2:	ff cf       	rjmp	.-2      	; 0x5a2 <__stop_program>
