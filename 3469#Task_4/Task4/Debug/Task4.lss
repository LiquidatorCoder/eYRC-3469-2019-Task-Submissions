
Task4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800200  00000e08  00000e9c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e08  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000017  00800228  00800228  00000ec4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ec4  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001e0  00000000  00000000  00000ef4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002368  00000000  00000000  000010d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003ed  00000000  00000000  0000343c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001361  00000000  00000000  00003829  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000045c  00000000  00000000  00004b8c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000051b  00000000  00000000  00004fe8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000c34  00000000  00000000  00005503  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001d0  00000000  00000000  00006137  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 e0       	ldi	r30, 0x08	; 8
  fc:	fe e0       	ldi	r31, 0x0E	; 14
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 32       	cpi	r26, 0x28	; 40
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a8 e2       	ldi	r26, 0x28	; 40
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	af 33       	cpi	r26, 0x3F	; 63
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	a2 d4       	rcall	.+2372   	; 0xa64 <main>
 120:	71 c6       	rjmp	.+3298   	; 0xe04 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <lcd_port_config>:
      soft_right_2();
    } else if (ls < 40 && ms < 40 && rs < 40) {
      stop();
    }
  }
}
 124:	87 b1       	in	r24, 0x07	; 7
 126:	87 6f       	ori	r24, 0xF7	; 247
 128:	87 b9       	out	0x07, r24	; 7
 12a:	88 b1       	in	r24, 0x08	; 8
 12c:	88 70       	andi	r24, 0x08	; 8
 12e:	88 b9       	out	0x08, r24	; 8
 130:	08 95       	ret

00000132 <lcd_set_4bit>:
 132:	86 e6       	ldi	r24, 0x66	; 102
 134:	9e e0       	ldi	r25, 0x0E	; 14
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <lcd_set_4bit+0x4>
 13a:	00 00       	nop
 13c:	40 98       	cbi	0x08, 0	; 8
 13e:	41 98       	cbi	0x08, 1	; 8
 140:	80 e3       	ldi	r24, 0x30	; 48
 142:	88 b9       	out	0x08, r24	; 8
 144:	42 9a       	sbi	0x08, 2	; 8
 146:	8f ef       	ldi	r24, 0xFF	; 255
 148:	97 e4       	ldi	r25, 0x47	; 71
 14a:	01 97       	sbiw	r24, 0x01	; 1
 14c:	f1 f7       	brne	.-4      	; 0x14a <lcd_set_4bit+0x18>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <lcd_set_4bit+0x1e>
 150:	00 00       	nop
 152:	42 98       	cbi	0x08, 2	; 8
 154:	86 e6       	ldi	r24, 0x66	; 102
 156:	9e e0       	ldi	r25, 0x0E	; 14
 158:	01 97       	sbiw	r24, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <lcd_set_4bit+0x26>
 15c:	00 00       	nop
 15e:	40 98       	cbi	0x08, 0	; 8
 160:	41 98       	cbi	0x08, 1	; 8
 162:	80 e3       	ldi	r24, 0x30	; 48
 164:	88 b9       	out	0x08, r24	; 8
 166:	42 9a       	sbi	0x08, 2	; 8
 168:	8f ef       	ldi	r24, 0xFF	; 255
 16a:	97 e4       	ldi	r25, 0x47	; 71
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <lcd_set_4bit+0x3a>
 170:	00 c0       	rjmp	.+0      	; 0x172 <lcd_set_4bit+0x40>
 172:	00 00       	nop
 174:	42 98       	cbi	0x08, 2	; 8
 176:	86 e6       	ldi	r24, 0x66	; 102
 178:	9e e0       	ldi	r25, 0x0E	; 14
 17a:	01 97       	sbiw	r24, 0x01	; 1
 17c:	f1 f7       	brne	.-4      	; 0x17a <lcd_set_4bit+0x48>
 17e:	00 00       	nop
 180:	40 98       	cbi	0x08, 0	; 8
 182:	41 98       	cbi	0x08, 1	; 8
 184:	80 e3       	ldi	r24, 0x30	; 48
 186:	88 b9       	out	0x08, r24	; 8
 188:	42 9a       	sbi	0x08, 2	; 8
 18a:	8f ef       	ldi	r24, 0xFF	; 255
 18c:	97 e4       	ldi	r25, 0x47	; 71
 18e:	01 97       	sbiw	r24, 0x01	; 1
 190:	f1 f7       	brne	.-4      	; 0x18e <lcd_set_4bit+0x5c>
 192:	00 c0       	rjmp	.+0      	; 0x194 <lcd_set_4bit+0x62>
 194:	00 00       	nop
 196:	42 98       	cbi	0x08, 2	; 8
 198:	86 e6       	ldi	r24, 0x66	; 102
 19a:	9e e0       	ldi	r25, 0x0E	; 14
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	f1 f7       	brne	.-4      	; 0x19c <lcd_set_4bit+0x6a>
 1a0:	00 00       	nop
 1a2:	40 98       	cbi	0x08, 0	; 8
 1a4:	41 98       	cbi	0x08, 1	; 8
 1a6:	80 e2       	ldi	r24, 0x20	; 32
 1a8:	88 b9       	out	0x08, r24	; 8
 1aa:	42 9a       	sbi	0x08, 2	; 8
 1ac:	8f ef       	ldi	r24, 0xFF	; 255
 1ae:	97 e4       	ldi	r25, 0x47	; 71
 1b0:	01 97       	sbiw	r24, 0x01	; 1
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <lcd_set_4bit+0x7e>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <lcd_set_4bit+0x84>
 1b6:	00 00       	nop
 1b8:	42 98       	cbi	0x08, 2	; 8
 1ba:	08 95       	ret

000001bc <lcd_wr_command>:
 1bc:	98 b1       	in	r25, 0x08	; 8
 1be:	9f 70       	andi	r25, 0x0F	; 15
 1c0:	98 b9       	out	0x08, r25	; 8
 1c2:	98 b1       	in	r25, 0x08	; 8
 1c4:	28 2f       	mov	r18, r24
 1c6:	20 7f       	andi	r18, 0xF0	; 240
 1c8:	92 2b       	or	r25, r18
 1ca:	98 b9       	out	0x08, r25	; 8
 1cc:	40 98       	cbi	0x08, 0	; 8
 1ce:	41 98       	cbi	0x08, 1	; 8
 1d0:	42 9a       	sbi	0x08, 2	; 8
 1d2:	ef ef       	ldi	r30, 0xFF	; 255
 1d4:	f7 e4       	ldi	r31, 0x47	; 71
 1d6:	31 97       	sbiw	r30, 0x01	; 1
 1d8:	f1 f7       	brne	.-4      	; 0x1d6 <lcd_wr_command+0x1a>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <lcd_wr_command+0x20>
 1dc:	00 00       	nop
 1de:	42 98       	cbi	0x08, 2	; 8
 1e0:	98 b1       	in	r25, 0x08	; 8
 1e2:	9f 70       	andi	r25, 0x0F	; 15
 1e4:	98 b9       	out	0x08, r25	; 8
 1e6:	98 b1       	in	r25, 0x08	; 8
 1e8:	82 95       	swap	r24
 1ea:	80 7f       	andi	r24, 0xF0	; 240
 1ec:	89 2b       	or	r24, r25
 1ee:	88 b9       	out	0x08, r24	; 8
 1f0:	40 98       	cbi	0x08, 0	; 8
 1f2:	41 98       	cbi	0x08, 1	; 8
 1f4:	42 9a       	sbi	0x08, 2	; 8
 1f6:	8f ef       	ldi	r24, 0xFF	; 255
 1f8:	97 e4       	ldi	r25, 0x47	; 71
 1fa:	01 97       	sbiw	r24, 0x01	; 1
 1fc:	f1 f7       	brne	.-4      	; 0x1fa <lcd_wr_command+0x3e>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <lcd_wr_command+0x44>
 200:	00 00       	nop
 202:	42 98       	cbi	0x08, 2	; 8
 204:	08 95       	ret

00000206 <lcd_init>:
 206:	95 df       	rcall	.-214    	; 0x132 <lcd_set_4bit>
 208:	86 e6       	ldi	r24, 0x66	; 102
 20a:	9e e0       	ldi	r25, 0x0E	; 14
 20c:	01 97       	sbiw	r24, 0x01	; 1
 20e:	f1 f7       	brne	.-4      	; 0x20c <lcd_init+0x6>
 210:	00 00       	nop
 212:	88 e2       	ldi	r24, 0x28	; 40
 214:	d3 df       	rcall	.-90     	; 0x1bc <lcd_wr_command>
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	d1 df       	rcall	.-94     	; 0x1bc <lcd_wr_command>
 21a:	86 e0       	ldi	r24, 0x06	; 6
 21c:	cf df       	rcall	.-98     	; 0x1bc <lcd_wr_command>
 21e:	8e e0       	ldi	r24, 0x0E	; 14
 220:	cd df       	rcall	.-102    	; 0x1bc <lcd_wr_command>
 222:	80 e8       	ldi	r24, 0x80	; 128
 224:	cb cf       	rjmp	.-106    	; 0x1bc <lcd_wr_command>
 226:	08 95       	ret

00000228 <lcd_wr_char>:
 228:	98 b1       	in	r25, 0x08	; 8
 22a:	9f 70       	andi	r25, 0x0F	; 15
 22c:	98 b9       	out	0x08, r25	; 8
 22e:	98 b1       	in	r25, 0x08	; 8
 230:	28 2f       	mov	r18, r24
 232:	20 7f       	andi	r18, 0xF0	; 240
 234:	92 2b       	or	r25, r18
 236:	98 b9       	out	0x08, r25	; 8
 238:	40 9a       	sbi	0x08, 0	; 8
 23a:	41 98       	cbi	0x08, 1	; 8
 23c:	42 9a       	sbi	0x08, 2	; 8
 23e:	ef ef       	ldi	r30, 0xFF	; 255
 240:	f7 e4       	ldi	r31, 0x47	; 71
 242:	31 97       	sbiw	r30, 0x01	; 1
 244:	f1 f7       	brne	.-4      	; 0x242 <lcd_wr_char+0x1a>
 246:	00 c0       	rjmp	.+0      	; 0x248 <lcd_wr_char+0x20>
 248:	00 00       	nop
 24a:	42 98       	cbi	0x08, 2	; 8
 24c:	98 b1       	in	r25, 0x08	; 8
 24e:	9f 70       	andi	r25, 0x0F	; 15
 250:	98 b9       	out	0x08, r25	; 8
 252:	98 b1       	in	r25, 0x08	; 8
 254:	82 95       	swap	r24
 256:	80 7f       	andi	r24, 0xF0	; 240
 258:	89 2b       	or	r24, r25
 25a:	88 b9       	out	0x08, r24	; 8
 25c:	40 9a       	sbi	0x08, 0	; 8
 25e:	41 98       	cbi	0x08, 1	; 8
 260:	42 9a       	sbi	0x08, 2	; 8
 262:	8f ef       	ldi	r24, 0xFF	; 255
 264:	97 e4       	ldi	r25, 0x47	; 71
 266:	01 97       	sbiw	r24, 0x01	; 1
 268:	f1 f7       	brne	.-4      	; 0x266 <lcd_wr_char+0x3e>
 26a:	00 c0       	rjmp	.+0      	; 0x26c <lcd_wr_char+0x44>
 26c:	00 00       	nop
 26e:	42 98       	cbi	0x08, 2	; 8
 270:	08 95       	ret

00000272 <lcd_string>:
 272:	cf 93       	push	r28
 274:	df 93       	push	r29
 276:	ec 01       	movw	r28, r24
 278:	88 81       	ld	r24, Y
 27a:	88 23       	and	r24, r24
 27c:	29 f0       	breq	.+10     	; 0x288 <lcd_string+0x16>
 27e:	21 96       	adiw	r28, 0x01	; 1
 280:	d3 df       	rcall	.-90     	; 0x228 <lcd_wr_char>
 282:	89 91       	ld	r24, Y+
 284:	81 11       	cpse	r24, r1
 286:	fc cf       	rjmp	.-8      	; 0x280 <lcd_string+0xe>
 288:	df 91       	pop	r29
 28a:	cf 91       	pop	r28
 28c:	08 95       	ret

0000028e <lcd_cursor>:
 28e:	82 30       	cpi	r24, 0x02	; 2
 290:	69 f0       	breq	.+26     	; 0x2ac <lcd_cursor+0x1e>
 292:	18 f4       	brcc	.+6      	; 0x29a <lcd_cursor+0xc>
 294:	81 30       	cpi	r24, 0x01	; 1
 296:	31 f0       	breq	.+12     	; 0x2a4 <lcd_cursor+0x16>
 298:	08 95       	ret
 29a:	83 30       	cpi	r24, 0x03	; 3
 29c:	59 f0       	breq	.+22     	; 0x2b4 <lcd_cursor+0x26>
 29e:	84 30       	cpi	r24, 0x04	; 4
 2a0:	69 f0       	breq	.+26     	; 0x2bc <lcd_cursor+0x2e>
 2a2:	08 95       	ret
 2a4:	8f e7       	ldi	r24, 0x7F	; 127
 2a6:	86 0f       	add	r24, r22
 2a8:	89 cf       	rjmp	.-238    	; 0x1bc <lcd_wr_command>
 2aa:	08 95       	ret
 2ac:	8f eb       	ldi	r24, 0xBF	; 191
 2ae:	86 0f       	add	r24, r22
 2b0:	85 cf       	rjmp	.-246    	; 0x1bc <lcd_wr_command>
 2b2:	08 95       	ret
 2b4:	83 e9       	ldi	r24, 0x93	; 147
 2b6:	86 0f       	add	r24, r22
 2b8:	81 cf       	rjmp	.-254    	; 0x1bc <lcd_wr_command>
 2ba:	08 95       	ret
 2bc:	83 ed       	ldi	r24, 0xD3	; 211
 2be:	86 0f       	add	r24, r22
 2c0:	7d cf       	rjmp	.-262    	; 0x1bc <lcd_wr_command>
 2c2:	08 95       	ret

000002c4 <timer1_init>:
 2c4:	e1 e8       	ldi	r30, 0x81	; 129
 2c6:	f0 e0       	ldi	r31, 0x00	; 0
 2c8:	10 82       	st	Z, r1
 2ca:	8c ef       	ldi	r24, 0xFC	; 252
 2cc:	80 93 85 00 	sts	0x0085, r24
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	80 93 84 00 	sts	0x0084, r24
 2d6:	93 e0       	ldi	r25, 0x03	; 3
 2d8:	90 93 89 00 	sts	0x0089, r25
 2dc:	8f ef       	ldi	r24, 0xFF	; 255
 2de:	80 93 88 00 	sts	0x0088, r24
 2e2:	90 93 8b 00 	sts	0x008B, r25
 2e6:	80 93 8a 00 	sts	0x008A, r24
 2ea:	90 93 8d 00 	sts	0x008D, r25
 2ee:	80 93 8c 00 	sts	0x008C, r24
 2f2:	90 93 87 00 	sts	0x0087, r25
 2f6:	80 93 86 00 	sts	0x0086, r24
 2fa:	8b ea       	ldi	r24, 0xAB	; 171
 2fc:	80 93 80 00 	sts	0x0080, r24
 300:	10 92 82 00 	sts	0x0082, r1
 304:	8c e0       	ldi	r24, 0x0C	; 12
 306:	80 83       	st	Z, r24
 308:	08 95       	ret

0000030a <timer5_init>:
 30a:	e1 e2       	ldi	r30, 0x21	; 33
 30c:	f1 e0       	ldi	r31, 0x01	; 1
 30e:	10 82       	st	Z, r1
 310:	8f ef       	ldi	r24, 0xFF	; 255
 312:	80 93 25 01 	sts	0x0125, r24
 316:	91 e0       	ldi	r25, 0x01	; 1
 318:	90 93 24 01 	sts	0x0124, r25
 31c:	10 92 29 01 	sts	0x0129, r1
 320:	80 93 28 01 	sts	0x0128, r24
 324:	10 92 2b 01 	sts	0x012B, r1
 328:	80 93 2a 01 	sts	0x012A, r24
 32c:	10 92 2d 01 	sts	0x012D, r1
 330:	80 93 2c 01 	sts	0x012C, r24
 334:	89 ea       	ldi	r24, 0xA9	; 169
 336:	80 93 20 01 	sts	0x0120, r24
 33a:	8b e0       	ldi	r24, 0x0B	; 11
 33c:	80 83       	st	Z, r24
 33e:	08 95       	ret

00000340 <motion_pin_config>:
 340:	81 b1       	in	r24, 0x01	; 1
 342:	8f 60       	ori	r24, 0x0F	; 15
 344:	81 b9       	out	0x01, r24	; 1
 346:	82 b1       	in	r24, 0x02	; 2
 348:	80 7f       	andi	r24, 0xF0	; 240
 34a:	82 b9       	out	0x02, r24	; 2
 34c:	ea e0       	ldi	r30, 0x0A	; 10
 34e:	f1 e0       	ldi	r31, 0x01	; 1
 350:	80 81       	ld	r24, Z
 352:	88 61       	ori	r24, 0x18	; 24
 354:	80 83       	st	Z, r24
 356:	eb e0       	ldi	r30, 0x0B	; 11
 358:	f1 e0       	ldi	r31, 0x01	; 1
 35a:	80 81       	ld	r24, Z
 35c:	88 61       	ori	r24, 0x18	; 24
 35e:	80 83       	st	Z, r24
 360:	08 95       	ret

00000362 <servo1_pin_config>:
 362:	25 9a       	sbi	0x04, 5	; 4
 364:	2d 9a       	sbi	0x05, 5	; 5
 366:	08 95       	ret

00000368 <servo2_pin_config>:
 368:	26 9a       	sbi	0x04, 6	; 4
 36a:	2e 9a       	sbi	0x05, 6	; 5
 36c:	08 95       	ret

0000036e <servo3_pin_config>:
 36e:	27 9a       	sbi	0x04, 7	; 4
 370:	2f 9a       	sbi	0x05, 7	; 5
 372:	08 95       	ret

00000374 <demux_pin_config>:
 374:	e1 e0       	ldi	r30, 0x01	; 1
 376:	f1 e0       	ldi	r31, 0x01	; 1
 378:	80 81       	ld	r24, Z
 37a:	8f ef       	ldi	r24, 0xFF	; 255
 37c:	80 83       	st	Z, r24
 37e:	e2 e0       	ldi	r30, 0x02	; 2
 380:	f1 e0       	ldi	r31, 0x01	; 1
 382:	80 81       	ld	r24, Z
 384:	8e 7f       	andi	r24, 0xFE	; 254
 386:	80 83       	st	Z, r24
 388:	08 95       	ret

0000038a <adc_pin_config>:
 38a:	10 ba       	out	0x10, r1	; 16
 38c:	11 ba       	out	0x11, r1	; 17
 38e:	10 92 07 01 	sts	0x0107, r1
 392:	10 92 08 01 	sts	0x0108, r1
 396:	08 95       	ret

00000398 <port_init>:
 398:	d3 df       	rcall	.-90     	; 0x340 <motion_pin_config>
 39a:	e3 df       	rcall	.-58     	; 0x362 <servo1_pin_config>
 39c:	e5 df       	rcall	.-54     	; 0x368 <servo2_pin_config>
 39e:	e7 df       	rcall	.-50     	; 0x36e <servo3_pin_config>
 3a0:	e9 df       	rcall	.-46     	; 0x374 <demux_pin_config>
 3a2:	c0 de       	rcall	.-640    	; 0x124 <lcd_port_config>
 3a4:	f2 cf       	rjmp	.-28     	; 0x38a <adc_pin_config>
 3a6:	08 95       	ret

000003a8 <motion_set>:
 3a8:	92 b1       	in	r25, 0x02	; 2
 3aa:	90 7f       	andi	r25, 0xF0	; 240
 3ac:	8f 70       	andi	r24, 0x0F	; 15
 3ae:	98 2b       	or	r25, r24
 3b0:	92 b9       	out	0x02, r25	; 2
 3b2:	08 95       	ret

000003b4 <back>:
 3b4:	86 e0       	ldi	r24, 0x06	; 6
 3b6:	f8 cf       	rjmp	.-16     	; 0x3a8 <motion_set>
 3b8:	08 95       	ret

000003ba <forward>:
 3ba:	89 e0       	ldi	r24, 0x09	; 9
 3bc:	f5 cf       	rjmp	.-22     	; 0x3a8 <motion_set>
 3be:	08 95       	ret

000003c0 <right>:
 3c0:	85 e0       	ldi	r24, 0x05	; 5
 3c2:	f2 cf       	rjmp	.-28     	; 0x3a8 <motion_set>
 3c4:	08 95       	ret

000003c6 <left>:
 3c6:	8a e0       	ldi	r24, 0x0A	; 10
 3c8:	ef cf       	rjmp	.-34     	; 0x3a8 <motion_set>
 3ca:	08 95       	ret

000003cc <stop>:
 3cc:	80 e0       	ldi	r24, 0x00	; 0
 3ce:	ec cf       	rjmp	.-40     	; 0x3a8 <motion_set>
 3d0:	08 95       	ret

000003d2 <servo_3>:
 3d2:	68 2f       	mov	r22, r24
 3d4:	e2 e0       	ldi	r30, 0x02	; 2
 3d6:	f1 e0       	ldi	r31, 0x01	; 1
 3d8:	80 81       	ld	r24, Z
 3da:	8e 7f       	andi	r24, 0xFE	; 254
 3dc:	80 83       	st	Z, r24
 3de:	10 92 8d 00 	sts	0x008D, r1
 3e2:	70 e0       	ldi	r23, 0x00	; 0
 3e4:	80 e0       	ldi	r24, 0x00	; 0
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	7f d4       	rcall	.+2302   	; 0xce8 <__floatunsisf>
 3ea:	2b e7       	ldi	r18, 0x7B	; 123
 3ec:	34 e1       	ldi	r19, 0x14	; 20
 3ee:	4e ee       	ldi	r20, 0xEE	; 238
 3f0:	5f e3       	ldi	r21, 0x3F	; 63
 3f2:	e6 d3       	rcall	.+1996   	; 0xbc0 <__divsf3>
 3f4:	20 e0       	ldi	r18, 0x00	; 0
 3f6:	30 e0       	ldi	r19, 0x00	; 0
 3f8:	4c e0       	ldi	r20, 0x0C	; 12
 3fa:	52 e4       	ldi	r21, 0x42	; 66
 3fc:	7d d3       	rcall	.+1786   	; 0xaf8 <__addsf3>
 3fe:	48 d4       	rcall	.+2192   	; 0xc90 <__fixunssfsi>
 400:	60 93 8c 00 	sts	0x008C, r22
 404:	08 95       	ret

00000406 <servo_1_free>:
 406:	83 e0       	ldi	r24, 0x03	; 3
 408:	80 93 89 00 	sts	0x0089, r24
 40c:	8f ef       	ldi	r24, 0xFF	; 255
 40e:	80 93 88 00 	sts	0x0088, r24
 412:	08 95       	ret

00000414 <servo_2_free>:
 414:	83 e0       	ldi	r24, 0x03	; 3
 416:	80 93 8b 00 	sts	0x008B, r24
 41a:	8f ef       	ldi	r24, 0xFF	; 255
 41c:	80 93 8a 00 	sts	0x008A, r24
 420:	08 95       	ret

00000422 <servo_3_free>:
 422:	83 e0       	ldi	r24, 0x03	; 3
 424:	80 93 8d 00 	sts	0x008D, r24
 428:	8f ef       	ldi	r24, 0xFF	; 255
 42a:	80 93 8c 00 	sts	0x008C, r24
 42e:	08 95       	ret

00000430 <ADC_Conversion>:
 430:	88 30       	cpi	r24, 0x08	; 8
 432:	18 f0       	brcs	.+6      	; 0x43a <ADC_Conversion+0xa>
 434:	98 e0       	ldi	r25, 0x08	; 8
 436:	90 93 7b 00 	sts	0x007B, r25
 43a:	87 70       	andi	r24, 0x07	; 7
 43c:	80 62       	ori	r24, 0x20	; 32
 43e:	80 93 7c 00 	sts	0x007C, r24
 442:	ea e7       	ldi	r30, 0x7A	; 122
 444:	f0 e0       	ldi	r31, 0x00	; 0
 446:	80 81       	ld	r24, Z
 448:	80 64       	ori	r24, 0x40	; 64
 44a:	80 83       	st	Z, r24
 44c:	80 81       	ld	r24, Z
 44e:	84 ff       	sbrs	r24, 4
 450:	fd cf       	rjmp	.-6      	; 0x44c <ADC_Conversion+0x1c>
 452:	80 91 79 00 	lds	r24, 0x0079
 456:	ea e7       	ldi	r30, 0x7A	; 122
 458:	f0 e0       	ldi	r31, 0x00	; 0
 45a:	90 81       	ld	r25, Z
 45c:	90 61       	ori	r25, 0x10	; 16
 45e:	90 83       	st	Z, r25
 460:	10 92 7b 00 	sts	0x007B, r1
 464:	08 95       	ret

00000466 <LCD_Function>:
 466:	cf 93       	push	r28
 468:	df 93       	push	r29
 46a:	ec 01       	movw	r28, r24
 46c:	cc de       	rcall	.-616    	; 0x206 <lcd_init>
 46e:	c2 30       	cpi	r28, 0x02	; 2
 470:	d1 05       	cpc	r29, r1
 472:	61 f0       	breq	.+24     	; 0x48c <LCD_Function+0x26>
 474:	c3 30       	cpi	r28, 0x03	; 3
 476:	d1 05       	cpc	r29, r1
 478:	81 f0       	breq	.+32     	; 0x49a <LCD_Function+0x34>
 47a:	21 97       	sbiw	r28, 0x01	; 1
 47c:	a1 f4       	brne	.+40     	; 0x4a6 <LCD_Function+0x40>
 47e:	64 e0       	ldi	r22, 0x04	; 4
 480:	81 e0       	ldi	r24, 0x01	; 1
 482:	05 df       	rcall	.-502    	; 0x28e <lcd_cursor>
 484:	83 e0       	ldi	r24, 0x03	; 3
 486:	92 e0       	ldi	r25, 0x02	; 2
 488:	f4 de       	rcall	.-536    	; 0x272 <lcd_string>
 48a:	0d c0       	rjmp	.+26     	; 0x4a6 <LCD_Function+0x40>
 48c:	64 e0       	ldi	r22, 0x04	; 4
 48e:	81 e0       	ldi	r24, 0x01	; 1
 490:	fe de       	rcall	.-516    	; 0x28e <lcd_cursor>
 492:	81 e1       	ldi	r24, 0x11	; 17
 494:	92 e0       	ldi	r25, 0x02	; 2
 496:	ed de       	rcall	.-550    	; 0x272 <lcd_string>
 498:	06 c0       	rjmp	.+12     	; 0x4a6 <LCD_Function+0x40>
 49a:	64 e0       	ldi	r22, 0x04	; 4
 49c:	81 e0       	ldi	r24, 0x01	; 1
 49e:	f7 de       	rcall	.-530    	; 0x28e <lcd_cursor>
 4a0:	8f e1       	ldi	r24, 0x1F	; 31
 4a2:	92 e0       	ldi	r25, 0x02	; 2
 4a4:	e6 de       	rcall	.-564    	; 0x272 <lcd_string>
 4a6:	df 91       	pop	r29
 4a8:	cf 91       	pop	r28
 4aa:	08 95       	ret

000004ac <m_pick>:
 4ac:	10 92 89 00 	sts	0x0089, r1
 4b0:	86 e5       	ldi	r24, 0x56	; 86
 4b2:	80 93 88 00 	sts	0x0088, r24
 4b6:	2f ef       	ldi	r18, 0xFF	; 255
 4b8:	8f ef       	ldi	r24, 0xFF	; 255
 4ba:	99 e5       	ldi	r25, 0x59	; 89
 4bc:	21 50       	subi	r18, 0x01	; 1
 4be:	80 40       	sbci	r24, 0x00	; 0
 4c0:	90 40       	sbci	r25, 0x00	; 0
 4c2:	e1 f7       	brne	.-8      	; 0x4bc <m_pick+0x10>
 4c4:	00 c0       	rjmp	.+0      	; 0x4c6 <m_pick+0x1a>
 4c6:	00 00       	nop
 4c8:	9e df       	rcall	.-196    	; 0x406 <servo_1_free>
 4ca:	89 e6       	ldi	r24, 0x69	; 105
 4cc:	82 df       	rcall	.-252    	; 0x3d2 <servo_3>
 4ce:	2f ef       	ldi	r18, 0xFF	; 255
 4d0:	8f ef       	ldi	r24, 0xFF	; 255
 4d2:	99 e5       	ldi	r25, 0x59	; 89
 4d4:	21 50       	subi	r18, 0x01	; 1
 4d6:	80 40       	sbci	r24, 0x00	; 0
 4d8:	90 40       	sbci	r25, 0x00	; 0
 4da:	e1 f7       	brne	.-8      	; 0x4d4 <m_pick+0x28>
 4dc:	00 c0       	rjmp	.+0      	; 0x4de <m_pick+0x32>
 4de:	00 00       	nop
 4e0:	a0 df       	rcall	.-192    	; 0x422 <servo_3_free>
 4e2:	10 92 8b 00 	sts	0x008B, r1
 4e6:	86 e7       	ldi	r24, 0x76	; 118
 4e8:	80 93 8a 00 	sts	0x008A, r24
 4ec:	2f ef       	ldi	r18, 0xFF	; 255
 4ee:	8f ef       	ldi	r24, 0xFF	; 255
 4f0:	99 e5       	ldi	r25, 0x59	; 89
 4f2:	21 50       	subi	r18, 0x01	; 1
 4f4:	80 40       	sbci	r24, 0x00	; 0
 4f6:	90 40       	sbci	r25, 0x00	; 0
 4f8:	e1 f7       	brne	.-8      	; 0x4f2 <m_pick+0x46>
 4fa:	00 c0       	rjmp	.+0      	; 0x4fc <m_pick+0x50>
 4fc:	00 00       	nop
 4fe:	8a df       	rcall	.-236    	; 0x414 <servo_2_free>
 500:	83 e2       	ldi	r24, 0x23	; 35
 502:	67 df       	rcall	.-306    	; 0x3d2 <servo_3>
 504:	2f ef       	ldi	r18, 0xFF	; 255
 506:	8f ef       	ldi	r24, 0xFF	; 255
 508:	99 e5       	ldi	r25, 0x59	; 89
 50a:	21 50       	subi	r18, 0x01	; 1
 50c:	80 40       	sbci	r24, 0x00	; 0
 50e:	90 40       	sbci	r25, 0x00	; 0
 510:	e1 f7       	brne	.-8      	; 0x50a <m_pick+0x5e>
 512:	00 c0       	rjmp	.+0      	; 0x514 <m_pick+0x68>
 514:	00 00       	nop
 516:	10 92 8b 00 	sts	0x008B, r1
 51a:	83 e2       	ldi	r24, 0x23	; 35
 51c:	80 93 8a 00 	sts	0x008A, r24
 520:	2f ef       	ldi	r18, 0xFF	; 255
 522:	8f ef       	ldi	r24, 0xFF	; 255
 524:	99 e5       	ldi	r25, 0x59	; 89
 526:	21 50       	subi	r18, 0x01	; 1
 528:	80 40       	sbci	r24, 0x00	; 0
 52a:	90 40       	sbci	r25, 0x00	; 0
 52c:	e1 f7       	brne	.-8      	; 0x526 <m_pick+0x7a>
 52e:	00 c0       	rjmp	.+0      	; 0x530 <m_pick+0x84>
 530:	00 00       	nop
 532:	08 95       	ret

00000534 <forward_wls>:
 534:	ef 92       	push	r14
 536:	ff 92       	push	r15
 538:	0f 93       	push	r16
 53a:	1f 93       	push	r17
 53c:	cf 93       	push	r28
 53e:	df 93       	push	r29
 540:	ec 01       	movw	r28, r24
 542:	10 92 31 02 	sts	0x0231, r1
 546:	39 df       	rcall	.-398    	; 0x3ba <forward>
 548:	80 91 02 02 	lds	r24, 0x0202
 54c:	80 93 28 01 	sts	0x0128, r24
 550:	80 93 2a 01 	sts	0x012A, r24
 554:	0f 2e       	mov	r0, r31
 556:	f8 e2       	ldi	r31, 0x28	; 40
 558:	ef 2e       	mov	r14, r31
 55a:	ff 24       	eor	r15, r15
 55c:	f3 94       	inc	r15
 55e:	f0 2d       	mov	r31, r0
 560:	0a e2       	ldi	r16, 0x2A	; 42
 562:	11 e0       	ldi	r17, 0x01	; 1
 564:	81 e0       	ldi	r24, 0x01	; 1
 566:	64 df       	rcall	.-312    	; 0x430 <ADC_Conversion>
 568:	80 93 37 02 	sts	0x0237, r24
 56c:	82 e0       	ldi	r24, 0x02	; 2
 56e:	60 df       	rcall	.-320    	; 0x430 <ADC_Conversion>
 570:	80 93 2b 02 	sts	0x022B, r24
 574:	83 e0       	ldi	r24, 0x03	; 3
 576:	5c df       	rcall	.-328    	; 0x430 <ADC_Conversion>
 578:	80 93 2e 02 	sts	0x022E, r24
 57c:	c2 30       	cpi	r28, 0x02	; 2
 57e:	d1 05       	cpc	r29, r1
 580:	b9 f4       	brne	.+46     	; 0x5b0 <forward_wls+0x7c>
 582:	90 91 37 02 	lds	r25, 0x0237
 586:	20 91 2b 02 	lds	r18, 0x022B
 58a:	30 e0       	ldi	r19, 0x00	; 0
 58c:	29 0f       	add	r18, r25
 58e:	31 1d       	adc	r19, r1
 590:	28 0f       	add	r18, r24
 592:	31 1d       	adc	r19, r1
 594:	2d 32       	cpi	r18, 0x2D	; 45
 596:	31 40       	sbci	r19, 0x01	; 1
 598:	24 f1       	brlt	.+72     	; 0x5e2 <forward_wls+0xae>
 59a:	18 df       	rcall	.-464    	; 0x3cc <stop>
 59c:	ef ef       	ldi	r30, 0xFF	; 255
 59e:	ff e7       	ldi	r31, 0x7F	; 127
 5a0:	26 e1       	ldi	r18, 0x16	; 22
 5a2:	e1 50       	subi	r30, 0x01	; 1
 5a4:	f0 40       	sbci	r31, 0x00	; 0
 5a6:	20 40       	sbci	r18, 0x00	; 0
 5a8:	e1 f7       	brne	.-8      	; 0x5a2 <forward_wls+0x6e>
 5aa:	00 c0       	rjmp	.+0      	; 0x5ac <forward_wls+0x78>
 5ac:	00 00       	nop
 5ae:	99 c0       	rjmp	.+306    	; 0x6e2 <forward_wls+0x1ae>
 5b0:	20 97       	sbiw	r28, 0x00	; 0
 5b2:	b9 f4       	brne	.+46     	; 0x5e2 <forward_wls+0xae>
 5b4:	90 91 37 02 	lds	r25, 0x0237
 5b8:	20 91 2b 02 	lds	r18, 0x022B
 5bc:	30 e0       	ldi	r19, 0x00	; 0
 5be:	29 0f       	add	r18, r25
 5c0:	31 1d       	adc	r19, r1
 5c2:	28 0f       	add	r18, r24
 5c4:	31 1d       	adc	r19, r1
 5c6:	21 39       	cpi	r18, 0x91	; 145
 5c8:	31 40       	sbci	r19, 0x01	; 1
 5ca:	5c f0       	brlt	.+22     	; 0x5e2 <forward_wls+0xae>
 5cc:	ff de       	rcall	.-514    	; 0x3cc <stop>
 5ce:	ef ef       	ldi	r30, 0xFF	; 255
 5d0:	ff e7       	ldi	r31, 0x7F	; 127
 5d2:	26 e1       	ldi	r18, 0x16	; 22
 5d4:	e1 50       	subi	r30, 0x01	; 1
 5d6:	f0 40       	sbci	r31, 0x00	; 0
 5d8:	20 40       	sbci	r18, 0x00	; 0
 5da:	e1 f7       	brne	.-8      	; 0x5d4 <forward_wls+0xa0>
 5dc:	00 c0       	rjmp	.+0      	; 0x5de <forward_wls+0xaa>
 5de:	00 00       	nop
 5e0:	80 c0       	rjmp	.+256    	; 0x6e2 <forward_wls+0x1ae>
 5e2:	90 91 37 02 	lds	r25, 0x0237
 5e6:	9c 33       	cpi	r25, 0x3C	; 60
 5e8:	78 f4       	brcc	.+30     	; 0x608 <forward_wls+0xd4>
 5ea:	20 91 2b 02 	lds	r18, 0x022B
 5ee:	2d 37       	cpi	r18, 0x7D	; 125
 5f0:	58 f0       	brcs	.+22     	; 0x608 <forward_wls+0xd4>
 5f2:	8c 33       	cpi	r24, 0x3C	; 60
 5f4:	48 f4       	brcc	.+18     	; 0x608 <forward_wls+0xd4>
 5f6:	80 91 02 02 	lds	r24, 0x0202
 5fa:	f7 01       	movw	r30, r14
 5fc:	80 83       	st	Z, r24
 5fe:	80 91 02 02 	lds	r24, 0x0202
 602:	f8 01       	movw	r30, r16
 604:	80 83       	st	Z, r24
 606:	ae cf       	rjmp	.-164    	; 0x564 <forward_wls+0x30>
 608:	98 32       	cpi	r25, 0x28	; 40
 60a:	78 f4       	brcc	.+30     	; 0x62a <forward_wls+0xf6>
 60c:	20 91 2b 02 	lds	r18, 0x022B
 610:	2c 33       	cpi	r18, 0x3C	; 60
 612:	58 f4       	brcc	.+22     	; 0x62a <forward_wls+0xf6>
 614:	8d 38       	cpi	r24, 0x8D	; 141
 616:	48 f0       	brcs	.+18     	; 0x62a <forward_wls+0xf6>
 618:	80 91 02 02 	lds	r24, 0x0202
 61c:	f7 01       	movw	r30, r14
 61e:	80 83       	st	Z, r24
 620:	80 91 01 02 	lds	r24, 0x0201
 624:	f8 01       	movw	r30, r16
 626:	80 83       	st	Z, r24
 628:	9d cf       	rjmp	.-198    	; 0x564 <forward_wls+0x30>
 62a:	88 32       	cpi	r24, 0x28	; 40
 62c:	78 f4       	brcc	.+30     	; 0x64c <forward_wls+0x118>
 62e:	20 91 2b 02 	lds	r18, 0x022B
 632:	2c 33       	cpi	r18, 0x3C	; 60
 634:	58 f4       	brcc	.+22     	; 0x64c <forward_wls+0x118>
 636:	9d 38       	cpi	r25, 0x8D	; 141
 638:	48 f0       	brcs	.+18     	; 0x64c <forward_wls+0x118>
 63a:	80 91 01 02 	lds	r24, 0x0201
 63e:	f7 01       	movw	r30, r14
 640:	80 83       	st	Z, r24
 642:	80 91 02 02 	lds	r24, 0x0202
 646:	f8 01       	movw	r30, r16
 648:	80 83       	st	Z, r24
 64a:	8c cf       	rjmp	.-232    	; 0x564 <forward_wls+0x30>
 64c:	40 91 2b 02 	lds	r20, 0x022B
 650:	24 2f       	mov	r18, r20
 652:	30 e0       	ldi	r19, 0x00	; 0
 654:	29 0f       	add	r18, r25
 656:	31 1d       	adc	r19, r1
 658:	28 0f       	add	r18, r24
 65a:	31 1d       	adc	r19, r1
 65c:	28 3c       	cpi	r18, 0xC8	; 200
 65e:	31 05       	cpc	r19, r1
 660:	bc f4       	brge	.+46     	; 0x690 <forward_wls+0x15c>
 662:	43 53       	subi	r20, 0x33	; 51
 664:	41 33       	cpi	r20, 0x31	; 49
 666:	a0 f4       	brcc	.+40     	; 0x690 <forward_wls+0x15c>
 668:	89 17       	cp	r24, r25
 66a:	c0 f5       	brcc	.+112    	; 0x6dc <forward_wls+0x1a8>
 66c:	80 91 00 02 	lds	r24, 0x0200
 670:	f7 01       	movw	r30, r14
 672:	80 83       	st	Z, r24
 674:	80 91 02 02 	lds	r24, 0x0202
 678:	f8 01       	movw	r30, r16
 67a:	80 83       	st	Z, r24
 67c:	73 cf       	rjmp	.-282    	; 0x564 <forward_wls+0x30>
 67e:	80 91 02 02 	lds	r24, 0x0202
 682:	f7 01       	movw	r30, r14
 684:	80 83       	st	Z, r24
 686:	80 91 00 02 	lds	r24, 0x0200
 68a:	f8 01       	movw	r30, r16
 68c:	80 83       	st	Z, r24
 68e:	6a cf       	rjmp	.-300    	; 0x564 <forward_wls+0x30>
 690:	c1 30       	cpi	r28, 0x01	; 1
 692:	d1 05       	cpc	r29, r1
 694:	09 f0       	breq	.+2      	; 0x698 <forward_wls+0x164>
 696:	66 cf       	rjmp	.-308    	; 0x564 <forward_wls+0x30>
 698:	8b e0       	ldi	r24, 0x0B	; 11
 69a:	ca de       	rcall	.-620    	; 0x430 <ADC_Conversion>
 69c:	80 93 36 02 	sts	0x0236, r24
 6a0:	8d 33       	cpi	r24, 0x3D	; 61
 6a2:	08 f4       	brcc	.+2      	; 0x6a6 <forward_wls+0x172>
 6a4:	5f cf       	rjmp	.-322    	; 0x564 <forward_wls+0x30>
 6a6:	80 91 37 02 	lds	r24, 0x0237
 6aa:	80 35       	cpi	r24, 0x50	; 80
 6ac:	08 f0       	brcs	.+2      	; 0x6b0 <forward_wls+0x17c>
 6ae:	5a cf       	rjmp	.-332    	; 0x564 <forward_wls+0x30>
 6b0:	80 91 2b 02 	lds	r24, 0x022B
 6b4:	80 35       	cpi	r24, 0x50	; 80
 6b6:	08 f0       	brcs	.+2      	; 0x6ba <forward_wls+0x186>
 6b8:	55 cf       	rjmp	.-342    	; 0x564 <forward_wls+0x30>
 6ba:	80 91 2e 02 	lds	r24, 0x022E
 6be:	80 35       	cpi	r24, 0x50	; 80
 6c0:	08 f0       	brcs	.+2      	; 0x6c4 <forward_wls+0x190>
 6c2:	50 cf       	rjmp	.-352    	; 0x564 <forward_wls+0x30>
 6c4:	83 de       	rcall	.-762    	; 0x3cc <stop>
 6c6:	ff ef       	ldi	r31, 0xFF	; 255
 6c8:	2f e7       	ldi	r18, 0x7F	; 127
 6ca:	86 e1       	ldi	r24, 0x16	; 22
 6cc:	f1 50       	subi	r31, 0x01	; 1
 6ce:	20 40       	sbci	r18, 0x00	; 0
 6d0:	80 40       	sbci	r24, 0x00	; 0
 6d2:	e1 f7       	brne	.-8      	; 0x6cc <forward_wls+0x198>
 6d4:	00 c0       	rjmp	.+0      	; 0x6d6 <forward_wls+0x1a2>
 6d6:	00 00       	nop
 6d8:	0b d0       	rcall	.+22     	; 0x6f0 <forward_walls>
 6da:	03 c0       	rjmp	.+6      	; 0x6e2 <forward_wls+0x1ae>
 6dc:	98 17       	cp	r25, r24
 6de:	78 f2       	brcs	.-98     	; 0x67e <forward_wls+0x14a>
 6e0:	d7 cf       	rjmp	.-82     	; 0x690 <forward_wls+0x15c>
 6e2:	df 91       	pop	r29
 6e4:	cf 91       	pop	r28
 6e6:	1f 91       	pop	r17
 6e8:	0f 91       	pop	r16
 6ea:	ff 90       	pop	r15
 6ec:	ef 90       	pop	r14
 6ee:	08 95       	ret

000006f0 <forward_walls>:
 6f0:	ef 92       	push	r14
 6f2:	ff 92       	push	r15
 6f4:	0f 93       	push	r16
 6f6:	1f 93       	push	r17
 6f8:	cf 93       	push	r28
 6fa:	df 93       	push	r29
 6fc:	5e de       	rcall	.-836    	; 0x3ba <forward>
 6fe:	8c ed       	ldi	r24, 0xDC	; 220
 700:	80 93 28 01 	sts	0x0128, r24
 704:	80 93 2a 01 	sts	0x012A, r24
 708:	08 e2       	ldi	r16, 0x28	; 40
 70a:	11 e0       	ldi	r17, 0x01	; 1
 70c:	0f 2e       	mov	r0, r31
 70e:	f6 e9       	ldi	r31, 0x96	; 150
 710:	ff 2e       	mov	r15, r31
 712:	f0 2d       	mov	r31, r0
 714:	ca e2       	ldi	r28, 0x2A	; 42
 716:	d1 e0       	ldi	r29, 0x01	; 1
 718:	0f 2e       	mov	r0, r31
 71a:	fc ed       	ldi	r31, 0xDC	; 220
 71c:	ef 2e       	mov	r14, r31
 71e:	f0 2d       	mov	r31, r0
 720:	8b e0       	ldi	r24, 0x0B	; 11
 722:	86 de       	rcall	.-756    	; 0x430 <ADC_Conversion>
 724:	80 93 36 02 	sts	0x0236, r24
 728:	48 de       	rcall	.-880    	; 0x3ba <forward>
 72a:	80 91 36 02 	lds	r24, 0x0236
 72e:	9c e9       	ldi	r25, 0x9C	; 156
 730:	98 0f       	add	r25, r24
 732:	94 32       	cpi	r25, 0x24	; 36
 734:	68 f4       	brcc	.+26     	; 0x750 <forward_walls+0x60>
 736:	f8 01       	movw	r30, r16
 738:	e0 82       	st	Z, r14
 73a:	e8 82       	st	Y, r14
 73c:	ff ef       	ldi	r31, 0xFF	; 255
 73e:	2f e7       	ldi	r18, 0x7F	; 127
 740:	84 e0       	ldi	r24, 0x04	; 4
 742:	f1 50       	subi	r31, 0x01	; 1
 744:	20 40       	sbci	r18, 0x00	; 0
 746:	80 40       	sbci	r24, 0x00	; 0
 748:	e1 f7       	brne	.-8      	; 0x742 <forward_walls+0x52>
 74a:	00 c0       	rjmp	.+0      	; 0x74c <forward_walls+0x5c>
 74c:	00 00       	nop
 74e:	e8 cf       	rjmp	.-48     	; 0x720 <forward_walls+0x30>
 750:	88 38       	cpi	r24, 0x88	; 136
 752:	58 f0       	brcs	.+22     	; 0x76a <forward_walls+0x7a>
 754:	f8 01       	movw	r30, r16
 756:	f0 82       	st	Z, r15
 758:	f8 82       	st	Y, r15
 75a:	32 de       	rcall	.-924    	; 0x3c0 <right>
 75c:	8c ec       	ldi	r24, 0xCC	; 204
 75e:	9c e1       	ldi	r25, 0x1C	; 28
 760:	01 97       	sbiw	r24, 0x01	; 1
 762:	f1 f7       	brne	.-4      	; 0x760 <forward_walls+0x70>
 764:	00 c0       	rjmp	.+0      	; 0x766 <forward_walls+0x76>
 766:	00 00       	nop
 768:	db cf       	rjmp	.-74     	; 0x720 <forward_walls+0x30>
 76a:	9d ec       	ldi	r25, 0xCD	; 205
 76c:	98 0f       	add	r25, r24
 76e:	96 33       	cpi	r25, 0x36	; 54
 770:	58 f4       	brcc	.+22     	; 0x788 <forward_walls+0x98>
 772:	f8 01       	movw	r30, r16
 774:	f0 82       	st	Z, r15
 776:	f8 82       	st	Y, r15
 778:	26 de       	rcall	.-948    	; 0x3c6 <left>
 77a:	8c ec       	ldi	r24, 0xCC	; 204
 77c:	9c e1       	ldi	r25, 0x1C	; 28
 77e:	01 97       	sbiw	r24, 0x01	; 1
 780:	f1 f7       	brne	.-4      	; 0x77e <forward_walls+0x8e>
 782:	00 c0       	rjmp	.+0      	; 0x784 <forward_walls+0x94>
 784:	00 00       	nop
 786:	cc cf       	rjmp	.-104    	; 0x720 <forward_walls+0x30>
 788:	82 33       	cpi	r24, 0x32	; 50
 78a:	50 f6       	brcc	.-108    	; 0x720 <forward_walls+0x30>
 78c:	9f ef       	ldi	r25, 0xFF	; 255
 78e:	ef e3       	ldi	r30, 0x3F	; 63
 790:	f2 e0       	ldi	r31, 0x02	; 2
 792:	91 50       	subi	r25, 0x01	; 1
 794:	e0 40       	sbci	r30, 0x00	; 0
 796:	f0 40       	sbci	r31, 0x00	; 0
 798:	e1 f7       	brne	.-8      	; 0x792 <forward_walls+0xa2>
 79a:	00 c0       	rjmp	.+0      	; 0x79c <forward_walls+0xac>
 79c:	00 00       	nop
 79e:	80 e0       	ldi	r24, 0x00	; 0
 7a0:	90 e0       	ldi	r25, 0x00	; 0
 7a2:	c8 de       	rcall	.-624    	; 0x534 <forward_wls>
 7a4:	df 91       	pop	r29
 7a6:	cf 91       	pop	r28
 7a8:	1f 91       	pop	r17
 7aa:	0f 91       	pop	r16
 7ac:	ff 90       	pop	r15
 7ae:	ef 90       	pop	r14
 7b0:	08 95       	ret

000007b2 <right_turn_wls>:

void right_turn_wls(void) {
	
  forward();
 7b2:	03 de       	rcall	.-1018   	; 0x3ba <forward>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 7b4:	2f ef       	ldi	r18, 0xFF	; 255
 7b6:	8f e3       	ldi	r24, 0x3F	; 63
 7b8:	9b e0       	ldi	r25, 0x0B	; 11
 7ba:	21 50       	subi	r18, 0x01	; 1
 7bc:	80 40       	sbci	r24, 0x00	; 0
 7be:	90 40       	sbci	r25, 0x00	; 0
 7c0:	e1 f7       	brne	.-8      	; 0x7ba <right_turn_wls+0x8>
 7c2:	00 c0       	rjmp	.+0      	; 0x7c4 <right_turn_wls+0x12>
 7c4:	00 00       	nop
  _delay_ms(250);
  right(); //code which help the robot to ignore the black line which is going straight so that it can focus on line which is going to the right
 7c6:	fc dd       	rcall	.-1032   	; 0x3c0 <right>
 7c8:	2f ef       	ldi	r18, 0xFF	; 255
 7ca:	8f ef       	ldi	r24, 0xFF	; 255
 7cc:	98 e0       	ldi	r25, 0x08	; 8
 7ce:	21 50       	subi	r18, 0x01	; 1
 7d0:	80 40       	sbci	r24, 0x00	; 0
 7d2:	90 40       	sbci	r25, 0x00	; 0
 7d4:	e1 f7       	brne	.-8      	; 0x7ce <right_turn_wls+0x1c>
 7d6:	00 c0       	rjmp	.+0      	; 0x7d8 <right_turn_wls+0x26>
 7d8:	00 00       	nop
  _delay_ms(200);
  stop();
 7da:	f8 dd       	rcall	.-1040   	; 0x3cc <stop>
 7dc:	2f ef       	ldi	r18, 0xFF	; 255
 7de:	8f e3       	ldi	r24, 0x3F	; 63
 7e0:	92 e0       	ldi	r25, 0x02	; 2
 7e2:	21 50       	subi	r18, 0x01	; 1
 7e4:	80 40       	sbci	r24, 0x00	; 0
 7e6:	90 40       	sbci	r25, 0x00	; 0
 7e8:	e1 f7       	brne	.-8      	; 0x7e2 <right_turn_wls+0x30>
 7ea:	00 c0       	rjmp	.+0      	; 0x7ec <right_turn_wls+0x3a>
 7ec:	00 00       	nop
  _delay_ms(50);
  right();
 7ee:	e8 dd       	rcall	.-1072   	; 0x3c0 <right>
  OCR5AL = 100;
 7f0:	84 e6       	ldi	r24, 0x64	; 100
 7f2:	80 93 28 01 	sts	0x0128, r24
  OCR5BL = 100;
 7f6:	80 93 2a 01 	sts	0x012A, r24
  while (1) //while loop which detects black line using middle sensor so that the robot stops turning
  {
    rs = ADC_Conversion(3);
 7fa:	83 e0       	ldi	r24, 0x03	; 3
 7fc:	19 de       	rcall	.-974    	; 0x430 <ADC_Conversion>
 7fe:	80 93 2e 02 	sts	0x022E, r24
    if (rs >= 80) {
 802:	80 35       	cpi	r24, 0x50	; 80
 804:	d0 f3       	brcs	.-12     	; 0x7fa <right_turn_wls+0x48>
      PORTA = 0x00;
 806:	12 b8       	out	0x02, r1	; 2
      break;
    }
  }
  stop();
 808:	e1 dd       	rcall	.-1086   	; 0x3cc <stop>
 80a:	2f ef       	ldi	r18, 0xFF	; 255
 80c:	8f ef       	ldi	r24, 0xFF	; 255
 80e:	98 e0       	ldi	r25, 0x08	; 8
 810:	21 50       	subi	r18, 0x01	; 1
 812:	80 40       	sbci	r24, 0x00	; 0
 814:	90 40       	sbci	r25, 0x00	; 0
 816:	e1 f7       	brne	.-8      	; 0x810 <right_turn_wls+0x5e>
 818:	00 c0       	rjmp	.+0      	; 0x81a <right_turn_wls+0x68>
 81a:	00 00       	nop
  _delay_ms(200);
  OCR5AL = base;
 81c:	80 91 02 02 	lds	r24, 0x0202
 820:	80 93 28 01 	sts	0x0128, r24
  OCR5BL = base;
 824:	80 91 02 02 	lds	r24, 0x0202
 828:	80 93 2a 01 	sts	0x012A, r24
 82c:	08 95       	ret

0000082e <left_turn_wls>:

}

void left_turn_wls(void) {

  forward();
 82e:	c5 dd       	rcall	.-1142   	; 0x3ba <forward>
 830:	2f ef       	ldi	r18, 0xFF	; 255
 832:	8f e3       	ldi	r24, 0x3F	; 63
 834:	9b e0       	ldi	r25, 0x0B	; 11
 836:	21 50       	subi	r18, 0x01	; 1
 838:	80 40       	sbci	r24, 0x00	; 0
 83a:	90 40       	sbci	r25, 0x00	; 0
 83c:	e1 f7       	brne	.-8      	; 0x836 <left_turn_wls+0x8>
 83e:	00 c0       	rjmp	.+0      	; 0x840 <left_turn_wls+0x12>
 840:	00 00       	nop
  _delay_ms(250);
  left(); //code which help the robot to ignore the black line which is going straight so that it can focus on line which is going to the right
 842:	c1 dd       	rcall	.-1150   	; 0x3c6 <left>
 844:	2f ef       	ldi	r18, 0xFF	; 255
 846:	8f ef       	ldi	r24, 0xFF	; 255
 848:	98 e0       	ldi	r25, 0x08	; 8
 84a:	21 50       	subi	r18, 0x01	; 1
 84c:	80 40       	sbci	r24, 0x00	; 0
 84e:	90 40       	sbci	r25, 0x00	; 0
 850:	e1 f7       	brne	.-8      	; 0x84a <left_turn_wls+0x1c>
 852:	00 c0       	rjmp	.+0      	; 0x854 <left_turn_wls+0x26>
 854:	00 00       	nop
  _delay_ms(200);
  stop();
 856:	ba dd       	rcall	.-1164   	; 0x3cc <stop>
 858:	2f ef       	ldi	r18, 0xFF	; 255
 85a:	8f e3       	ldi	r24, 0x3F	; 63
 85c:	92 e0       	ldi	r25, 0x02	; 2
 85e:	21 50       	subi	r18, 0x01	; 1
 860:	80 40       	sbci	r24, 0x00	; 0
 862:	90 40       	sbci	r25, 0x00	; 0
 864:	e1 f7       	brne	.-8      	; 0x85e <left_turn_wls+0x30>
 866:	00 c0       	rjmp	.+0      	; 0x868 <left_turn_wls+0x3a>
 868:	00 00       	nop
  _delay_ms(50);
  left();
 86a:	ad dd       	rcall	.-1190   	; 0x3c6 <left>
  OCR5AL = 100;
 86c:	84 e6       	ldi	r24, 0x64	; 100
 86e:	80 93 28 01 	sts	0x0128, r24
  OCR5BL = 100;
 872:	80 93 2a 01 	sts	0x012A, r24
  while (1) //while loop which detects black line using middle sensor so that the robot stops turning
  {
    ls = ADC_Conversion(1);
 876:	81 e0       	ldi	r24, 0x01	; 1
 878:	db dd       	rcall	.-1098   	; 0x430 <ADC_Conversion>
 87a:	80 93 37 02 	sts	0x0237, r24
    if (ls >= 80) {
 87e:	80 35       	cpi	r24, 0x50	; 80
 880:	d0 f3       	brcs	.-12     	; 0x876 <left_turn_wls+0x48>
      PORTA = 0x00;
 882:	12 b8       	out	0x02, r1	; 2
      break;
    }
  }
  left();
 884:	a0 dd       	rcall	.-1216   	; 0x3c6 <left>
 886:	8f ef       	ldi	r24, 0xFF	; 255
 888:	9f e8       	ldi	r25, 0x8F	; 143
 88a:	01 97       	sbiw	r24, 0x01	; 1
 88c:	f1 f7       	brne	.-4      	; 0x88a <left_turn_wls+0x5c>
 88e:	00 c0       	rjmp	.+0      	; 0x890 <left_turn_wls+0x62>
 890:	00 00       	nop
  _delay_ms(10);
  stop();
 892:	9c dd       	rcall	.-1224   	; 0x3cc <stop>
 894:	9f ef       	ldi	r25, 0xFF	; 255
 896:	2f ef       	ldi	r18, 0xFF	; 255
 898:	88 e0       	ldi	r24, 0x08	; 8
 89a:	91 50       	subi	r25, 0x01	; 1
 89c:	20 40       	sbci	r18, 0x00	; 0
 89e:	80 40       	sbci	r24, 0x00	; 0
 8a0:	e1 f7       	brne	.-8      	; 0x89a <left_turn_wls+0x6c>
 8a2:	00 c0       	rjmp	.+0      	; 0x8a4 <left_turn_wls+0x76>
 8a4:	00 00       	nop
  _delay_ms(200);
  OCR5AL = base;
 8a6:	80 91 02 02 	lds	r24, 0x0202
 8aa:	80 93 28 01 	sts	0x0128, r24
  OCR5BL = base;
 8ae:	80 91 02 02 	lds	r24, 0x0202
 8b2:	80 93 2a 01 	sts	0x012A, r24
 8b6:	08 95       	ret

000008b8 <forward_untw>:

}
int forward_untw() {
 8b8:	ef 92       	push	r14
 8ba:	ff 92       	push	r15
 8bc:	0f 93       	push	r16
 8be:	1f 93       	push	r17
 8c0:	cf 93       	push	r28
 8c2:	df 93       	push	r29
  forward();
 8c4:	7a dd       	rcall	.-1292   	; 0x3ba <forward>
 8c6:	2f ef       	ldi	r18, 0xFF	; 255
 8c8:	8f e3       	ldi	r24, 0x3F	; 63
 8ca:	92 e0       	ldi	r25, 0x02	; 2
 8cc:	21 50       	subi	r18, 0x01	; 1
 8ce:	80 40       	sbci	r24, 0x00	; 0
 8d0:	90 40       	sbci	r25, 0x00	; 0
 8d2:	e1 f7       	brne	.-8      	; 0x8cc <forward_untw+0x14>
 8d4:	00 c0       	rjmp	.+0      	; 0x8d6 <forward_untw+0x1e>
 8d6:	00 00       	nop

/* --------------------------------------------------------------*/

// Function for robot velocity control
void velocity(unsigned char left_motor, unsigned char right_motor) {
  OCR5AL = (unsigned char) left_motor;
 8d8:	84 eb       	ldi	r24, 0xB4	; 180
 8da:	80 93 28 01 	sts	0x0128, r24
  OCR5BL = (unsigned char) right_motor;
 8de:	80 93 2a 01 	sts	0x012A, r24

    } else if ((ls + ms + rs) < 200 && (ms > 50 && ms < 100) && ls > rs) {
      OCR5AL = 180;
      OCR5BL = 210;
    } else if ((ls + ms + rs) < 200 && (ms > 50 && ms < 100) && ls < rs) {
      OCR5AL = 210;
 8e2:	08 e2       	ldi	r16, 0x28	; 40
 8e4:	11 e0       	ldi	r17, 0x01	; 1
 8e6:	0f 2e       	mov	r0, r31
 8e8:	f2 ed       	ldi	r31, 0xD2	; 210
 8ea:	ff 2e       	mov	r15, r31
 8ec:	f0 2d       	mov	r31, r0
      OCR5BL = 180;
 8ee:	ca e2       	ldi	r28, 0x2A	; 42
 8f0:	d1 e0       	ldi	r29, 0x01	; 1
 8f2:	0f 2e       	mov	r0, r31
 8f4:	f4 eb       	ldi	r31, 0xB4	; 180
 8f6:	ef 2e       	mov	r14, r31
 8f8:	f0 2d       	mov	r31, r0
  forward();
  _delay_ms(50);
  velocity(180, 180);
  int n = 0;
  while (1) {
    ls = ADC_Conversion(1);
 8fa:	81 e0       	ldi	r24, 0x01	; 1
 8fc:	99 dd       	rcall	.-1230   	; 0x430 <ADC_Conversion>
 8fe:	80 93 37 02 	sts	0x0237, r24
    ms = ADC_Conversion(2);
 902:	82 e0       	ldi	r24, 0x02	; 2
 904:	95 dd       	rcall	.-1238   	; 0x430 <ADC_Conversion>
 906:	80 93 2b 02 	sts	0x022B, r24
    rs = ADC_Conversion(3);
 90a:	83 e0       	ldi	r24, 0x03	; 3
 90c:	91 dd       	rcall	.-1246   	; 0x430 <ADC_Conversion>
 90e:	80 93 2e 02 	sts	0x022E, r24
    	stop();
    	_delay_ms(500);
    	break;
    }
    */
    if ((ls < 60 && ms >= 125 && rs < 60)) {
 912:	90 91 37 02 	lds	r25, 0x0237
 916:	9c 33       	cpi	r25, 0x3C	; 60
 918:	50 f4       	brcc	.+20     	; 0x92e <forward_untw+0x76>
 91a:	20 91 2b 02 	lds	r18, 0x022B
 91e:	2d 37       	cpi	r18, 0x7D	; 125
 920:	30 f0       	brcs	.+12     	; 0x92e <forward_untw+0x76>
 922:	8c 33       	cpi	r24, 0x3C	; 60
 924:	20 f4       	brcc	.+8      	; 0x92e <forward_untw+0x76>
      OCR5AL = 210;
 926:	f8 01       	movw	r30, r16
 928:	f0 82       	st	Z, r15
      OCR5BL = 210;
 92a:	f8 82       	st	Y, r15
 92c:	e6 cf       	rjmp	.-52     	; 0x8fa <forward_untw+0x42>
    } else if ((ls < 40 && ms < 60 && rs > 140)) {
 92e:	98 32       	cpi	r25, 0x28	; 40
 930:	50 f4       	brcc	.+20     	; 0x946 <forward_untw+0x8e>
 932:	20 91 2b 02 	lds	r18, 0x022B
 936:	2c 33       	cpi	r18, 0x3C	; 60
 938:	30 f4       	brcc	.+12     	; 0x946 <forward_untw+0x8e>
 93a:	8d 38       	cpi	r24, 0x8D	; 141
 93c:	20 f0       	brcs	.+8      	; 0x946 <forward_untw+0x8e>
      OCR5AL = 210; //check
 93e:	f8 01       	movw	r30, r16
 940:	f0 82       	st	Z, r15
      OCR5BL = 180; //check
 942:	e8 82       	st	Y, r14
 944:	da cf       	rjmp	.-76     	; 0x8fa <forward_untw+0x42>
    } else if (rs < 40 && ms < 60 && ls > 140) {
 946:	88 32       	cpi	r24, 0x28	; 40
 948:	50 f4       	brcc	.+20     	; 0x95e <forward_untw+0xa6>
 94a:	20 91 2b 02 	lds	r18, 0x022B
 94e:	2c 33       	cpi	r18, 0x3C	; 60
 950:	30 f4       	brcc	.+12     	; 0x95e <forward_untw+0xa6>
 952:	9d 38       	cpi	r25, 0x8D	; 141
 954:	20 f0       	brcs	.+8      	; 0x95e <forward_untw+0xa6>
      OCR5AL = 180; //check
 956:	f8 01       	movw	r30, r16
 958:	e0 82       	st	Z, r14
      OCR5BL = 210; //check
 95a:	f8 82       	st	Y, r15
 95c:	ce cf       	rjmp	.-100    	; 0x8fa <forward_untw+0x42>

    } else if ((ls + ms + rs) < 200 && (ms > 50 && ms < 100) && ls > rs) {
 95e:	40 91 2b 02 	lds	r20, 0x022B
 962:	24 2f       	mov	r18, r20
 964:	30 e0       	ldi	r19, 0x00	; 0
 966:	29 0f       	add	r18, r25
 968:	31 1d       	adc	r19, r1
 96a:	28 0f       	add	r18, r24
 96c:	31 1d       	adc	r19, r1
 96e:	28 3c       	cpi	r18, 0xC8	; 200
 970:	31 05       	cpc	r19, r1
 972:	74 f4       	brge	.+28     	; 0x990 <forward_untw+0xd8>
 974:	5d ec       	ldi	r21, 0xCD	; 205
 976:	54 0f       	add	r21, r20
 978:	51 33       	cpi	r21, 0x31	; 49
 97a:	50 f4       	brcc	.+20     	; 0x990 <forward_untw+0xd8>
 97c:	89 17       	cp	r24, r25
 97e:	20 f5       	brcc	.+72     	; 0x9c8 <forward_untw+0x110>
      OCR5AL = 180;
 980:	f8 01       	movw	r30, r16
 982:	e0 82       	st	Z, r14
      OCR5BL = 210;
 984:	f8 82       	st	Y, r15
 986:	b9 cf       	rjmp	.-142    	; 0x8fa <forward_untw+0x42>
    } else if ((ls + ms + rs) < 200 && (ms > 50 && ms < 100) && ls < rs) {
      OCR5AL = 210;
 988:	f8 01       	movw	r30, r16
 98a:	f0 82       	st	Z, r15
      OCR5BL = 180;
 98c:	e8 82       	st	Y, r14
 98e:	b5 cf       	rjmp	.-150    	; 0x8fa <forward_untw+0x42>
    } else if (ls < 60 && ms < 40 && rs < 60) {
 990:	9c 33       	cpi	r25, 0x3C	; 60
 992:	90 f4       	brcc	.+36     	; 0x9b8 <forward_untw+0x100>
 994:	48 32       	cpi	r20, 0x28	; 40
 996:	80 f4       	brcc	.+32     	; 0x9b8 <forward_untw+0x100>
 998:	8c 33       	cpi	r24, 0x3C	; 60
 99a:	70 f4       	brcc	.+28     	; 0x9b8 <forward_untw+0x100>
      stop();
 99c:	17 dd       	rcall	.-1490   	; 0x3cc <stop>
      n = 1;
      break;
    }
  }
  if (n == 0) {
    forward();
 99e:	0d dd       	rcall	.-1510   	; 0x3ba <forward>
 9a0:	ff ef       	ldi	r31, 0xFF	; 255
 9a2:	2f e5       	ldi	r18, 0x5F	; 95
 9a4:	83 e0       	ldi	r24, 0x03	; 3
 9a6:	f1 50       	subi	r31, 0x01	; 1
 9a8:	20 40       	sbci	r18, 0x00	; 0
 9aa:	80 40       	sbci	r24, 0x00	; 0
 9ac:	e1 f7       	brne	.-8      	; 0x9a6 <forward_untw+0xee>
 9ae:	00 c0       	rjmp	.+0      	; 0x9b0 <forward_untw+0xf8>
 9b0:	00 00       	nop
}
int forward_untw() {
  forward();
  _delay_ms(50);
  velocity(180, 180);
  int n = 0;
 9b2:	80 e0       	ldi	r24, 0x00	; 0
 9b4:	90 e0       	ldi	r25, 0x00	; 0
 9b6:	0b c0       	rjmp	.+22     	; 0x9ce <forward_untw+0x116>
      OCR5AL = 210;
      OCR5BL = 180;
    } else if (ls < 60 && ms < 40 && rs < 60) {
      stop();
      break;
    } else if ((ls + ms + rs) > 450) {
 9b8:	23 3c       	cpi	r18, 0xC3	; 195
 9ba:	31 40       	sbci	r19, 0x01	; 1
 9bc:	0c f4       	brge	.+2      	; 0x9c0 <forward_untw+0x108>
 9be:	9d cf       	rjmp	.-198    	; 0x8fa <forward_untw+0x42>
      stop();
 9c0:	05 dd       	rcall	.-1526   	; 0x3cc <stop>
      n = 1;
 9c2:	81 e0       	ldi	r24, 0x01	; 1
 9c4:	90 e0       	ldi	r25, 0x00	; 0
 9c6:	03 c0       	rjmp	.+6      	; 0x9ce <forward_untw+0x116>
      OCR5BL = 210; //check

    } else if ((ls + ms + rs) < 200 && (ms > 50 && ms < 100) && ls > rs) {
      OCR5AL = 180;
      OCR5BL = 210;
    } else if ((ls + ms + rs) < 200 && (ms > 50 && ms < 100) && ls < rs) {
 9c8:	98 17       	cp	r25, r24
 9ca:	f0 f2       	brcs	.-68     	; 0x988 <forward_untw+0xd0>
 9cc:	e1 cf       	rjmp	.-62     	; 0x990 <forward_untw+0xd8>
  if (n == 0) {
    forward();
    _delay_ms(75);
  }
  return n;
}
 9ce:	df 91       	pop	r29
 9d0:	cf 91       	pop	r28
 9d2:	1f 91       	pop	r17
 9d4:	0f 91       	pop	r16
 9d6:	ff 90       	pop	r15
 9d8:	ef 90       	pop	r14
 9da:	08 95       	ret

000009dc <forward_zigzag>:

void forward_zigzag() {
  LCD_Function(3);
 9dc:	83 e0       	ldi	r24, 0x03	; 3
 9de:	90 e0       	ldi	r25, 0x00	; 0
 9e0:	42 dd       	rcall	.-1404   	; 0x466 <LCD_Function>
  int delay = 350;
  int temp;
  while (1) {
    temp = forward_untw();
 9e2:	6a df       	rcall	.-300    	; 0x8b8 <forward_untw>
    if (temp == 1)
 9e4:	01 97       	sbiw	r24, 0x01	; 1
 9e6:	69 f0       	breq	.+26     	; 0xa02 <forward_zigzag+0x26>
      break;
    left();
 9e8:	ee dc       	rcall	.-1572   	; 0x3c6 <left>
 9ea:	2f ef       	ldi	r18, 0xFF	; 255
 9ec:	8f eb       	ldi	r24, 0xBF	; 191
 9ee:	9f e0       	ldi	r25, 0x0F	; 15
 9f0:	21 50       	subi	r18, 0x01	; 1
 9f2:	80 40       	sbci	r24, 0x00	; 0
 9f4:	90 40       	sbci	r25, 0x00	; 0
 9f6:	e1 f7       	brne	.-8      	; 0x9f0 <forward_zigzag+0x14>
 9f8:	00 c0       	rjmp	.+0      	; 0x9fa <forward_zigzag+0x1e>
 9fa:	00 00       	nop
    _delay_ms(delay);
    stop();
 9fc:	e7 dc       	rcall	.-1586   	; 0x3cc <stop>
    right_turn_wls();
 9fe:	d9 de       	rcall	.-590    	; 0x7b2 <right_turn_wls>
  }
 a00:	f0 cf       	rjmp	.-32     	; 0x9e2 <forward_zigzag+0x6>
  forward();
 a02:	db dc       	rcall	.-1610   	; 0x3ba <forward>
  velocity(base, base);
 a04:	80 91 02 02 	lds	r24, 0x0202

/* --------------------------------------------------------------*/

// Function for robot velocity control
void velocity(unsigned char left_motor, unsigned char right_motor) {
  OCR5AL = (unsigned char) left_motor;
 a08:	80 93 28 01 	sts	0x0128, r24
  OCR5BL = (unsigned char) right_motor;
 a0c:	80 93 2a 01 	sts	0x012A, r24
 a10:	2f ef       	ldi	r18, 0xFF	; 255
 a12:	8f e3       	ldi	r24, 0x3F	; 63
 a14:	9b e0       	ldi	r25, 0x0B	; 11
 a16:	21 50       	subi	r18, 0x01	; 1
 a18:	80 40       	sbci	r24, 0x00	; 0
 a1a:	90 40       	sbci	r25, 0x00	; 0
 a1c:	e1 f7       	brne	.-8      	; 0xa16 <forward_zigzag+0x3a>
 a1e:	00 c0       	rjmp	.+0      	; 0xa20 <forward_zigzag+0x44>
 a20:	00 00       	nop
    right_turn_wls();
  }
  forward();
  velocity(base, base);
  _delay_ms(250);
  stop();
 a22:	d4 dc       	rcall	.-1624   	; 0x3cc <stop>
 a24:	2f ef       	ldi	r18, 0xFF	; 255
 a26:	8f ef       	ldi	r24, 0xFF	; 255
 a28:	9c e2       	ldi	r25, 0x2C	; 44
 a2a:	21 50       	subi	r18, 0x01	; 1
 a2c:	80 40       	sbci	r24, 0x00	; 0
 a2e:	90 40       	sbci	r25, 0x00	; 0
 a30:	e1 f7       	brne	.-8      	; 0xa2a <forward_zigzag+0x4e>
 a32:	00 c0       	rjmp	.+0      	; 0xa34 <forward_zigzag+0x58>
 a34:	00 00       	nop
 a36:	08 95       	ret

00000a38 <adc_init>:
/* --------------------------------------------------------------*/

//Devices Initialization Function ->
//Function to Initialize ADC
void adc_init() {
  ADCSRA = 0x00;
 a38:	ea e7       	ldi	r30, 0x7A	; 122
 a3a:	f0 e0       	ldi	r31, 0x00	; 0
 a3c:	10 82       	st	Z, r1
  ADCSRB = 0x00; //MUX5 = 0
 a3e:	10 92 7b 00 	sts	0x007B, r1
  ADMUX = 0x20; //Vref=5V external --- ADLAR=1 --- MUX4:0 = 0000
 a42:	80 e2       	ldi	r24, 0x20	; 32
 a44:	80 93 7c 00 	sts	0x007C, r24
  ACSR = 0x80;
 a48:	80 e8       	ldi	r24, 0x80	; 128
 a4a:	80 bf       	out	0x30, r24	; 48
  ADCSRA = 0x86; //ADEN=1 --- ADIE=1 --- ADPS2:0 = 1 1 0
 a4c:	86 e8       	ldi	r24, 0x86	; 134
 a4e:	80 83       	st	Z, r24
 a50:	08 95       	ret

00000a52 <init_devices>:
}

void init_devices(void) {
  cli(); //Clears the global interrupts
 a52:	f8 94       	cli
  port_init();
 a54:	a1 dc       	rcall	.-1726   	; 0x398 <port_init>
  adc_init();
 a56:	f0 df       	rcall	.-32     	; 0xa38 <adc_init>
  timer5_init();
 a58:	58 dc       	rcall	.-1872   	; 0x30a <timer5_init>
  timer1_init();
 a5a:	34 dc       	rcall	.-1944   	; 0x2c4 <timer1_init>
  sei(); //Enables the global interrupts
 a5c:	78 94       	sei
  lcd_set_4bit(); //These functions need not to be inside interrupt blocked code
 a5e:	69 db       	rcall	.-2350   	; 0x132 <lcd_set_4bit>
  lcd_init();
 a60:	d2 cb       	rjmp	.-2140   	; 0x206 <lcd_init>
 a62:	08 95       	ret

00000a64 <main>:
}
/* --------------------------------------------------------------*/

//Main Function ->
int main() {
  init_devices();
 a64:	f6 df       	rcall	.-20     	; 0xa52 <init_devices>
  //buzzer_on();

  forward_wls(0);
 a66:	80 e0       	ldi	r24, 0x00	; 0
 a68:	90 e0       	ldi	r25, 0x00	; 0
 a6a:	64 dd       	rcall	.-1336   	; 0x534 <forward_wls>
  right_turn_wls();
 a6c:	a2 de       	rcall	.-700    	; 0x7b2 <right_turn_wls>

  forward_wls(2);
 a6e:	82 e0       	ldi	r24, 0x02	; 2
 a70:	90 e0       	ldi	r25, 0x00	; 0
 a72:	60 dd       	rcall	.-1344   	; 0x534 <forward_wls>
  right_turn_wls();
 a74:	9e de       	rcall	.-708    	; 0x7b2 <right_turn_wls>

  forward_wls(0);
 a76:	80 e0       	ldi	r24, 0x00	; 0
 a78:	90 e0       	ldi	r25, 0x00	; 0
 a7a:	5c dd       	rcall	.-1352   	; 0x534 <forward_wls>
  right_turn_wls();
 a7c:	9a de       	rcall	.-716    	; 0x7b2 <right_turn_wls>
  back();
 a7e:	9a dc       	rcall	.-1740   	; 0x3b4 <back>
 a80:	26 e6       	ldi	r18, 0x66	; 102
 a82:	36 e6       	ldi	r19, 0x66	; 102
 a84:	85 e0       	ldi	r24, 0x05	; 5
 a86:	21 50       	subi	r18, 0x01	; 1
 a88:	30 40       	sbci	r19, 0x00	; 0
 a8a:	80 40       	sbci	r24, 0x00	; 0
 a8c:	e1 f7       	brne	.-8      	; 0xa86 <main+0x22>
  _delay_ms(120);
  stop();
 a8e:	9e dc       	rcall	.-1732   	; 0x3cc <stop>

  m_pick();
 a90:	0d dd       	rcall	.-1510   	; 0x4ac <m_pick>
  left_turn_wls();
 a92:	cd de       	rcall	.-614    	; 0x82e <left_turn_wls>
  forward_wls(0);
 a94:	80 e0       	ldi	r24, 0x00	; 0
 a96:	90 e0       	ldi	r25, 0x00	; 0
 a98:	4d dd       	rcall	.-1382   	; 0x534 <forward_wls>
  right_turn_wls();
 a9a:	8b de       	rcall	.-746    	; 0x7b2 <right_turn_wls>

  forward_wls(1);
 a9c:	81 e0       	ldi	r24, 0x01	; 1
 a9e:	90 e0       	ldi	r25, 0x00	; 0
 aa0:	49 dd       	rcall	.-1390   	; 0x534 <forward_wls>

  left_turn_wls();
 aa2:	c5 de       	rcall	.-630    	; 0x82e <left_turn_wls>

  forward_wls(0);
 aa4:	80 e0       	ldi	r24, 0x00	; 0
 aa6:	90 e0       	ldi	r25, 0x00	; 0
 aa8:	45 dd       	rcall	.-1398   	; 0x534 <forward_wls>
  forward_wls(0);
 aaa:	80 e0       	ldi	r24, 0x00	; 0
 aac:	90 e0       	ldi	r25, 0x00	; 0
 aae:	42 dd       	rcall	.-1404   	; 0x534 <forward_wls>

  left_turn_wls();
 ab0:	be de       	rcall	.-644    	; 0x82e <left_turn_wls>

  forward_zigzag();
 ab2:	94 df       	rcall	.-216    	; 0x9dc <forward_zigzag>

  left_turn_wls();
 ab4:	bc de       	rcall	.-648    	; 0x82e <left_turn_wls>

  forward_wls(0);
 ab6:	80 e0       	ldi	r24, 0x00	; 0
 ab8:	90 e0       	ldi	r25, 0x00	; 0
 aba:	3c dd       	rcall	.-1416   	; 0x534 <forward_wls>
  forward_wls(0);
 abc:	80 e0       	ldi	r24, 0x00	; 0
 abe:	90 e0       	ldi	r25, 0x00	; 0
 ac0:	39 dd       	rcall	.-1422   	; 0x534 <forward_wls>
  forward_wls(0);
 ac2:	80 e0       	ldi	r24, 0x00	; 0
 ac4:	90 e0       	ldi	r25, 0x00	; 0
 ac6:	36 dd       	rcall	.-1428   	; 0x534 <forward_wls>

  forward_wls(2);
 ac8:	82 e0       	ldi	r24, 0x02	; 2
 aca:	90 e0       	ldi	r25, 0x00	; 0
 acc:	33 dd       	rcall	.-1434   	; 0x534 <forward_wls>

  left_turn_wls();
 ace:	af de       	rcall	.-674    	; 0x82e <left_turn_wls>

  forward_wls(2);
 ad0:	82 e0       	ldi	r24, 0x02	; 2
 ad2:	90 e0       	ldi	r25, 0x00	; 0
 ad4:	2f dd       	rcall	.-1442   	; 0x534 <forward_wls>

  left_turn_wls();
 ad6:	ab de       	rcall	.-682    	; 0x82e <left_turn_wls>

  stop();
 ad8:	79 dc       	rcall	.-1806   	; 0x3cc <stop>
 ada:	9f ef       	ldi	r25, 0xFF	; 255
 adc:	2f ef       	ldi	r18, 0xFF	; 255
 ade:	36 e7       	ldi	r19, 0x76	; 118
 ae0:	81 e0       	ldi	r24, 0x01	; 1
 ae2:	91 50       	subi	r25, 0x01	; 1
 ae4:	20 40       	sbci	r18, 0x00	; 0
 ae6:	30 40       	sbci	r19, 0x00	; 0
 ae8:	80 40       	sbci	r24, 0x00	; 0
 aea:	d9 f7       	brne	.-10     	; 0xae2 <main+0x7e>
 aec:	00 c0       	rjmp	.+0      	; 0xaee <main+0x8a>
 aee:	00 00       	nop
  _delay_ms(10000);
}
 af0:	80 e0       	ldi	r24, 0x00	; 0
 af2:	90 e0       	ldi	r25, 0x00	; 0
 af4:	08 95       	ret

00000af6 <__subsf3>:
 af6:	50 58       	subi	r21, 0x80	; 128

00000af8 <__addsf3>:
 af8:	bb 27       	eor	r27, r27
 afa:	aa 27       	eor	r26, r26
 afc:	0e d0       	rcall	.+28     	; 0xb1a <__addsf3x>
 afe:	48 c1       	rjmp	.+656    	; 0xd90 <__fp_round>
 b00:	39 d1       	rcall	.+626    	; 0xd74 <__fp_pscA>
 b02:	30 f0       	brcs	.+12     	; 0xb10 <__addsf3+0x18>
 b04:	3e d1       	rcall	.+636    	; 0xd82 <__fp_pscB>
 b06:	20 f0       	brcs	.+8      	; 0xb10 <__addsf3+0x18>
 b08:	31 f4       	brne	.+12     	; 0xb16 <__addsf3+0x1e>
 b0a:	9f 3f       	cpi	r25, 0xFF	; 255
 b0c:	11 f4       	brne	.+4      	; 0xb12 <__addsf3+0x1a>
 b0e:	1e f4       	brtc	.+6      	; 0xb16 <__addsf3+0x1e>
 b10:	2e c1       	rjmp	.+604    	; 0xd6e <__fp_nan>
 b12:	0e f4       	brtc	.+2      	; 0xb16 <__addsf3+0x1e>
 b14:	e0 95       	com	r30
 b16:	e7 fb       	bst	r30, 7
 b18:	24 c1       	rjmp	.+584    	; 0xd62 <__fp_inf>

00000b1a <__addsf3x>:
 b1a:	e9 2f       	mov	r30, r25
 b1c:	4a d1       	rcall	.+660    	; 0xdb2 <__fp_split3>
 b1e:	80 f3       	brcs	.-32     	; 0xb00 <__addsf3+0x8>
 b20:	ba 17       	cp	r27, r26
 b22:	62 07       	cpc	r22, r18
 b24:	73 07       	cpc	r23, r19
 b26:	84 07       	cpc	r24, r20
 b28:	95 07       	cpc	r25, r21
 b2a:	18 f0       	brcs	.+6      	; 0xb32 <__addsf3x+0x18>
 b2c:	71 f4       	brne	.+28     	; 0xb4a <__addsf3x+0x30>
 b2e:	9e f5       	brtc	.+102    	; 0xb96 <__addsf3x+0x7c>
 b30:	62 c1       	rjmp	.+708    	; 0xdf6 <__fp_zero>
 b32:	0e f4       	brtc	.+2      	; 0xb36 <__addsf3x+0x1c>
 b34:	e0 95       	com	r30
 b36:	0b 2e       	mov	r0, r27
 b38:	ba 2f       	mov	r27, r26
 b3a:	a0 2d       	mov	r26, r0
 b3c:	0b 01       	movw	r0, r22
 b3e:	b9 01       	movw	r22, r18
 b40:	90 01       	movw	r18, r0
 b42:	0c 01       	movw	r0, r24
 b44:	ca 01       	movw	r24, r20
 b46:	a0 01       	movw	r20, r0
 b48:	11 24       	eor	r1, r1
 b4a:	ff 27       	eor	r31, r31
 b4c:	59 1b       	sub	r21, r25
 b4e:	99 f0       	breq	.+38     	; 0xb76 <__addsf3x+0x5c>
 b50:	59 3f       	cpi	r21, 0xF9	; 249
 b52:	50 f4       	brcc	.+20     	; 0xb68 <__addsf3x+0x4e>
 b54:	50 3e       	cpi	r21, 0xE0	; 224
 b56:	68 f1       	brcs	.+90     	; 0xbb2 <__addsf3x+0x98>
 b58:	1a 16       	cp	r1, r26
 b5a:	f0 40       	sbci	r31, 0x00	; 0
 b5c:	a2 2f       	mov	r26, r18
 b5e:	23 2f       	mov	r18, r19
 b60:	34 2f       	mov	r19, r20
 b62:	44 27       	eor	r20, r20
 b64:	58 5f       	subi	r21, 0xF8	; 248
 b66:	f3 cf       	rjmp	.-26     	; 0xb4e <__addsf3x+0x34>
 b68:	46 95       	lsr	r20
 b6a:	37 95       	ror	r19
 b6c:	27 95       	ror	r18
 b6e:	a7 95       	ror	r26
 b70:	f0 40       	sbci	r31, 0x00	; 0
 b72:	53 95       	inc	r21
 b74:	c9 f7       	brne	.-14     	; 0xb68 <__addsf3x+0x4e>
 b76:	7e f4       	brtc	.+30     	; 0xb96 <__addsf3x+0x7c>
 b78:	1f 16       	cp	r1, r31
 b7a:	ba 0b       	sbc	r27, r26
 b7c:	62 0b       	sbc	r22, r18
 b7e:	73 0b       	sbc	r23, r19
 b80:	84 0b       	sbc	r24, r20
 b82:	ba f0       	brmi	.+46     	; 0xbb2 <__addsf3x+0x98>
 b84:	91 50       	subi	r25, 0x01	; 1
 b86:	a1 f0       	breq	.+40     	; 0xbb0 <__addsf3x+0x96>
 b88:	ff 0f       	add	r31, r31
 b8a:	bb 1f       	adc	r27, r27
 b8c:	66 1f       	adc	r22, r22
 b8e:	77 1f       	adc	r23, r23
 b90:	88 1f       	adc	r24, r24
 b92:	c2 f7       	brpl	.-16     	; 0xb84 <__addsf3x+0x6a>
 b94:	0e c0       	rjmp	.+28     	; 0xbb2 <__addsf3x+0x98>
 b96:	ba 0f       	add	r27, r26
 b98:	62 1f       	adc	r22, r18
 b9a:	73 1f       	adc	r23, r19
 b9c:	84 1f       	adc	r24, r20
 b9e:	48 f4       	brcc	.+18     	; 0xbb2 <__addsf3x+0x98>
 ba0:	87 95       	ror	r24
 ba2:	77 95       	ror	r23
 ba4:	67 95       	ror	r22
 ba6:	b7 95       	ror	r27
 ba8:	f7 95       	ror	r31
 baa:	9e 3f       	cpi	r25, 0xFE	; 254
 bac:	08 f0       	brcs	.+2      	; 0xbb0 <__addsf3x+0x96>
 bae:	b3 cf       	rjmp	.-154    	; 0xb16 <__addsf3+0x1e>
 bb0:	93 95       	inc	r25
 bb2:	88 0f       	add	r24, r24
 bb4:	08 f0       	brcs	.+2      	; 0xbb8 <__addsf3x+0x9e>
 bb6:	99 27       	eor	r25, r25
 bb8:	ee 0f       	add	r30, r30
 bba:	97 95       	ror	r25
 bbc:	87 95       	ror	r24
 bbe:	08 95       	ret

00000bc0 <__divsf3>:
 bc0:	0c d0       	rcall	.+24     	; 0xbda <__divsf3x>
 bc2:	e6 c0       	rjmp	.+460    	; 0xd90 <__fp_round>
 bc4:	de d0       	rcall	.+444    	; 0xd82 <__fp_pscB>
 bc6:	40 f0       	brcs	.+16     	; 0xbd8 <__divsf3+0x18>
 bc8:	d5 d0       	rcall	.+426    	; 0xd74 <__fp_pscA>
 bca:	30 f0       	brcs	.+12     	; 0xbd8 <__divsf3+0x18>
 bcc:	21 f4       	brne	.+8      	; 0xbd6 <__divsf3+0x16>
 bce:	5f 3f       	cpi	r21, 0xFF	; 255
 bd0:	19 f0       	breq	.+6      	; 0xbd8 <__divsf3+0x18>
 bd2:	c7 c0       	rjmp	.+398    	; 0xd62 <__fp_inf>
 bd4:	51 11       	cpse	r21, r1
 bd6:	10 c1       	rjmp	.+544    	; 0xdf8 <__fp_szero>
 bd8:	ca c0       	rjmp	.+404    	; 0xd6e <__fp_nan>

00000bda <__divsf3x>:
 bda:	eb d0       	rcall	.+470    	; 0xdb2 <__fp_split3>
 bdc:	98 f3       	brcs	.-26     	; 0xbc4 <__divsf3+0x4>

00000bde <__divsf3_pse>:
 bde:	99 23       	and	r25, r25
 be0:	c9 f3       	breq	.-14     	; 0xbd4 <__divsf3+0x14>
 be2:	55 23       	and	r21, r21
 be4:	b1 f3       	breq	.-20     	; 0xbd2 <__divsf3+0x12>
 be6:	95 1b       	sub	r25, r21
 be8:	55 0b       	sbc	r21, r21
 bea:	bb 27       	eor	r27, r27
 bec:	aa 27       	eor	r26, r26
 bee:	62 17       	cp	r22, r18
 bf0:	73 07       	cpc	r23, r19
 bf2:	84 07       	cpc	r24, r20
 bf4:	38 f0       	brcs	.+14     	; 0xc04 <__divsf3_pse+0x26>
 bf6:	9f 5f       	subi	r25, 0xFF	; 255
 bf8:	5f 4f       	sbci	r21, 0xFF	; 255
 bfa:	22 0f       	add	r18, r18
 bfc:	33 1f       	adc	r19, r19
 bfe:	44 1f       	adc	r20, r20
 c00:	aa 1f       	adc	r26, r26
 c02:	a9 f3       	breq	.-22     	; 0xbee <__divsf3_pse+0x10>
 c04:	33 d0       	rcall	.+102    	; 0xc6c <__divsf3_pse+0x8e>
 c06:	0e 2e       	mov	r0, r30
 c08:	3a f0       	brmi	.+14     	; 0xc18 <__divsf3_pse+0x3a>
 c0a:	e0 e8       	ldi	r30, 0x80	; 128
 c0c:	30 d0       	rcall	.+96     	; 0xc6e <__divsf3_pse+0x90>
 c0e:	91 50       	subi	r25, 0x01	; 1
 c10:	50 40       	sbci	r21, 0x00	; 0
 c12:	e6 95       	lsr	r30
 c14:	00 1c       	adc	r0, r0
 c16:	ca f7       	brpl	.-14     	; 0xc0a <__divsf3_pse+0x2c>
 c18:	29 d0       	rcall	.+82     	; 0xc6c <__divsf3_pse+0x8e>
 c1a:	fe 2f       	mov	r31, r30
 c1c:	27 d0       	rcall	.+78     	; 0xc6c <__divsf3_pse+0x8e>
 c1e:	66 0f       	add	r22, r22
 c20:	77 1f       	adc	r23, r23
 c22:	88 1f       	adc	r24, r24
 c24:	bb 1f       	adc	r27, r27
 c26:	26 17       	cp	r18, r22
 c28:	37 07       	cpc	r19, r23
 c2a:	48 07       	cpc	r20, r24
 c2c:	ab 07       	cpc	r26, r27
 c2e:	b0 e8       	ldi	r27, 0x80	; 128
 c30:	09 f0       	breq	.+2      	; 0xc34 <__divsf3_pse+0x56>
 c32:	bb 0b       	sbc	r27, r27
 c34:	80 2d       	mov	r24, r0
 c36:	bf 01       	movw	r22, r30
 c38:	ff 27       	eor	r31, r31
 c3a:	93 58       	subi	r25, 0x83	; 131
 c3c:	5f 4f       	sbci	r21, 0xFF	; 255
 c3e:	2a f0       	brmi	.+10     	; 0xc4a <__divsf3_pse+0x6c>
 c40:	9e 3f       	cpi	r25, 0xFE	; 254
 c42:	51 05       	cpc	r21, r1
 c44:	68 f0       	brcs	.+26     	; 0xc60 <__divsf3_pse+0x82>
 c46:	8d c0       	rjmp	.+282    	; 0xd62 <__fp_inf>
 c48:	d7 c0       	rjmp	.+430    	; 0xdf8 <__fp_szero>
 c4a:	5f 3f       	cpi	r21, 0xFF	; 255
 c4c:	ec f3       	brlt	.-6      	; 0xc48 <__divsf3_pse+0x6a>
 c4e:	98 3e       	cpi	r25, 0xE8	; 232
 c50:	dc f3       	brlt	.-10     	; 0xc48 <__divsf3_pse+0x6a>
 c52:	86 95       	lsr	r24
 c54:	77 95       	ror	r23
 c56:	67 95       	ror	r22
 c58:	b7 95       	ror	r27
 c5a:	f7 95       	ror	r31
 c5c:	9f 5f       	subi	r25, 0xFF	; 255
 c5e:	c9 f7       	brne	.-14     	; 0xc52 <__divsf3_pse+0x74>
 c60:	88 0f       	add	r24, r24
 c62:	91 1d       	adc	r25, r1
 c64:	96 95       	lsr	r25
 c66:	87 95       	ror	r24
 c68:	97 f9       	bld	r25, 7
 c6a:	08 95       	ret
 c6c:	e1 e0       	ldi	r30, 0x01	; 1
 c6e:	66 0f       	add	r22, r22
 c70:	77 1f       	adc	r23, r23
 c72:	88 1f       	adc	r24, r24
 c74:	bb 1f       	adc	r27, r27
 c76:	62 17       	cp	r22, r18
 c78:	73 07       	cpc	r23, r19
 c7a:	84 07       	cpc	r24, r20
 c7c:	ba 07       	cpc	r27, r26
 c7e:	20 f0       	brcs	.+8      	; 0xc88 <__divsf3_pse+0xaa>
 c80:	62 1b       	sub	r22, r18
 c82:	73 0b       	sbc	r23, r19
 c84:	84 0b       	sbc	r24, r20
 c86:	ba 0b       	sbc	r27, r26
 c88:	ee 1f       	adc	r30, r30
 c8a:	88 f7       	brcc	.-30     	; 0xc6e <__divsf3_pse+0x90>
 c8c:	e0 95       	com	r30
 c8e:	08 95       	ret

00000c90 <__fixunssfsi>:
 c90:	98 d0       	rcall	.+304    	; 0xdc2 <__fp_splitA>
 c92:	88 f0       	brcs	.+34     	; 0xcb6 <__fixunssfsi+0x26>
 c94:	9f 57       	subi	r25, 0x7F	; 127
 c96:	90 f0       	brcs	.+36     	; 0xcbc <__fixunssfsi+0x2c>
 c98:	b9 2f       	mov	r27, r25
 c9a:	99 27       	eor	r25, r25
 c9c:	b7 51       	subi	r27, 0x17	; 23
 c9e:	a0 f0       	brcs	.+40     	; 0xcc8 <__fixunssfsi+0x38>
 ca0:	d1 f0       	breq	.+52     	; 0xcd6 <__fixunssfsi+0x46>
 ca2:	66 0f       	add	r22, r22
 ca4:	77 1f       	adc	r23, r23
 ca6:	88 1f       	adc	r24, r24
 ca8:	99 1f       	adc	r25, r25
 caa:	1a f0       	brmi	.+6      	; 0xcb2 <__fixunssfsi+0x22>
 cac:	ba 95       	dec	r27
 cae:	c9 f7       	brne	.-14     	; 0xca2 <__fixunssfsi+0x12>
 cb0:	12 c0       	rjmp	.+36     	; 0xcd6 <__fixunssfsi+0x46>
 cb2:	b1 30       	cpi	r27, 0x01	; 1
 cb4:	81 f0       	breq	.+32     	; 0xcd6 <__fixunssfsi+0x46>
 cb6:	9f d0       	rcall	.+318    	; 0xdf6 <__fp_zero>
 cb8:	b1 e0       	ldi	r27, 0x01	; 1
 cba:	08 95       	ret
 cbc:	9c c0       	rjmp	.+312    	; 0xdf6 <__fp_zero>
 cbe:	67 2f       	mov	r22, r23
 cc0:	78 2f       	mov	r23, r24
 cc2:	88 27       	eor	r24, r24
 cc4:	b8 5f       	subi	r27, 0xF8	; 248
 cc6:	39 f0       	breq	.+14     	; 0xcd6 <__fixunssfsi+0x46>
 cc8:	b9 3f       	cpi	r27, 0xF9	; 249
 cca:	cc f3       	brlt	.-14     	; 0xcbe <__fixunssfsi+0x2e>
 ccc:	86 95       	lsr	r24
 cce:	77 95       	ror	r23
 cd0:	67 95       	ror	r22
 cd2:	b3 95       	inc	r27
 cd4:	d9 f7       	brne	.-10     	; 0xccc <__fixunssfsi+0x3c>
 cd6:	3e f4       	brtc	.+14     	; 0xce6 <__fixunssfsi+0x56>
 cd8:	90 95       	com	r25
 cda:	80 95       	com	r24
 cdc:	70 95       	com	r23
 cde:	61 95       	neg	r22
 ce0:	7f 4f       	sbci	r23, 0xFF	; 255
 ce2:	8f 4f       	sbci	r24, 0xFF	; 255
 ce4:	9f 4f       	sbci	r25, 0xFF	; 255
 ce6:	08 95       	ret

00000ce8 <__floatunsisf>:
 ce8:	e8 94       	clt
 cea:	09 c0       	rjmp	.+18     	; 0xcfe <__floatsisf+0x12>

00000cec <__floatsisf>:
 cec:	97 fb       	bst	r25, 7
 cee:	3e f4       	brtc	.+14     	; 0xcfe <__floatsisf+0x12>
 cf0:	90 95       	com	r25
 cf2:	80 95       	com	r24
 cf4:	70 95       	com	r23
 cf6:	61 95       	neg	r22
 cf8:	7f 4f       	sbci	r23, 0xFF	; 255
 cfa:	8f 4f       	sbci	r24, 0xFF	; 255
 cfc:	9f 4f       	sbci	r25, 0xFF	; 255
 cfe:	99 23       	and	r25, r25
 d00:	a9 f0       	breq	.+42     	; 0xd2c <__floatsisf+0x40>
 d02:	f9 2f       	mov	r31, r25
 d04:	96 e9       	ldi	r25, 0x96	; 150
 d06:	bb 27       	eor	r27, r27
 d08:	93 95       	inc	r25
 d0a:	f6 95       	lsr	r31
 d0c:	87 95       	ror	r24
 d0e:	77 95       	ror	r23
 d10:	67 95       	ror	r22
 d12:	b7 95       	ror	r27
 d14:	f1 11       	cpse	r31, r1
 d16:	f8 cf       	rjmp	.-16     	; 0xd08 <__floatsisf+0x1c>
 d18:	fa f4       	brpl	.+62     	; 0xd58 <__floatsisf+0x6c>
 d1a:	bb 0f       	add	r27, r27
 d1c:	11 f4       	brne	.+4      	; 0xd22 <__floatsisf+0x36>
 d1e:	60 ff       	sbrs	r22, 0
 d20:	1b c0       	rjmp	.+54     	; 0xd58 <__floatsisf+0x6c>
 d22:	6f 5f       	subi	r22, 0xFF	; 255
 d24:	7f 4f       	sbci	r23, 0xFF	; 255
 d26:	8f 4f       	sbci	r24, 0xFF	; 255
 d28:	9f 4f       	sbci	r25, 0xFF	; 255
 d2a:	16 c0       	rjmp	.+44     	; 0xd58 <__floatsisf+0x6c>
 d2c:	88 23       	and	r24, r24
 d2e:	11 f0       	breq	.+4      	; 0xd34 <__floatsisf+0x48>
 d30:	96 e9       	ldi	r25, 0x96	; 150
 d32:	11 c0       	rjmp	.+34     	; 0xd56 <__floatsisf+0x6a>
 d34:	77 23       	and	r23, r23
 d36:	21 f0       	breq	.+8      	; 0xd40 <__floatsisf+0x54>
 d38:	9e e8       	ldi	r25, 0x8E	; 142
 d3a:	87 2f       	mov	r24, r23
 d3c:	76 2f       	mov	r23, r22
 d3e:	05 c0       	rjmp	.+10     	; 0xd4a <__floatsisf+0x5e>
 d40:	66 23       	and	r22, r22
 d42:	71 f0       	breq	.+28     	; 0xd60 <__floatsisf+0x74>
 d44:	96 e8       	ldi	r25, 0x86	; 134
 d46:	86 2f       	mov	r24, r22
 d48:	70 e0       	ldi	r23, 0x00	; 0
 d4a:	60 e0       	ldi	r22, 0x00	; 0
 d4c:	2a f0       	brmi	.+10     	; 0xd58 <__floatsisf+0x6c>
 d4e:	9a 95       	dec	r25
 d50:	66 0f       	add	r22, r22
 d52:	77 1f       	adc	r23, r23
 d54:	88 1f       	adc	r24, r24
 d56:	da f7       	brpl	.-10     	; 0xd4e <__floatsisf+0x62>
 d58:	88 0f       	add	r24, r24
 d5a:	96 95       	lsr	r25
 d5c:	87 95       	ror	r24
 d5e:	97 f9       	bld	r25, 7
 d60:	08 95       	ret

00000d62 <__fp_inf>:
 d62:	97 f9       	bld	r25, 7
 d64:	9f 67       	ori	r25, 0x7F	; 127
 d66:	80 e8       	ldi	r24, 0x80	; 128
 d68:	70 e0       	ldi	r23, 0x00	; 0
 d6a:	60 e0       	ldi	r22, 0x00	; 0
 d6c:	08 95       	ret

00000d6e <__fp_nan>:
 d6e:	9f ef       	ldi	r25, 0xFF	; 255
 d70:	80 ec       	ldi	r24, 0xC0	; 192
 d72:	08 95       	ret

00000d74 <__fp_pscA>:
 d74:	00 24       	eor	r0, r0
 d76:	0a 94       	dec	r0
 d78:	16 16       	cp	r1, r22
 d7a:	17 06       	cpc	r1, r23
 d7c:	18 06       	cpc	r1, r24
 d7e:	09 06       	cpc	r0, r25
 d80:	08 95       	ret

00000d82 <__fp_pscB>:
 d82:	00 24       	eor	r0, r0
 d84:	0a 94       	dec	r0
 d86:	12 16       	cp	r1, r18
 d88:	13 06       	cpc	r1, r19
 d8a:	14 06       	cpc	r1, r20
 d8c:	05 06       	cpc	r0, r21
 d8e:	08 95       	ret

00000d90 <__fp_round>:
 d90:	09 2e       	mov	r0, r25
 d92:	03 94       	inc	r0
 d94:	00 0c       	add	r0, r0
 d96:	11 f4       	brne	.+4      	; 0xd9c <__fp_round+0xc>
 d98:	88 23       	and	r24, r24
 d9a:	52 f0       	brmi	.+20     	; 0xdb0 <__fp_round+0x20>
 d9c:	bb 0f       	add	r27, r27
 d9e:	40 f4       	brcc	.+16     	; 0xdb0 <__fp_round+0x20>
 da0:	bf 2b       	or	r27, r31
 da2:	11 f4       	brne	.+4      	; 0xda8 <__fp_round+0x18>
 da4:	60 ff       	sbrs	r22, 0
 da6:	04 c0       	rjmp	.+8      	; 0xdb0 <__fp_round+0x20>
 da8:	6f 5f       	subi	r22, 0xFF	; 255
 daa:	7f 4f       	sbci	r23, 0xFF	; 255
 dac:	8f 4f       	sbci	r24, 0xFF	; 255
 dae:	9f 4f       	sbci	r25, 0xFF	; 255
 db0:	08 95       	ret

00000db2 <__fp_split3>:
 db2:	57 fd       	sbrc	r21, 7
 db4:	90 58       	subi	r25, 0x80	; 128
 db6:	44 0f       	add	r20, r20
 db8:	55 1f       	adc	r21, r21
 dba:	59 f0       	breq	.+22     	; 0xdd2 <__fp_splitA+0x10>
 dbc:	5f 3f       	cpi	r21, 0xFF	; 255
 dbe:	71 f0       	breq	.+28     	; 0xddc <__fp_splitA+0x1a>
 dc0:	47 95       	ror	r20

00000dc2 <__fp_splitA>:
 dc2:	88 0f       	add	r24, r24
 dc4:	97 fb       	bst	r25, 7
 dc6:	99 1f       	adc	r25, r25
 dc8:	61 f0       	breq	.+24     	; 0xde2 <__fp_splitA+0x20>
 dca:	9f 3f       	cpi	r25, 0xFF	; 255
 dcc:	79 f0       	breq	.+30     	; 0xdec <__fp_splitA+0x2a>
 dce:	87 95       	ror	r24
 dd0:	08 95       	ret
 dd2:	12 16       	cp	r1, r18
 dd4:	13 06       	cpc	r1, r19
 dd6:	14 06       	cpc	r1, r20
 dd8:	55 1f       	adc	r21, r21
 dda:	f2 cf       	rjmp	.-28     	; 0xdc0 <__fp_split3+0xe>
 ddc:	46 95       	lsr	r20
 dde:	f1 df       	rcall	.-30     	; 0xdc2 <__fp_splitA>
 de0:	08 c0       	rjmp	.+16     	; 0xdf2 <__fp_splitA+0x30>
 de2:	16 16       	cp	r1, r22
 de4:	17 06       	cpc	r1, r23
 de6:	18 06       	cpc	r1, r24
 de8:	99 1f       	adc	r25, r25
 dea:	f1 cf       	rjmp	.-30     	; 0xdce <__fp_splitA+0xc>
 dec:	86 95       	lsr	r24
 dee:	71 05       	cpc	r23, r1
 df0:	61 05       	cpc	r22, r1
 df2:	08 94       	sec
 df4:	08 95       	ret

00000df6 <__fp_zero>:
 df6:	e8 94       	clt

00000df8 <__fp_szero>:
 df8:	bb 27       	eor	r27, r27
 dfa:	66 27       	eor	r22, r22
 dfc:	77 27       	eor	r23, r23
 dfe:	cb 01       	movw	r24, r22
 e00:	97 f9       	bld	r25, 7
 e02:	08 95       	ret

00000e04 <_exit>:
 e04:	f8 94       	cli

00000e06 <__stop_program>:
 e06:	ff cf       	rjmp	.-2      	; 0xe06 <__stop_program>
